/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 217);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

eval("var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NvcmUuanM/MWI2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29yZSA9IG1vZHVsZS5leHBvcnRzID0ge3ZlcnNpb246ICcyLjQuMCd9O1xuaWYodHlwZW9mIF9fZSA9PSAnbnVtYmVyJylfX2UgPSBjb3JlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb3JlLmpzXG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrLmpzPzIxYWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9iYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanNcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(115);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzLmpzPzFkZmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5XCIpO1xuXG52YXIgX2RlZmluZVByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2RlZmluZVByb3BlcnR5KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgICgwLCBfZGVmaW5lUHJvcGVydHkyLmRlZmF1bHQpKHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgICBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG4gIH07XG59KCk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcy5qc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

eval("var store      = __webpack_require__(58)('wks')\n  , uid        = __webpack_require__(38)\n  , Symbol     = __webpack_require__(6).Symbol\n  , USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function(name){\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3drcy5qcz8zMDI3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBzdG9yZSAgICAgID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ3drcycpXG4gICwgdWlkICAgICAgICA9IHJlcXVpcmUoJy4vX3VpZCcpXG4gICwgU3ltYm9sICAgICA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLlN5bWJvbFxuICAsIFVTRV9TWU1CT0wgPSB0eXBlb2YgU3ltYm9sID09ICdmdW5jdGlvbic7XG5cbnZhciAkZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obmFtZSl7XG4gIHJldHVybiBzdG9yZVtuYW1lXSB8fCAoc3RvcmVbbmFtZV0gPVxuICAgIFVTRV9TWU1CT0wgJiYgU3ltYm9sW25hbWVdIHx8IChVU0VfU1lNQk9MID8gU3ltYm9sIDogdWlkKSgnU3ltYm9sLicgKyBuYW1lKSk7XG59O1xuXG4kZXhwb3J0cy5zdG9yZSA9IHN0b3JlO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fd2tzLmpzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(125), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mLmpzP2IyNjUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtcHJvdG90eXBlLW9mXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZi5qc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

eval("// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(20)(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2Rlc2NyaXB0b3JzLmpzPzcwNTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhhbmsncyBJRTggZm9yIGhpcyBmdW5ueSBkZWZpbmVQcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbigpe1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAnYScsIHtnZXQ6IGZ1bmN0aW9uKCl7IHJldHVybiA3OyB9fSkuYSAhPSA3O1xufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19kZXNjcmlwdG9ycy5qc1xuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 6 */
/***/ (function(module, exports) {

eval("// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2dsb2JhbC5qcz83N2FhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy84NiNpc3N1ZWNvbW1lbnQtMTE1NzU5MDI4XG52YXIgZ2xvYmFsID0gbW9kdWxlLmV4cG9ydHMgPSB0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnICYmIHdpbmRvdy5NYXRoID09IE1hdGhcbiAgPyB3aW5kb3cgOiB0eXBlb2Ygc2VsZiAhPSAndW5kZWZpbmVkJyAmJiBzZWxmLk1hdGggPT0gTWF0aCA/IHNlbGYgOiBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuaWYodHlwZW9mIF9fZyA9PSAnbnVtYmVyJylfX2cgPSBnbG9iYWw7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2dsb2JhbC5qc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

eval("var anObject       = __webpack_require__(12)\n  , IE8_DOM_DEFINE = __webpack_require__(83)\n  , toPrimitive    = __webpack_require__(61)\n  , dP             = Object.defineProperty;\n\nexports.f = __webpack_require__(5) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1kcC5qcz80MTE2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhbk9iamVjdCAgICAgICA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpXG4gICwgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpXG4gICwgdG9QcmltaXRpdmUgICAgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKVxuICAsIGRQICAgICAgICAgICAgID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnR5IDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcyl7XG4gIGFuT2JqZWN0KE8pO1xuICBQID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEF0dHJpYnV0ZXMpO1xuICBpZihJRThfRE9NX0RFRklORSl0cnkge1xuICAgIHJldHVybiBkUChPLCBQLCBBdHRyaWJ1dGVzKTtcbiAgfSBjYXRjaChlKXsgLyogZW1wdHkgKi8gfVxuICBpZignZ2V0JyBpbiBBdHRyaWJ1dGVzIHx8ICdzZXQnIGluIEF0dHJpYnV0ZXMpdGhyb3cgVHlwZUVycm9yKCdBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCEnKTtcbiAgaWYoJ3ZhbHVlJyBpbiBBdHRyaWJ1dGVzKU9bUF0gPSBBdHRyaWJ1dGVzLnZhbHVlO1xuICByZXR1cm4gTztcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZHAuanNcbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

eval("var $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQuanM/Njc1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJE9iamVjdCA9IE9iamVjdDtcbm1vZHVsZS5leHBvcnRzID0ge1xuICBjcmVhdGU6ICAgICAkT2JqZWN0LmNyZWF0ZSxcbiAgZ2V0UHJvdG86ICAgJE9iamVjdC5nZXRQcm90b3R5cGVPZixcbiAgaXNFbnVtOiAgICAge30ucHJvcGVydHlJc0VudW1lcmFibGUsXG4gIGdldERlc2M6ICAgICRPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLFxuICBzZXREZXNjOiAgICAkT2JqZWN0LmRlZmluZVByb3BlcnR5LFxuICBzZXREZXNjczogICAkT2JqZWN0LmRlZmluZVByb3BlcnRpZXMsXG4gIGdldEtleXM6ICAgICRPYmplY3Qua2V5cyxcbiAgZ2V0TmFtZXM6ICAgJE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzLFxuICBnZXRTeW1ib2xzOiAkT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyxcbiAgZWFjaDogICAgICAgW10uZm9yRWFjaFxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQuanNcbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

eval("var store  = __webpack_require__(200)('wks')\n  , uid    = __webpack_require__(206)\n  , Symbol = __webpack_require__(19).Symbol;\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQud2tzLmpzPzVlNDYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHN0b3JlICA9IHJlcXVpcmUoJy4vJC5zaGFyZWQnKSgnd2tzJylcbiAgLCB1aWQgICAgPSByZXF1aXJlKCcuLyQudWlkJylcbiAgLCBTeW1ib2wgPSByZXF1aXJlKCcuLyQuZ2xvYmFsJykuU3ltYm9sO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihuYW1lKXtcbiAgcmV0dXJuIHN0b3JlW25hbWVdIHx8IChzdG9yZVtuYW1lXSA9XG4gICAgU3ltYm9sICYmIFN5bWJvbFtuYW1lXSB8fCAoU3ltYm9sIHx8IHVpZCkoJ1N5bWJvbC4nICsgbmFtZSkpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQud2tzLmpzXG4vLyBtb2R1bGUgaWQgPSA5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\n\nvar _setPrototypeOf = __webpack_require__(117);\n\nvar _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);\n\nvar _create = __webpack_require__(114);\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _typeof2 = __webpack_require__(79);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(superClass)));\n  }\n\n  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2JhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcz8wNTc4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX3NldFByb3RvdHlwZU9mID0gcmVxdWlyZShcIi4uL2NvcmUtanMvb2JqZWN0L3NldC1wcm90b3R5cGUtb2ZcIik7XG5cbnZhciBfc2V0UHJvdG90eXBlT2YyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2V0UHJvdG90eXBlT2YpO1xuXG52YXIgX2NyZWF0ZSA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL29iamVjdC9jcmVhdGVcIik7XG5cbnZhciBfY3JlYXRlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZSk7XG5cbnZhciBfdHlwZW9mMiA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL3R5cGVvZlwiKTtcblxudmFyIF90eXBlb2YzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdHlwZW9mMik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyAodHlwZW9mIHN1cGVyQ2xhc3MgPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogKDAsIF90eXBlb2YzLmRlZmF1bHQpKHN1cGVyQ2xhc3MpKSk7XG4gIH1cblxuICBzdWJDbGFzcy5wcm90b3R5cGUgPSAoMCwgX2NyZWF0ZTIuZGVmYXVsdCkoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZjIuZGVmYXVsdCA/ICgwLCBfc2V0UHJvdG90eXBlT2YyLmRlZmF1bHQpKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9iYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMuanNcbi8vIG1vZHVsZSBpZCA9IDEwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\n\nvar _typeof2 = __webpack_require__(79);\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2JhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuLmpzP2FhZDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfdHlwZW9mMiA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL3R5cGVvZlwiKTtcblxudmFyIF90eXBlb2YzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdHlwZW9mMik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChzZWxmLCBjYWxsKSB7XG4gIGlmICghc2VsZikge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBjYWxsICYmICgodHlwZW9mIGNhbGwgPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogKDAsIF90eXBlb2YzLmRlZmF1bHQpKGNhbGwpKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4uanNcbi8vIG1vZHVsZSBpZCA9IDExXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

eval("var isObject = __webpack_require__(13);\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hbi1vYmplY3QuanM/MGRhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICBpZighaXNPYmplY3QoaXQpKXRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGFuIG9iamVjdCEnKTtcbiAgcmV0dXJuIGl0O1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FuLW9iamVjdC5qc1xuLy8gbW9kdWxlIGlkID0gMTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 13 */
/***/ (function(module, exports) {

eval("module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pcy1vYmplY3QuanM/MjRjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PT0gJ29iamVjdCcgPyBpdCAhPT0gbnVsbCA6IHR5cGVvZiBpdCA9PT0gJ2Z1bmN0aW9uJztcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pcy1vYmplY3QuanNcbi8vIG1vZHVsZSBpZCA9IDEzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

eval("var global    = __webpack_require__(6)\n  , core      = __webpack_require__(0)\n  , ctx       = __webpack_require__(23)\n  , hide      = __webpack_require__(16)\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19leHBvcnQuanM/ZWNlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2xvYmFsICAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJylcbiAgLCBjb3JlICAgICAgPSByZXF1aXJlKCcuL19jb3JlJylcbiAgLCBjdHggICAgICAgPSByZXF1aXJlKCcuL19jdHgnKVxuICAsIGhpZGUgICAgICA9IHJlcXVpcmUoJy4vX2hpZGUnKVxuICAsIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG52YXIgJGV4cG9ydCA9IGZ1bmN0aW9uKHR5cGUsIG5hbWUsIHNvdXJjZSl7XG4gIHZhciBJU19GT1JDRUQgPSB0eXBlICYgJGV4cG9ydC5GXG4gICAgLCBJU19HTE9CQUwgPSB0eXBlICYgJGV4cG9ydC5HXG4gICAgLCBJU19TVEFUSUMgPSB0eXBlICYgJGV4cG9ydC5TXG4gICAgLCBJU19QUk9UTyAgPSB0eXBlICYgJGV4cG9ydC5QXG4gICAgLCBJU19CSU5EICAgPSB0eXBlICYgJGV4cG9ydC5CXG4gICAgLCBJU19XUkFQICAgPSB0eXBlICYgJGV4cG9ydC5XXG4gICAgLCBleHBvcnRzICAgPSBJU19HTE9CQUwgPyBjb3JlIDogY29yZVtuYW1lXSB8fCAoY29yZVtuYW1lXSA9IHt9KVxuICAgICwgZXhwUHJvdG8gID0gZXhwb3J0c1tQUk9UT1RZUEVdXG4gICAgLCB0YXJnZXQgICAgPSBJU19HTE9CQUwgPyBnbG9iYWwgOiBJU19TVEFUSUMgPyBnbG9iYWxbbmFtZV0gOiAoZ2xvYmFsW25hbWVdIHx8IHt9KVtQUk9UT1RZUEVdXG4gICAgLCBrZXksIG93biwgb3V0O1xuICBpZihJU19HTE9CQUwpc291cmNlID0gbmFtZTtcbiAgZm9yKGtleSBpbiBzb3VyY2Upe1xuICAgIC8vIGNvbnRhaW5zIGluIG5hdGl2ZVxuICAgIG93biA9ICFJU19GT1JDRUQgJiYgdGFyZ2V0ICYmIHRhcmdldFtrZXldICE9PSB1bmRlZmluZWQ7XG4gICAgaWYob3duICYmIGtleSBpbiBleHBvcnRzKWNvbnRpbnVlO1xuICAgIC8vIGV4cG9ydCBuYXRpdmUgb3IgcGFzc2VkXG4gICAgb3V0ID0gb3duID8gdGFyZ2V0W2tleV0gOiBzb3VyY2Vba2V5XTtcbiAgICAvLyBwcmV2ZW50IGdsb2JhbCBwb2xsdXRpb24gZm9yIG5hbWVzcGFjZXNcbiAgICBleHBvcnRzW2tleV0gPSBJU19HTE9CQUwgJiYgdHlwZW9mIHRhcmdldFtrZXldICE9ICdmdW5jdGlvbicgPyBzb3VyY2Vba2V5XVxuICAgIC8vIGJpbmQgdGltZXJzIHRvIGdsb2JhbCBmb3IgY2FsbCBmcm9tIGV4cG9ydCBjb250ZXh0XG4gICAgOiBJU19CSU5EICYmIG93biA/IGN0eChvdXQsIGdsb2JhbClcbiAgICAvLyB3cmFwIGdsb2JhbCBjb25zdHJ1Y3RvcnMgZm9yIHByZXZlbnQgY2hhbmdlIHRoZW0gaW4gbGlicmFyeVxuICAgIDogSVNfV1JBUCAmJiB0YXJnZXRba2V5XSA9PSBvdXQgPyAoZnVuY3Rpb24oQyl7XG4gICAgICB2YXIgRiA9IGZ1bmN0aW9uKGEsIGIsIGMpe1xuICAgICAgICBpZih0aGlzIGluc3RhbmNlb2YgQyl7XG4gICAgICAgICAgc3dpdGNoKGFyZ3VtZW50cy5sZW5ndGgpe1xuICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gbmV3IEM7XG4gICAgICAgICAgICBjYXNlIDE6IHJldHVybiBuZXcgQyhhKTtcbiAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIG5ldyBDKGEsIGIpO1xuICAgICAgICAgIH0gcmV0dXJuIG5ldyBDKGEsIGIsIGMpO1xuICAgICAgICB9IHJldHVybiBDLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9O1xuICAgICAgRltQUk9UT1RZUEVdID0gQ1tQUk9UT1RZUEVdO1xuICAgICAgcmV0dXJuIEY7XG4gICAgLy8gbWFrZSBzdGF0aWMgdmVyc2lvbnMgZm9yIHByb3RvdHlwZSBtZXRob2RzXG4gICAgfSkob3V0KSA6IElTX1BST1RPICYmIHR5cGVvZiBvdXQgPT0gJ2Z1bmN0aW9uJyA/IGN0eChGdW5jdGlvbi5jYWxsLCBvdXQpIDogb3V0O1xuICAgIC8vIGV4cG9ydCBwcm90byBtZXRob2RzIHRvIGNvcmUuJUNPTlNUUlVDVE9SJS5tZXRob2RzLiVOQU1FJVxuICAgIGlmKElTX1BST1RPKXtcbiAgICAgIChleHBvcnRzLnZpcnR1YWwgfHwgKGV4cG9ydHMudmlydHVhbCA9IHt9KSlba2V5XSA9IG91dDtcbiAgICAgIC8vIGV4cG9ydCBwcm90byBtZXRob2RzIHRvIGNvcmUuJUNPTlNUUlVDVE9SJS5wcm90b3R5cGUuJU5BTUUlXG4gICAgICBpZih0eXBlICYgJGV4cG9ydC5SICYmIGV4cFByb3RvICYmICFleHBQcm90b1trZXldKWhpZGUoZXhwUHJvdG8sIGtleSwgb3V0KTtcbiAgICB9XG4gIH1cbn07XG4vLyB0eXBlIGJpdG1hcFxuJGV4cG9ydC5GID0gMTsgICAvLyBmb3JjZWRcbiRleHBvcnQuRyA9IDI7ICAgLy8gZ2xvYmFsXG4kZXhwb3J0LlMgPSA0OyAgIC8vIHN0YXRpY1xuJGV4cG9ydC5QID0gODsgICAvLyBwcm90b1xuJGV4cG9ydC5CID0gMTY7ICAvLyBiaW5kXG4kZXhwb3J0LlcgPSAzMjsgIC8vIHdyYXBcbiRleHBvcnQuVSA9IDY0OyAgLy8gc2FmZVxuJGV4cG9ydC5SID0gMTI4OyAvLyByZWFsIHByb3RvIG1ldGhvZCBmb3IgYGxpYnJhcnlgIFxubW9kdWxlLmV4cG9ydHMgPSAkZXhwb3J0O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZXhwb3J0LmpzXG4vLyBtb2R1bGUgaWQgPSAxNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 15 */
/***/ (function(module, exports) {

eval("var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19oYXMuanM/ZDg1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaGFzT3duUHJvcGVydHkgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQsIGtleSl7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGl0LCBrZXkpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2hhcy5qc1xuLy8gbW9kdWxlIGlkID0gMTVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

eval("var dP         = __webpack_require__(7)\n  , createDesc = __webpack_require__(35);\nmodule.exports = __webpack_require__(5) ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19oaWRlLmpzP2E2ZGEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRQICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKVxuICAsIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBmdW5jdGlvbihvYmplY3QsIGtleSwgdmFsdWUpe1xuICByZXR1cm4gZFAuZihvYmplY3QsIGtleSwgY3JlYXRlRGVzYygxLCB2YWx1ZSkpO1xufSA6IGZ1bmN0aW9uKG9iamVjdCwga2V5LCB2YWx1ZSl7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG4gIHJldHVybiBvYmplY3Q7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faGlkZS5qc1xuLy8gbW9kdWxlIGlkID0gMTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

eval("// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(50)\n  , defined = __webpack_require__(31);\nmodule.exports = function(it){\n  return IObject(defined(it));\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1pb2JqZWN0LmpzPzY5NDYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdG8gaW5kZXhlZCBvYmplY3QsIHRvT2JqZWN0IHdpdGggZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBzdHJpbmdzXG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKVxuICAsIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIElPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWlvYmplY3QuanNcbi8vIG1vZHVsZSBpZCA9IDE3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// exposes a single instance\nvar audioContext = null;\n\nvar AudioContext = window.AudioContext || window.webkitAudioContext;\n\nif (AudioContext) {\n  audioContext = new AudioContext();\n\n  if (/(iPhone|iPad)/i.test(navigator.userAgent) && audioContext.sampleRate < 44100) {\n    var buffer = audioContext.createBuffer(1, 1, 44100);\n    var dummy = audioContext.createBufferSource();\n    dummy.buffer = buffer;\n    dummy.connect(audioContext.destination);\n    dummy.start(0);\n    dummy.disconnect();\n  }\n}\n\nexports.default = audioContext;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1ZGlvLWNvbnRleHQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsSUFBSSxlQUFlLElBQWY7O0FBRUosSUFBSSxlQUFlLE9BQU8sWUFBUCxJQUF1QixPQUFPLGtCQUFQOztBQUUxQyxJQUFHLFlBQUgsRUFBaUI7QUFDZixpQkFBZSxJQUFJLFlBQUosRUFBZixDQURlOztBQUdmLE1BQUksaUJBQWlCLElBQWpCLENBQXNCLFVBQVUsU0FBVixDQUF0QixJQUE4QyxhQUFhLFVBQWIsR0FBMEIsS0FBMUIsRUFBaUM7QUFDakYsUUFBSSxTQUFTLGFBQWEsWUFBYixDQUEwQixDQUExQixFQUE2QixDQUE3QixFQUFnQyxLQUFoQyxDQUFULENBRDZFO0FBRWpGLFFBQUksUUFBUSxhQUFhLGtCQUFiLEVBQVIsQ0FGNkU7QUFHakYsVUFBTSxNQUFOLEdBQWUsTUFBZixDQUhpRjtBQUlqRixVQUFNLE9BQU4sQ0FBYyxhQUFhLFdBQWIsQ0FBZCxDQUppRjtBQUtqRixVQUFNLEtBQU4sQ0FBWSxDQUFaLEVBTGlGO0FBTWpGLFVBQU0sVUFBTixHQU5pRjtHQUFuRjtDQUhGOztrQkFhZSIsImZpbGUiOiJhdWRpby1jb250ZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXhwb3NlcyBhIHNpbmdsZSBpbnN0YW5jZVxudmFyIGF1ZGlvQ29udGV4dCA9IG51bGw7XG5cbnZhciBBdWRpb0NvbnRleHQgPSB3aW5kb3cuQXVkaW9Db250ZXh0IHx8IHdpbmRvdy53ZWJraXRBdWRpb0NvbnRleHQ7XG5cbmlmKEF1ZGlvQ29udGV4dCkge1xuICBhdWRpb0NvbnRleHQgPSBuZXcgQXVkaW9Db250ZXh0KCk7XG5cbiAgaWYgKC8oaVBob25lfGlQYWQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSAmJiBhdWRpb0NvbnRleHQuc2FtcGxlUmF0ZSA8IDQ0MTAwKSB7XG4gICAgdmFyIGJ1ZmZlciA9IGF1ZGlvQ29udGV4dC5jcmVhdGVCdWZmZXIoMSwgMSwgNDQxMDApO1xuICAgIHZhciBkdW1teSA9IGF1ZGlvQ29udGV4dC5jcmVhdGVCdWZmZXJTb3VyY2UoKTtcbiAgICBkdW1teS5idWZmZXIgPSBidWZmZXI7XG4gICAgZHVtbXkuY29ubmVjdChhdWRpb0NvbnRleHQuZGVzdGluYXRpb24pO1xuICAgIGR1bW15LnN0YXJ0KDApO1xuICAgIGR1bW15LmRpc2Nvbm5lY3QoKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBhdWRpb0NvbnRleHQ7XG4iXX0=//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWF1ZGlvL2Rpc3QvY29yZS9hdWRpby1jb250ZXh0LmpzPzI2MzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG4vLyBleHBvc2VzIGEgc2luZ2xlIGluc3RhbmNlXG52YXIgYXVkaW9Db250ZXh0ID0gbnVsbDtcblxudmFyIEF1ZGlvQ29udGV4dCA9IHdpbmRvdy5BdWRpb0NvbnRleHQgfHwgd2luZG93LndlYmtpdEF1ZGlvQ29udGV4dDtcblxuaWYgKEF1ZGlvQ29udGV4dCkge1xuICBhdWRpb0NvbnRleHQgPSBuZXcgQXVkaW9Db250ZXh0KCk7XG5cbiAgaWYgKC8oaVBob25lfGlQYWQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSAmJiBhdWRpb0NvbnRleHQuc2FtcGxlUmF0ZSA8IDQ0MTAwKSB7XG4gICAgdmFyIGJ1ZmZlciA9IGF1ZGlvQ29udGV4dC5jcmVhdGVCdWZmZXIoMSwgMSwgNDQxMDApO1xuICAgIHZhciBkdW1teSA9IGF1ZGlvQ29udGV4dC5jcmVhdGVCdWZmZXJTb3VyY2UoKTtcbiAgICBkdW1teS5idWZmZXIgPSBidWZmZXI7XG4gICAgZHVtbXkuY29ubmVjdChhdWRpb0NvbnRleHQuZGVzdGluYXRpb24pO1xuICAgIGR1bW15LnN0YXJ0KDApO1xuICAgIGR1bW15LmRpc2Nvbm5lY3QoKTtcbiAgfVxufVxuXG5leHBvcnRzLmRlZmF1bHQgPSBhdWRpb0NvbnRleHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1GMVpHbHZMV052Ym5SbGVIUXVhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanM3T3pzN08wRkJRMEVzU1VGQlNTeGxRVUZsTEVsQlFXWTdPMEZCUlVvc1NVRkJTU3hsUVVGbExFOUJRVThzV1VGQlVDeEpRVUYxUWl4UFFVRlBMR3RDUVVGUU96dEJRVVV4UXl4SlFVRkhMRmxCUVVnc1JVRkJhVUk3UVVGRFppeHBRa0ZCWlN4SlFVRkpMRmxCUVVvc1JVRkJaaXhEUVVSbE96dEJRVWRtTEUxQlFVa3NhVUpCUVdsQ0xFbEJRV3BDTEVOQlFYTkNMRlZCUVZVc1UwRkJWaXhEUVVGMFFpeEpRVUU0UXl4aFFVRmhMRlZCUVdJc1IwRkJNRUlzUzBGQk1VSXNSVUZCYVVNN1FVRkRha1lzVVVGQlNTeFRRVUZUTEdGQlFXRXNXVUZCWWl4RFFVRXdRaXhEUVVFeFFpeEZRVUUyUWl4RFFVRTNRaXhGUVVGblF5eExRVUZvUXl4RFFVRlVMRU5CUkRaRk8wRkJSV3BHTEZGQlFVa3NVVUZCVVN4aFFVRmhMR3RDUVVGaUxFVkJRVklzUTBGR05rVTdRVUZIYWtZc1ZVRkJUU3hOUVVGT0xFZEJRV1VzVFVGQlppeERRVWhwUmp0QlFVbHFSaXhWUVVGTkxFOUJRVTRzUTBGQll5eGhRVUZoTEZkQlFXSXNRMEZCWkN4RFFVcHBSanRCUVV0cVJpeFZRVUZOTEV0QlFVNHNRMEZCV1N4RFFVRmFMRVZCVEdsR08wRkJUV3BHTEZWQlFVMHNWVUZCVGl4SFFVNXBSanRIUVVGdVJqdERRVWhHT3p0clFrRmhaU0lzSW1acGJHVWlPaUpoZFdScGJ5MWpiMjUwWlhoMExtcHpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpTHk4Z1pYaHdiM05sY3lCaElITnBibWRzWlNCcGJuTjBZVzVqWlZ4dWRtRnlJR0YxWkdsdlEyOXVkR1Y0ZENBOUlHNTFiR3c3WEc1Y2JuWmhjaUJCZFdScGIwTnZiblJsZUhRZ1BTQjNhVzVrYjNjdVFYVmthVzlEYjI1MFpYaDBJSHg4SUhkcGJtUnZkeTUzWldKcmFYUkJkV1JwYjBOdmJuUmxlSFE3WEc1Y2JtbG1LRUYxWkdsdlEyOXVkR1Y0ZENrZ2UxeHVJQ0JoZFdScGIwTnZiblJsZUhRZ1BTQnVaWGNnUVhWa2FXOURiMjUwWlhoMEtDazdYRzVjYmlBZ2FXWWdLQzhvYVZCb2IyNWxmR2xRWVdRcEwya3VkR1Z6ZENodVlYWnBaMkYwYjNJdWRYTmxja0ZuWlc1MEtTQW1KaUJoZFdScGIwTnZiblJsZUhRdWMyRnRjR3hsVW1GMFpTQThJRFEwTVRBd0tTQjdYRzRnSUNBZ2RtRnlJR0oxWm1abGNpQTlJR0YxWkdsdlEyOXVkR1Y0ZEM1amNtVmhkR1ZDZFdabVpYSW9NU3dnTVN3Z05EUXhNREFwTzF4dUlDQWdJSFpoY2lCa2RXMXRlU0E5SUdGMVpHbHZRMjl1ZEdWNGRDNWpjbVZoZEdWQ2RXWm1aWEpUYjNWeVkyVW9LVHRjYmlBZ0lDQmtkVzF0ZVM1aWRXWm1aWElnUFNCaWRXWm1aWEk3WEc0Z0lDQWdaSFZ0YlhrdVkyOXVibVZqZENoaGRXUnBiME52Ym5SbGVIUXVaR1Z6ZEdsdVlYUnBiMjRwTzF4dUlDQWdJR1IxYlcxNUxuTjBZWEowS0RBcE8xeHVJQ0FnSUdSMWJXMTVMbVJwYzJOdmJtNWxZM1FvS1R0Y2JpQWdmVnh1ZlZ4dVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCaGRXUnBiME52Ym5SbGVIUTdYRzRpWFgwPVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1hdWRpby9kaXN0L2NvcmUvYXVkaW8tY29udGV4dC5qc1xuLy8gbW9kdWxlIGlkID0gMThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 19 */
/***/ (function(module, exports) {

eval("// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmdsb2JhbC5qcz80OTYwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy84NiNpc3N1ZWNvbW1lbnQtMTE1NzU5MDI4XG52YXIgZ2xvYmFsID0gbW9kdWxlLmV4cG9ydHMgPSB0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnICYmIHdpbmRvdy5NYXRoID09IE1hdGhcbiAgPyB3aW5kb3cgOiB0eXBlb2Ygc2VsZiAhPSAndW5kZWZpbmVkJyAmJiBzZWxmLk1hdGggPT0gTWF0aCA/IHNlbGYgOiBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuaWYodHlwZW9mIF9fZyA9PSAnbnVtYmVyJylfX2cgPSBnbG9iYWw7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQuZ2xvYmFsLmpzXG4vLyBtb2R1bGUgaWQgPSAxOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 20 */
/***/ (function(module, exports) {

eval("module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19mYWlscy5qcz85MzVkIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZXhlYyl7XG4gIHRyeSB7XG4gICAgcmV0dXJuICEhZXhlYygpO1xuICB9IGNhdGNoKGUpe1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZmFpbHMuanNcbi8vIG1vZHVsZSBpZCA9IDIwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 21 */
/***/ (function(module, exports) {

eval("var core = module.exports = {version: '1.2.6'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmNvcmUuanM/ODM2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29yZSA9IG1vZHVsZS5leHBvcnRzID0ge3ZlcnNpb246ICcxLjIuNid9O1xuaWYodHlwZW9mIF9fZSA9PSAnbnVtYmVyJylfX2UgPSBjb3JlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmNvcmUuanNcbi8vIG1vZHVsZSBpZCA9IDIxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = __webpack_require__(1);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(2);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @class TimeEngine\n */\n\nvar TimeEngine = function () {\n  function TimeEngine() {\n    (0, _classCallCheck3.default)(this, TimeEngine);\n\n    this.master = null;\n    this.outputNode = null;\n  }\n\n  (0, _createClass3.default)(TimeEngine, [{\n    key: \"resetTime\",\n    value: function resetTime() {\n      var time = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];\n\n      if (this.master) this.master.resetEngineTime(this, time);\n    }\n\n    /**\n     * Transported interface\n     *   - syncPosition(time, position, speed), called to reposition TimeEngine, returns next position\n     *   - advancePosition(time, position, speed), called to generate next event at given time and position, returns next position\n     */\n\n  }, {\n    key: \"resetPosition\",\n    value: function resetPosition() {\n      var position = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];\n\n      if (this.master) this.master.resetEnginePosition(this, position);\n    }\n\n    /**\n     * Speed-controlled interface\n     *   - syncSpeed(time, position, speed, ), called to\n     */\n\n  }, {\n    key: \"currentTime\",\n    get: function get() {\n      if (this.master) return this.master.currentTime;\n\n      return undefined;\n    }\n  }, {\n    key: \"currentPosition\",\n    get: function get() {\n      var master = this.master;\n\n      if (master && master.currentPosition !== undefined) return master.currentPosition;\n\n      return undefined;\n    }\n\n    /**\n     * Scheduled interface\n     *   - advanceTime(time), called to generate next event at given time, returns next time\n     */\n\n  }], [{\n    key: \"implementsScheduled\",\n    value: function implementsScheduled(engine) {\n      return engine.advanceTime && engine.advanceTime instanceof Function;\n    }\n  }, {\n    key: \"implementsTransported\",\n    value: function implementsTransported(engine) {\n      return engine.syncPosition && engine.syncPosition instanceof Function && engine.advancePosition && engine.advancePosition instanceof Function;\n    }\n  }, {\n    key: \"implementsSpeedControlled\",\n    value: function implementsSpeedControlled(engine) {\n      return engine.syncSpeed && engine.syncSpeed instanceof Function;\n    }\n  }]);\n  return TimeEngine;\n}();\n\nexports.default = TimeEngine;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpbWUtZW5naW5lLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBR3FCO0FBQ25CLFdBRG1CLFVBQ25CLEdBQWM7d0NBREssWUFDTDs7QUFDWixTQUFLLE1BQUwsR0FBYyxJQUFkLENBRFk7QUFFWixTQUFLLFVBQUwsR0FBa0IsSUFBbEIsQ0FGWTtHQUFkOzs2QkFEbUI7O2dDQThCUztVQUFsQiw2REFBTyx5QkFBVzs7QUFDMUIsVUFBSSxLQUFLLE1BQUwsRUFDRixLQUFLLE1BQUwsQ0FBWSxlQUFaLENBQTRCLElBQTVCLEVBQWtDLElBQWxDLEVBREY7Ozs7Ozs7Ozs7O29DQWdCa0M7VUFBdEIsaUVBQVcseUJBQVc7O0FBQ2xDLFVBQUksS0FBSyxNQUFMLEVBQ0YsS0FBSyxNQUFMLENBQVksbUJBQVosQ0FBZ0MsSUFBaEMsRUFBc0MsUUFBdEMsRUFERjs7Ozs7Ozs7Ozt3QkExQ2dCO0FBQ2hCLFVBQUksS0FBSyxNQUFMLEVBQ0YsT0FBTyxLQUFLLE1BQUwsQ0FBWSxXQUFaLENBRFQ7O0FBR0EsYUFBTyxTQUFQLENBSmdCOzs7O3dCQU9JO0FBQ3BCLFVBQUksU0FBUyxLQUFLLE1BQUwsQ0FETzs7QUFHcEIsVUFBSSxVQUFVLE9BQU8sZUFBUCxLQUEyQixTQUEzQixFQUNaLE9BQU8sT0FBTyxlQUFQLENBRFQ7O0FBR0EsYUFBTyxTQUFQLENBTm9COzs7Ozs7Ozs7O3dDQWFLLFFBQVE7QUFDakMsYUFBUSxPQUFPLFdBQVAsSUFBc0IsT0FBTyxXQUFQLFlBQThCLFFBQTlCLENBREc7Ozs7MENBY04sUUFBUTtBQUNuQyxhQUNFLE9BQU8sWUFBUCxJQUF1QixPQUFPLFlBQVAsWUFBK0IsUUFBL0IsSUFDdkIsT0FBTyxlQUFQLElBQTBCLE9BQU8sZUFBUCxZQUFrQyxRQUFsQyxDQUhPOzs7OzhDQWdCSixRQUFRO0FBQ3ZDLGFBQVEsT0FBTyxTQUFQLElBQW9CLE9BQU8sU0FBUCxZQUE0QixRQUE1QixDQURXOzs7U0F4RHRCIiwiZmlsZSI6InRpbWUtZW5naW5lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAY2xhc3MgVGltZUVuZ2luZVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUaW1lRW5naW5lIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5tYXN0ZXIgPSBudWxsO1xuICAgIHRoaXMub3V0cHV0Tm9kZSA9IG51bGw7XG4gIH1cblxuICBnZXQgY3VycmVudFRpbWUoKSB7XG4gICAgaWYgKHRoaXMubWFzdGVyKVxuICAgICAgcmV0dXJuIHRoaXMubWFzdGVyLmN1cnJlbnRUaW1lO1xuXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGdldCBjdXJyZW50UG9zaXRpb24oKSB7XG4gICAgdmFyIG1hc3RlciA9IHRoaXMubWFzdGVyO1xuXG4gICAgaWYgKG1hc3RlciAmJiBtYXN0ZXIuY3VycmVudFBvc2l0aW9uICE9PSB1bmRlZmluZWQpXG4gICAgICByZXR1cm4gbWFzdGVyLmN1cnJlbnRQb3NpdGlvbjtcblxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICAvKipcbiAgICogU2NoZWR1bGVkIGludGVyZmFjZVxuICAgKiAgIC0gYWR2YW5jZVRpbWUodGltZSksIGNhbGxlZCB0byBnZW5lcmF0ZSBuZXh0IGV2ZW50IGF0IGdpdmVuIHRpbWUsIHJldHVybnMgbmV4dCB0aW1lXG4gICAqL1xuICBzdGF0aWMgaW1wbGVtZW50c1NjaGVkdWxlZChlbmdpbmUpIHtcbiAgICByZXR1cm4gKGVuZ2luZS5hZHZhbmNlVGltZSAmJiBlbmdpbmUuYWR2YW5jZVRpbWUgaW5zdGFuY2VvZiBGdW5jdGlvbik7XG4gIH1cblxuICByZXNldFRpbWUodGltZSA9IHVuZGVmaW5lZCkge1xuICAgIGlmICh0aGlzLm1hc3RlcilcbiAgICAgIHRoaXMubWFzdGVyLnJlc2V0RW5naW5lVGltZSh0aGlzLCB0aW1lKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUcmFuc3BvcnRlZCBpbnRlcmZhY2VcbiAgICogICAtIHN5bmNQb3NpdGlvbih0aW1lLCBwb3NpdGlvbiwgc3BlZWQpLCBjYWxsZWQgdG8gcmVwb3NpdGlvbiBUaW1lRW5naW5lLCByZXR1cm5zIG5leHQgcG9zaXRpb25cbiAgICogICAtIGFkdmFuY2VQb3NpdGlvbih0aW1lLCBwb3NpdGlvbiwgc3BlZWQpLCBjYWxsZWQgdG8gZ2VuZXJhdGUgbmV4dCBldmVudCBhdCBnaXZlbiB0aW1lIGFuZCBwb3NpdGlvbiwgcmV0dXJucyBuZXh0IHBvc2l0aW9uXG4gICAqL1xuICBzdGF0aWMgaW1wbGVtZW50c1RyYW5zcG9ydGVkKGVuZ2luZSkge1xuICAgIHJldHVybiAoXG4gICAgICBlbmdpbmUuc3luY1Bvc2l0aW9uICYmIGVuZ2luZS5zeW5jUG9zaXRpb24gaW5zdGFuY2VvZiBGdW5jdGlvbiAmJlxuICAgICAgZW5naW5lLmFkdmFuY2VQb3NpdGlvbiAmJiBlbmdpbmUuYWR2YW5jZVBvc2l0aW9uIGluc3RhbmNlb2YgRnVuY3Rpb25cbiAgICApO1xuICB9XG5cbiAgcmVzZXRQb3NpdGlvbihwb3NpdGlvbiA9IHVuZGVmaW5lZCkge1xuICAgIGlmICh0aGlzLm1hc3RlcilcbiAgICAgIHRoaXMubWFzdGVyLnJlc2V0RW5naW5lUG9zaXRpb24odGhpcywgcG9zaXRpb24pO1xuICB9XG5cbiAgLyoqXG4gICAqIFNwZWVkLWNvbnRyb2xsZWQgaW50ZXJmYWNlXG4gICAqICAgLSBzeW5jU3BlZWQodGltZSwgcG9zaXRpb24sIHNwZWVkLCApLCBjYWxsZWQgdG9cbiAgICovXG4gIHN0YXRpYyBpbXBsZW1lbnRzU3BlZWRDb250cm9sbGVkKGVuZ2luZSkge1xuICAgIHJldHVybiAoZW5naW5lLnN5bmNTcGVlZCAmJiBlbmdpbmUuc3luY1NwZWVkIGluc3RhbmNlb2YgRnVuY3Rpb24pO1xuICB9XG59XG4iXX0=//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

eval("// optional / simple context binding\nvar aFunction = __webpack_require__(131);\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jdHguanM/Y2UwMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBvcHRpb25hbCAvIHNpbXBsZSBjb250ZXh0IGJpbmRpbmdcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGZuLCB0aGF0LCBsZW5ndGgpe1xuICBhRnVuY3Rpb24oZm4pO1xuICBpZih0aGF0ID09PSB1bmRlZmluZWQpcmV0dXJuIGZuO1xuICBzd2l0Y2gobGVuZ3RoKXtcbiAgICBjYXNlIDE6IHJldHVybiBmdW5jdGlvbihhKXtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEpO1xuICAgIH07XG4gICAgY2FzZSAyOiByZXR1cm4gZnVuY3Rpb24oYSwgYil7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiKTtcbiAgICB9O1xuICAgIGNhc2UgMzogcmV0dXJuIGZ1bmN0aW9uKGEsIGIsIGMpe1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYiwgYyk7XG4gICAgfTtcbiAgfVxuICByZXR1cm4gZnVuY3Rpb24oLyogLi4uYXJncyAqLyl7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7XG4gIH07XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY3R4LmpzXG4vLyBtb2R1bGUgaWQgPSAyM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 24 */
/***/ (function(module, exports) {

eval("module.exports = {};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyYXRvcnMuanM/YWZmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlcmF0b3JzLmpzXG4vLyBtb2R1bGUgaWQgPSAyNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

eval("var META     = __webpack_require__(38)('meta')\n  , isObject = __webpack_require__(13)\n  , has      = __webpack_require__(15)\n  , setDesc  = __webpack_require__(7).f\n  , id       = 0;\nvar isExtensible = Object.isExtensible || function(){\n  return true;\n};\nvar FREEZE = !__webpack_require__(20)(function(){\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function(it){\n  setDesc(it, META, {value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  }});\n};\nvar fastKey = function(it, create){\n  // return primitive with prefix\n  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return 'F';\n    // not necessary to add metadata\n    if(!create)return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function(it, create){\n  if(!has(it, META)){\n    // can't set metadata to uncaught frozen object\n    if(!isExtensible(it))return true;\n    // not necessary to add metadata\n    if(!create)return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function(it){\n  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY:      META,\n  NEED:     false,\n  fastKey:  fastKey,\n  getWeak:  getWeak,\n  onFreeze: onFreeze\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19tZXRhLmpzPzU1M2QiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIE1FVEEgICAgID0gcmVxdWlyZSgnLi9fdWlkJykoJ21ldGEnKVxuICAsIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JylcbiAgLCBoYXMgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpXG4gICwgc2V0RGVzYyAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mXG4gICwgaWQgICAgICAgPSAwO1xudmFyIGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGUgfHwgZnVuY3Rpb24oKXtcbiAgcmV0dXJuIHRydWU7XG59O1xudmFyIEZSRUVaRSA9ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uKCl7XG4gIHJldHVybiBpc0V4dGVuc2libGUoT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKHt9KSk7XG59KTtcbnZhciBzZXRNZXRhID0gZnVuY3Rpb24oaXQpe1xuICBzZXREZXNjKGl0LCBNRVRBLCB7dmFsdWU6IHtcbiAgICBpOiAnTycgKyArK2lkLCAvLyBvYmplY3QgSURcbiAgICB3OiB7fSAgICAgICAgICAvLyB3ZWFrIGNvbGxlY3Rpb25zIElEc1xuICB9fSk7XG59O1xudmFyIGZhc3RLZXkgPSBmdW5jdGlvbihpdCwgY3JlYXRlKXtcbiAgLy8gcmV0dXJuIHByaW1pdGl2ZSB3aXRoIHByZWZpeFxuICBpZighaXNPYmplY3QoaXQpKXJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCcgPyBpdCA6ICh0eXBlb2YgaXQgPT0gJ3N0cmluZycgPyAnUycgOiAnUCcpICsgaXQ7XG4gIGlmKCFoYXMoaXQsIE1FVEEpKXtcbiAgICAvLyBjYW4ndCBzZXQgbWV0YWRhdGEgdG8gdW5jYXVnaHQgZnJvemVuIG9iamVjdFxuICAgIGlmKCFpc0V4dGVuc2libGUoaXQpKXJldHVybiAnRic7XG4gICAgLy8gbm90IG5lY2Vzc2FyeSB0byBhZGQgbWV0YWRhdGFcbiAgICBpZighY3JlYXRlKXJldHVybiAnRSc7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIG9iamVjdCBJRFxuICB9IHJldHVybiBpdFtNRVRBXS5pO1xufTtcbnZhciBnZXRXZWFrID0gZnVuY3Rpb24oaXQsIGNyZWF0ZSl7XG4gIGlmKCFoYXMoaXQsIE1FVEEpKXtcbiAgICAvLyBjYW4ndCBzZXQgbWV0YWRhdGEgdG8gdW5jYXVnaHQgZnJvemVuIG9iamVjdFxuICAgIGlmKCFpc0V4dGVuc2libGUoaXQpKXJldHVybiB0cnVlO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYoIWNyZWF0ZSlyZXR1cm4gZmFsc2U7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIGhhc2ggd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfSByZXR1cm4gaXRbTUVUQV0udztcbn07XG4vLyBhZGQgbWV0YWRhdGEgb24gZnJlZXplLWZhbWlseSBtZXRob2RzIGNhbGxpbmdcbnZhciBvbkZyZWV6ZSA9IGZ1bmN0aW9uKGl0KXtcbiAgaWYoRlJFRVpFICYmIG1ldGEuTkVFRCAmJiBpc0V4dGVuc2libGUoaXQpICYmICFoYXMoaXQsIE1FVEEpKXNldE1ldGEoaXQpO1xuICByZXR1cm4gaXQ7XG59O1xudmFyIG1ldGEgPSBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgS0VZOiAgICAgIE1FVEEsXG4gIE5FRUQ6ICAgICBmYWxzZSxcbiAgZmFzdEtleTogIGZhc3RLZXksXG4gIGdldFdlYWs6ICBnZXRXZWFrLFxuICBvbkZyZWV6ZTogb25GcmVlemVcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19tZXRhLmpzXG4vLyBtb2R1bGUgaWQgPSAyNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys       = __webpack_require__(88)\n  , enumBugKeys = __webpack_require__(49);\n\nmodule.exports = Object.keys || function keys(O){\n  return $keys(O, enumBugKeys);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3Qta2V5cy5qcz9mNWJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi4xNCAvIDE1LjIuMy4xNCBPYmplY3Qua2V5cyhPKVxudmFyICRrZXlzICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKVxuICAsIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIGtleXMoTyl7XG4gIHJldHVybiAka2V5cyhPLCBlbnVtQnVnS2V5cyk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWtleXMuanNcbi8vIG1vZHVsZSBpZCA9IDI2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(1);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(2);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(11);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(10);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _timeEngine = __webpack_require__(22);\n\nvar _timeEngine2 = _interopRequireDefault(_timeEngine);\n\nvar _audioContext = __webpack_require__(18);\n\nvar _audioContext2 = _interopRequireDefault(_audioContext);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @class AudioTimeEngine\n */\n\nvar AudioTimeEngine = function (_TimeEngine) {\n  (0, _inherits3.default)(AudioTimeEngine, _TimeEngine);\n\n  function AudioTimeEngine() {\n    var audioContext = arguments.length <= 0 || arguments[0] === undefined ? _audioContext2.default : arguments[0];\n    (0, _classCallCheck3.default)(this, AudioTimeEngine);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(AudioTimeEngine).call(this));\n\n    _this.audioContext = audioContext;\n    _this.outputNode = null;\n    return _this;\n  }\n\n  (0, _createClass3.default)(AudioTimeEngine, [{\n    key: 'connect',\n    value: function connect(target) {\n      this.outputNode.connect(target);\n      return this;\n    }\n  }, {\n    key: 'disconnect',\n    value: function disconnect(connection) {\n      this.outputNode.disconnect(connection);\n      return this;\n    }\n  }]);\n  return AudioTimeEngine;\n}(_timeEngine2.default);\n\nexports.default = AudioTimeEngine;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1ZGlvLXRpbWUtZW5naW5lLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7Ozs7OztJQUtxQjs7O0FBQ25CLFdBRG1CLGVBQ25CLEdBQWdEO1FBQXBDLDJHQUFvQzt3Q0FEN0IsaUJBQzZCOzs2RkFEN0IsNkJBQzZCOztBQUc5QyxVQUFLLFlBQUwsR0FBb0IsWUFBcEIsQ0FIOEM7QUFJOUMsVUFBSyxVQUFMLEdBQWtCLElBQWxCLENBSjhDOztHQUFoRDs7NkJBRG1COzs0QkFRWCxRQUFRO0FBQ2QsV0FBSyxVQUFMLENBQWdCLE9BQWhCLENBQXdCLE1BQXhCLEVBRGM7QUFFZCxhQUFPLElBQVAsQ0FGYzs7OzsrQkFLTCxZQUFZO0FBQ3JCLFdBQUssVUFBTCxDQUFnQixVQUFoQixDQUEyQixVQUEzQixFQURxQjtBQUVyQixhQUFPLElBQVAsQ0FGcUI7OztTQWJKIiwiZmlsZSI6ImF1ZGlvLXRpbWUtZW5naW5lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRpbWVFbmdpbmUgZnJvbSAnLi90aW1lLWVuZ2luZSc7XG5pbXBvcnQgZGVmYXVsdEF1ZGlvQ29udGV4dCBmcm9tICcuL2F1ZGlvLWNvbnRleHQnO1xuXG4vKipcbiAqIEBjbGFzcyBBdWRpb1RpbWVFbmdpbmVcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXVkaW9UaW1lRW5naW5lIGV4dGVuZHMgVGltZUVuZ2luZXtcbiAgY29uc3RydWN0b3IoYXVkaW9Db250ZXh0ID0gZGVmYXVsdEF1ZGlvQ29udGV4dCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLmF1ZGlvQ29udGV4dCA9IGF1ZGlvQ29udGV4dDtcbiAgICB0aGlzLm91dHB1dE5vZGUgPSBudWxsO1xuICB9XG5cbiAgY29ubmVjdCh0YXJnZXQpIHtcbiAgICB0aGlzLm91dHB1dE5vZGUuY29ubmVjdCh0YXJnZXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZGlzY29ubmVjdChjb25uZWN0aW9uKSB7XG4gICAgdGhpcy5vdXRwdXROb2RlLmRpc2Nvbm5lY3QoY29ubmVjdGlvbik7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cbiJdfQ==//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWF1ZGlvL2Rpc3QvY29yZS9hdWRpby10aW1lLWVuZ2luZS5qcz8yMzExIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9nZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LXByb3RvdHlwZS1vZicpO1xuXG52YXIgX2dldFByb3RvdHlwZU9mMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldFByb3RvdHlwZU9mKTtcblxudmFyIF9jbGFzc0NhbGxDaGVjazIgPSByZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2snKTtcblxudmFyIF9jbGFzc0NhbGxDaGVjazMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbGFzc0NhbGxDaGVjazIpO1xuXG52YXIgX2NyZWF0ZUNsYXNzMiA9IHJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcycpO1xuXG52YXIgX2NyZWF0ZUNsYXNzMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZUNsYXNzMik7XG5cbnZhciBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIgPSByZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybicpO1xuXG52YXIgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4zID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIpO1xuXG52YXIgX2luaGVyaXRzMiA9IHJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9pbmhlcml0cycpO1xuXG52YXIgX2luaGVyaXRzMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2luaGVyaXRzMik7XG5cbnZhciBfdGltZUVuZ2luZSA9IHJlcXVpcmUoJy4vdGltZS1lbmdpbmUnKTtcblxudmFyIF90aW1lRW5naW5lMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3RpbWVFbmdpbmUpO1xuXG52YXIgX2F1ZGlvQ29udGV4dCA9IHJlcXVpcmUoJy4vYXVkaW8tY29udGV4dCcpO1xuXG52YXIgX2F1ZGlvQ29udGV4dDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9hdWRpb0NvbnRleHQpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcbiAqIEBjbGFzcyBBdWRpb1RpbWVFbmdpbmVcbiAqL1xuXG52YXIgQXVkaW9UaW1lRW5naW5lID0gZnVuY3Rpb24gKF9UaW1lRW5naW5lKSB7XG4gICgwLCBfaW5oZXJpdHMzLmRlZmF1bHQpKEF1ZGlvVGltZUVuZ2luZSwgX1RpbWVFbmdpbmUpO1xuXG4gIGZ1bmN0aW9uIEF1ZGlvVGltZUVuZ2luZSgpIHtcbiAgICB2YXIgYXVkaW9Db250ZXh0ID0gYXJndW1lbnRzLmxlbmd0aCA8PSAwIHx8IGFyZ3VtZW50c1swXSA9PT0gdW5kZWZpbmVkID8gX2F1ZGlvQ29udGV4dDIuZGVmYXVsdCA6IGFyZ3VtZW50c1swXTtcbiAgICAoMCwgX2NsYXNzQ2FsbENoZWNrMy5kZWZhdWx0KSh0aGlzLCBBdWRpb1RpbWVFbmdpbmUpO1xuXG4gICAgdmFyIF90aGlzID0gKDAsIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMy5kZWZhdWx0KSh0aGlzLCAoMCwgX2dldFByb3RvdHlwZU9mMi5kZWZhdWx0KShBdWRpb1RpbWVFbmdpbmUpLmNhbGwodGhpcykpO1xuXG4gICAgX3RoaXMuYXVkaW9Db250ZXh0ID0gYXVkaW9Db250ZXh0O1xuICAgIF90aGlzLm91dHB1dE5vZGUgPSBudWxsO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gICgwLCBfY3JlYXRlQ2xhc3MzLmRlZmF1bHQpKEF1ZGlvVGltZUVuZ2luZSwgW3tcbiAgICBrZXk6ICdjb25uZWN0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29ubmVjdCh0YXJnZXQpIHtcbiAgICAgIHRoaXMub3V0cHV0Tm9kZS5jb25uZWN0KHRhcmdldCk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdkaXNjb25uZWN0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGlzY29ubmVjdChjb25uZWN0aW9uKSB7XG4gICAgICB0aGlzLm91dHB1dE5vZGUuZGlzY29ubmVjdChjb25uZWN0aW9uKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfV0pO1xuICByZXR1cm4gQXVkaW9UaW1lRW5naW5lO1xufShfdGltZUVuZ2luZTIuZGVmYXVsdCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IEF1ZGlvVGltZUVuZ2luZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUYxWkdsdkxYUnBiV1V0Wlc1bmFXNWxMbXB6SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUk3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN096czdPMEZCUVVFN096czdRVUZEUVRzN096czdPenM3T3p0SlFVdHhRanM3TzBGQlEyNUNMRmRCUkcxQ0xHVkJRMjVDTEVkQlFXZEVPMUZCUVhCRExESkhRVUZ2UXp0M1EwRkVOMElzYVVKQlF6WkNPenMyUmtGRU4wSXNOa0pCUXpaQ096dEJRVWM1UXl4VlFVRkxMRmxCUVV3c1IwRkJiMElzV1VGQmNFSXNRMEZJT0VNN1FVRkpPVU1zVlVGQlN5eFZRVUZNTEVkQlFXdENMRWxCUVd4Q0xFTkJTamhET3p0SFFVRm9SRHM3TmtKQlJHMUNPenMwUWtGUldDeFJRVUZSTzBGQlEyUXNWMEZCU3l4VlFVRk1MRU5CUVdkQ0xFOUJRV2hDTEVOQlFYZENMRTFCUVhoQ0xFVkJSR003UVVGRlpDeGhRVUZQTEVsQlFWQXNRMEZHWXpzN096c3JRa0ZMVEN4WlFVRlpPMEZCUTNKQ0xGZEJRVXNzVlVGQlRDeERRVUZuUWl4VlFVRm9RaXhEUVVFeVFpeFZRVUV6UWl4RlFVUnhRanRCUVVWeVFpeGhRVUZQTEVsQlFWQXNRMEZHY1VJN096dFRRV0pLSWl3aVptbHNaU0k2SW1GMVpHbHZMWFJwYldVdFpXNW5hVzVsTG1weklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lhVzF3YjNKMElGUnBiV1ZGYm1kcGJtVWdabkp2YlNBbkxpOTBhVzFsTFdWdVoybHVaU2M3WEc1cGJYQnZjblFnWkdWbVlYVnNkRUYxWkdsdlEyOXVkR1Y0ZENCbWNtOXRJQ2N1TDJGMVpHbHZMV052Ym5SbGVIUW5PMXh1WEc0dktpcGNiaUFxSUVCamJHRnpjeUJCZFdScGIxUnBiV1ZGYm1kcGJtVmNiaUFxTDF4dVpYaHdiM0owSUdSbFptRjFiSFFnWTJ4aGMzTWdRWFZrYVc5VWFXMWxSVzVuYVc1bElHVjRkR1Z1WkhNZ1ZHbHRaVVZ1WjJsdVpYdGNiaUFnWTI5dWMzUnlkV04wYjNJb1lYVmthVzlEYjI1MFpYaDBJRDBnWkdWbVlYVnNkRUYxWkdsdlEyOXVkR1Y0ZENrZ2UxeHVJQ0FnSUhOMWNHVnlLQ2s3WEc1Y2JpQWdJQ0IwYUdsekxtRjFaR2x2UTI5dWRHVjRkQ0E5SUdGMVpHbHZRMjl1ZEdWNGREdGNiaUFnSUNCMGFHbHpMbTkxZEhCMWRFNXZaR1VnUFNCdWRXeHNPMXh1SUNCOVhHNWNiaUFnWTI5dWJtVmpkQ2gwWVhKblpYUXBJSHRjYmlBZ0lDQjBhR2x6TG05MWRIQjFkRTV2WkdVdVkyOXVibVZqZENoMFlYSm5aWFFwTzF4dUlDQWdJSEpsZEhWeWJpQjBhR2x6TzF4dUlDQjlYRzVjYmlBZ1pHbHpZMjl1Ym1WamRDaGpiMjV1WldOMGFXOXVLU0I3WEc0Z0lDQWdkR2hwY3k1dmRYUndkWFJPYjJSbExtUnBjMk52Ym01bFkzUW9ZMjl1Ym1WamRHbHZiaWs3WEc0Z0lDQWdjbVYwZFhKdUlIUm9hWE03WEc0Z0lIMWNibjFjYmlKZGZRPT1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtYXVkaW8vZGlzdC9jb3JlL2F1ZGlvLXRpbWUtZW5naW5lLmpzXG4vLyBtb2R1bGUgaWQgPSAyN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

eval("var isObject = __webpack_require__(44);\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmFuLW9iamVjdC5qcz82NjEwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vJC5pcy1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICBpZighaXNPYmplY3QoaXQpKXRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGFuIG9iamVjdCEnKTtcbiAgcmV0dXJuIGl0O1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQuYW4tb2JqZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSAyOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

eval("// optional / simple context binding\nvar aFunction = __webpack_require__(69);\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmN0eC5qcz83ODM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIG9wdGlvbmFsIC8gc2ltcGxlIGNvbnRleHQgYmluZGluZ1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vJC5hLWZ1bmN0aW9uJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGZuLCB0aGF0LCBsZW5ndGgpe1xuICBhRnVuY3Rpb24oZm4pO1xuICBpZih0aGF0ID09PSB1bmRlZmluZWQpcmV0dXJuIGZuO1xuICBzd2l0Y2gobGVuZ3RoKXtcbiAgICBjYXNlIDE6IHJldHVybiBmdW5jdGlvbihhKXtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEpO1xuICAgIH07XG4gICAgY2FzZSAyOiByZXR1cm4gZnVuY3Rpb24oYSwgYil7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiKTtcbiAgICB9O1xuICAgIGNhc2UgMzogcmV0dXJuIGZ1bmN0aW9uKGEsIGIsIGMpe1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYiwgYyk7XG4gICAgfTtcbiAgfVxuICByZXR1cm4gZnVuY3Rpb24oLyogLi4uYXJncyAqLyl7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7XG4gIH07XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5jdHguanNcbi8vIG1vZHVsZSBpZCA9IDI5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 30 */
/***/ (function(module, exports) {

eval("module.exports = {};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLml0ZXJhdG9ycy5qcz8xYWQ0Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge307XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLml0ZXJhdG9ycy5qc1xuLy8gbW9kdWxlIGlkID0gMzBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 31 */
/***/ (function(module, exports) {

eval("// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19kZWZpbmVkLmpzPzQ1ZDMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4yLjEgUmVxdWlyZU9iamVjdENvZXJjaWJsZShhcmd1bWVudClcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICBpZihpdCA9PSB1bmRlZmluZWQpdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY2FsbCBtZXRob2Qgb24gIFwiICsgaXQpO1xuICByZXR1cm4gaXQ7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZGVmaW5lZC5qc1xuLy8gbW9kdWxlIGlkID0gMzFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

eval("var ctx         = __webpack_require__(23)\n  , call        = __webpack_require__(143)\n  , isArrayIter = __webpack_require__(142)\n  , anObject    = __webpack_require__(12)\n  , toLength    = __webpack_require__(60)\n  , getIterFn   = __webpack_require__(90)\n  , BREAK       = {}\n  , RETURN      = {};\nvar exports = module.exports = function(iterable, entries, fn, that, ITERATOR){\n  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator, result;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if(result === BREAK || result === RETURN)return result;\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    result = call(iterator, f, step.value, entries);\n    if(result === BREAK || result === RETURN)return result;\n  }\n};\nexports.BREAK  = BREAK;\nexports.RETURN = RETURN;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19mb3Itb2YuanM/NTI2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY3R4ICAgICAgICAgPSByZXF1aXJlKCcuL19jdHgnKVxuICAsIGNhbGwgICAgICAgID0gcmVxdWlyZSgnLi9faXRlci1jYWxsJylcbiAgLCBpc0FycmF5SXRlciA9IHJlcXVpcmUoJy4vX2lzLWFycmF5LWl0ZXInKVxuICAsIGFuT2JqZWN0ICAgID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0JylcbiAgLCB0b0xlbmd0aCAgICA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpXG4gICwgZ2V0SXRlckZuICAgPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpXG4gICwgQlJFQUsgICAgICAgPSB7fVxuICAsIFJFVFVSTiAgICAgID0ge307XG52YXIgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXRlcmFibGUsIGVudHJpZXMsIGZuLCB0aGF0LCBJVEVSQVRPUil7XG4gIHZhciBpdGVyRm4gPSBJVEVSQVRPUiA/IGZ1bmN0aW9uKCl7IHJldHVybiBpdGVyYWJsZTsgfSA6IGdldEl0ZXJGbihpdGVyYWJsZSlcbiAgICAsIGYgICAgICA9IGN0eChmbiwgdGhhdCwgZW50cmllcyA/IDIgOiAxKVxuICAgICwgaW5kZXggID0gMFxuICAgICwgbGVuZ3RoLCBzdGVwLCBpdGVyYXRvciwgcmVzdWx0O1xuICBpZih0eXBlb2YgaXRlckZuICE9ICdmdW5jdGlvbicpdGhyb3cgVHlwZUVycm9yKGl0ZXJhYmxlICsgJyBpcyBub3QgaXRlcmFibGUhJyk7XG4gIC8vIGZhc3QgY2FzZSBmb3IgYXJyYXlzIHdpdGggZGVmYXVsdCBpdGVyYXRvclxuICBpZihpc0FycmF5SXRlcihpdGVyRm4pKWZvcihsZW5ndGggPSB0b0xlbmd0aChpdGVyYWJsZS5sZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKyl7XG4gICAgcmVzdWx0ID0gZW50cmllcyA/IGYoYW5PYmplY3Qoc3RlcCA9IGl0ZXJhYmxlW2luZGV4XSlbMF0sIHN0ZXBbMV0pIDogZihpdGVyYWJsZVtpbmRleF0pO1xuICAgIGlmKHJlc3VsdCA9PT0gQlJFQUsgfHwgcmVzdWx0ID09PSBSRVRVUk4pcmV0dXJuIHJlc3VsdDtcbiAgfSBlbHNlIGZvcihpdGVyYXRvciA9IGl0ZXJGbi5jYWxsKGl0ZXJhYmxlKTsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOyApe1xuICAgIHJlc3VsdCA9IGNhbGwoaXRlcmF0b3IsIGYsIHN0ZXAudmFsdWUsIGVudHJpZXMpO1xuICAgIGlmKHJlc3VsdCA9PT0gQlJFQUsgfHwgcmVzdWx0ID09PSBSRVRVUk4pcmV0dXJuIHJlc3VsdDtcbiAgfVxufTtcbmV4cG9ydHMuQlJFQUsgID0gQlJFQUs7XG5leHBvcnRzLlJFVFVSTiA9IFJFVFVSTjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2Zvci1vZi5qc1xuLy8gbW9kdWxlIGlkID0gMzJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject    = __webpack_require__(12)\n  , dPs         = __webpack_require__(147)\n  , enumBugKeys = __webpack_require__(49)\n  , IE_PROTO    = __webpack_require__(57)('IE_PROTO')\n  , Empty       = function(){ /* empty */ }\n  , PROTOTYPE   = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function(){\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(82)('iframe')\n    , i      = enumBugKeys.length\n    , lt     = '<'\n    , gt     = '>'\n    , iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(141).appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties){\n  var result;\n  if(O !== null){\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty;\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtY3JlYXRlLmpzP2Q4Y2YiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG52YXIgYW5PYmplY3QgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKVxuICAsIGRQcyAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpXG4gICwgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJylcbiAgLCBJRV9QUk9UTyAgICA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKVxuICAsIEVtcHR5ICAgICAgID0gZnVuY3Rpb24oKXsgLyogZW1wdHkgKi8gfVxuICAsIFBST1RPVFlQRSAgID0gJ3Byb3RvdHlwZSc7XG5cbi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBpZnJhbWUgT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBjcmVhdGVEaWN0ID0gZnVuY3Rpb24oKXtcbiAgLy8gVGhyYXNoLCB3YXN0ZSBhbmQgc29kb215OiBJRSBHQyBidWdcbiAgdmFyIGlmcmFtZSA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnaWZyYW1lJylcbiAgICAsIGkgICAgICA9IGVudW1CdWdLZXlzLmxlbmd0aFxuICAgICwgbHQgICAgID0gJzwnXG4gICAgLCBndCAgICAgPSAnPidcbiAgICAsIGlmcmFtZURvY3VtZW50O1xuICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgcmVxdWlyZSgnLi9faHRtbCcpLmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZS5zcmMgPSAnamF2YXNjcmlwdDonOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNjcmlwdC11cmxcbiAgLy8gY3JlYXRlRGljdCA9IGlmcmFtZS5jb250ZW50V2luZG93Lk9iamVjdDtcbiAgLy8gaHRtbC5yZW1vdmVDaGlsZChpZnJhbWUpO1xuICBpZnJhbWVEb2N1bWVudCA9IGlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50O1xuICBpZnJhbWVEb2N1bWVudC5vcGVuKCk7XG4gIGlmcmFtZURvY3VtZW50LndyaXRlKGx0ICsgJ3NjcmlwdCcgKyBndCArICdkb2N1bWVudC5GPU9iamVjdCcgKyBsdCArICcvc2NyaXB0JyArIGd0KTtcbiAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTtcbiAgY3JlYXRlRGljdCA9IGlmcmFtZURvY3VtZW50LkY7XG4gIHdoaWxlKGktLSlkZWxldGUgY3JlYXRlRGljdFtQUk9UT1RZUEVdW2VudW1CdWdLZXlzW2ldXTtcbiAgcmV0dXJuIGNyZWF0ZURpY3QoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmNyZWF0ZSB8fCBmdW5jdGlvbiBjcmVhdGUoTywgUHJvcGVydGllcyl7XG4gIHZhciByZXN1bHQ7XG4gIGlmKE8gIT09IG51bGwpe1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBhbk9iamVjdChPKTtcbiAgICByZXN1bHQgPSBuZXcgRW1wdHk7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IG51bGw7XG4gICAgLy8gYWRkIFwiX19wcm90b19fXCIgZm9yIE9iamVjdC5nZXRQcm90b3R5cGVPZiBwb2x5ZmlsbFxuICAgIHJlc3VsdFtJRV9QUk9UT10gPSBPO1xuICB9IGVsc2UgcmVzdWx0ID0gY3JlYXRlRGljdCgpO1xuICByZXR1cm4gUHJvcGVydGllcyA9PT0gdW5kZWZpbmVkID8gcmVzdWx0IDogZFBzKHJlc3VsdCwgUHJvcGVydGllcyk7XG59O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtY3JlYXRlLmpzXG4vLyBtb2R1bGUgaWQgPSAzM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 34 */
/***/ (function(module, exports) {

eval("exports.f = {}.propertyIsEnumerable;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtcGllLmpzP2QwZDIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5mID0ge30ucHJvcGVydHlJc0VudW1lcmFibGU7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtcGllLmpzXG4vLyBtb2R1bGUgaWQgPSAzNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 35 */
/***/ (function(module, exports) {

eval("module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19wcm9wZXJ0eS1kZXNjLmpzPzFlODYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihiaXRtYXAsIHZhbHVlKXtcbiAgcmV0dXJuIHtcbiAgICBlbnVtZXJhYmxlICA6ICEoYml0bWFwICYgMSksXG4gICAgY29uZmlndXJhYmxlOiAhKGJpdG1hcCAmIDIpLFxuICAgIHdyaXRhYmxlICAgIDogIShiaXRtYXAgJiA0KSxcbiAgICB2YWx1ZSAgICAgICA6IHZhbHVlXG4gIH07XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fcHJvcGVydHktZGVzYy5qc1xuLy8gbW9kdWxlIGlkID0gMzVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

eval("var def = __webpack_require__(7).f\n  , has = __webpack_require__(15)\n  , TAG = __webpack_require__(3)('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zZXQtdG8tc3RyaW5nLXRhZy5qcz9jOTQ1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBkZWYgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mXG4gICwgaGFzID0gcmVxdWlyZSgnLi9faGFzJylcbiAgLCBUQUcgPSByZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCwgdGFnLCBzdGF0KXtcbiAgaWYoaXQgJiYgIWhhcyhpdCA9IHN0YXQgPyBpdCA6IGl0LnByb3RvdHlwZSwgVEFHKSlkZWYoaXQsIFRBRywge2NvbmZpZ3VyYWJsZTogdHJ1ZSwgdmFsdWU6IHRhZ30pO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NldC10by1zdHJpbmctdGFnLmpzXG4vLyBtb2R1bGUgaWQgPSAzNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(31);\nmodule.exports = function(it){\n  return Object(defined(it));\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1vYmplY3QuanM/YjVjMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjEuMTMgVG9PYmplY3QoYXJndW1lbnQpXG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gT2JqZWN0KGRlZmluZWQoaXQpKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1vYmplY3QuanNcbi8vIG1vZHVsZSBpZCA9IDM3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 38 */
/***/ (function(module, exports) {

eval("var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL191aWQuanM/ZThjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaWQgPSAwXG4gICwgcHggPSBNYXRoLnJhbmRvbSgpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihrZXkpe1xuICByZXR1cm4gJ1N5bWJvbCgnLmNvbmNhdChrZXkgPT09IHVuZGVmaW5lZCA/ICcnIDoga2V5LCAnKV8nLCAoKytpZCArIHB4KS50b1N0cmluZygzNikpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3VpZC5qc1xuLy8gbW9kdWxlIGlkID0gMzhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(154);\nvar global        = __webpack_require__(6)\n  , hide          = __webpack_require__(16)\n  , Iterators     = __webpack_require__(24)\n  , TO_STRING_TAG = __webpack_require__(3)('toStringTag');\n\nfor(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){\n  var NAME       = collections[i]\n    , Collection = global[NAME]\n    , proto      = Collection && Collection.prototype;\n  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUuanM/YmYwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuL2VzNi5hcnJheS5pdGVyYXRvcicpO1xudmFyIGdsb2JhbCAgICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKVxuICAsIGhpZGUgICAgICAgICAgPSByZXF1aXJlKCcuL19oaWRlJylcbiAgLCBJdGVyYXRvcnMgICAgID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJylcbiAgLCBUT19TVFJJTkdfVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG5cbmZvcih2YXIgY29sbGVjdGlvbnMgPSBbJ05vZGVMaXN0JywgJ0RPTVRva2VuTGlzdCcsICdNZWRpYUxpc3QnLCAnU3R5bGVTaGVldExpc3QnLCAnQ1NTUnVsZUxpc3QnXSwgaSA9IDA7IGkgPCA1OyBpKyspe1xuICB2YXIgTkFNRSAgICAgICA9IGNvbGxlY3Rpb25zW2ldXG4gICAgLCBDb2xsZWN0aW9uID0gZ2xvYmFsW05BTUVdXG4gICAgLCBwcm90byAgICAgID0gQ29sbGVjdGlvbiAmJiBDb2xsZWN0aW9uLnByb3RvdHlwZTtcbiAgaWYocHJvdG8gJiYgIXByb3RvW1RPX1NUUklOR19UQUddKWhpZGUocHJvdG8sIFRPX1NUUklOR19UQUcsIE5BTUUpO1xuICBJdGVyYXRvcnNbTkFNRV0gPSBJdGVyYXRvcnMuQXJyYXk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUuanNcbi8vIG1vZHVsZSBpZCA9IDM5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _set = __webpack_require__(77);\n\nvar _set2 = _interopRequireDefault(_set);\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(1);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(2);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(11);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(10);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _priorityQueue = __webpack_require__(66);\n\nvar _priorityQueue2 = _interopRequireDefault(_priorityQueue);\n\nvar _timeEngine = __webpack_require__(22);\n\nvar _timeEngine2 = _interopRequireDefault(_timeEngine);\n\nvar _audioContext = __webpack_require__(18);\n\nvar _audioContext2 = _interopRequireDefault(_audioContext);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @class SchedulingQueue\n */\n\nvar SchedulingQueue = function (_TimeEngine) {\n  (0, _inherits3.default)(SchedulingQueue, _TimeEngine);\n\n  function SchedulingQueue() {\n    (0, _classCallCheck3.default)(this, SchedulingQueue);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(SchedulingQueue).call(this));\n\n    _this.__queue = new _priorityQueue2.default();\n    _this.__engines = new _set2.default();\n    return _this;\n  }\n\n  // TimeEngine 'scheduled' interface\n\n\n  (0, _createClass3.default)(SchedulingQueue, [{\n    key: 'advanceTime',\n    value: function advanceTime(time) {\n      var engine = this.__queue.head;\n      var nextEngineTime = engine.advanceTime(time);\n\n      if (!nextEngineTime) {\n        engine.master = null;\n        this.__engines.delete(engine);\n        this.__queue.remove(engine);\n      } else {\n        this.__queue.move(engine, nextEngineTime);\n      }\n\n      return this.__queue.time;\n    }\n\n    // TimeEngine master method to be implemented by derived class\n\n  }, {\n    key: 'defer',\n\n\n    // call a function at a given time\n    value: function defer(fun) {\n      var time = arguments.length <= 1 || arguments[1] === undefined ? this.currentTime : arguments[1];\n\n      if (!(fun instanceof Function)) throw new Error(\"object cannot be defered by scheduler\");\n\n      this.add({\n        advanceTime: function advanceTime(time) {\n          fun(time);\n        } }, // make sur that the advanceTime method does not returm anything\n      time);\n    }\n\n    // add a time engine to the scheduler\n\n  }, {\n    key: 'add',\n    value: function add(engine) {\n      var time = arguments.length <= 1 || arguments[1] === undefined ? this.currentTime : arguments[1];\n\n      if (!_timeEngine2.default.implementsScheduled(engine)) throw new Error(\"object cannot be added to scheduler\");\n\n      if (engine.master) throw new Error(\"object has already been added to a master\");\n\n      engine.master = this;\n\n      // add to engines and queue\n      this.__engines.add(engine);\n      var nextTime = this.__queue.insert(engine, time);\n\n      // reschedule queue\n      this.resetTime(nextTime);\n    }\n\n    // remove a time engine from the queue\n\n  }, {\n    key: 'remove',\n    value: function remove(engine) {\n      if (engine.master !== this) throw new Error(\"object has not been added to this scheduler\");\n\n      engine.master = null;\n\n      // remove from array and queue\n      this.__engines.delete(engine);\n      var nextTime = this.__queue.remove(engine);\n\n      // reschedule queue\n      this.resetTime(nextTime);\n    }\n\n    // reset next engine time\n\n  }, {\n    key: 'resetEngineTime',\n    value: function resetEngineTime(engine) {\n      var time = arguments.length <= 1 || arguments[1] === undefined ? this.currentTime : arguments[1];\n\n      if (engine.master !== this) throw new Error(\"object has not been added to this scheduler\");\n\n      var nextTime = void 0;\n\n      if (this.__queue.has(engine)) nextTime = this.__queue.move(engine, time);else nextTime = this.__queue.insert(engine, time);\n\n      this.resetTime(nextTime);\n    }\n\n    // check whether a given engine is scheduled\n\n  }, {\n    key: 'has',\n    value: function has(engine) {\n      return this.__engines.has(engine);\n    }\n\n    // clear queue\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.__queue.clear();\n      this.__engines.clear();\n      this.resetTime(Infinity);\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      return 0;\n    }\n  }]);\n  return SchedulingQueue;\n}(_timeEngine2.default); /**\n                          * SchedulingQueue base class\n                          * http://wavesjs.github.io/audio/#audio-scheduling-queue\n                          *\n                          * Norbert.Schnell@ircam.fr\n                          * Copyright 2014, 2015 IRCAM – Centre Pompidou\n                          */\n\nexports.default = SchedulingQueue;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVkdWxpbmctcXVldWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUUE7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7Ozs7O0lBS3FCOzs7QUFDbkIsV0FEbUIsZUFDbkIsR0FBYzt3Q0FESyxpQkFDTDs7NkZBREssNkJBQ0w7O0FBR1osVUFBSyxPQUFMLEdBQWUsNkJBQWYsQ0FIWTtBQUlaLFVBQUssU0FBTCxHQUFpQixtQkFBakIsQ0FKWTs7R0FBZDs7Ozs7NkJBRG1COztnQ0FTUCxNQUFNO0FBQ2hCLFVBQU0sU0FBUyxLQUFLLE9BQUwsQ0FBYSxJQUFiLENBREM7QUFFaEIsVUFBTSxpQkFBaUIsT0FBTyxXQUFQLENBQW1CLElBQW5CLENBQWpCLENBRlU7O0FBSWhCLFVBQUksQ0FBQyxjQUFELEVBQWlCO0FBQ25CLGVBQU8sTUFBUCxHQUFnQixJQUFoQixDQURtQjtBQUVuQixhQUFLLFNBQUwsQ0FBZSxNQUFmLENBQXNCLE1BQXRCLEVBRm1CO0FBR25CLGFBQUssT0FBTCxDQUFhLE1BQWIsQ0FBb0IsTUFBcEIsRUFIbUI7T0FBckIsTUFJTztBQUNMLGFBQUssT0FBTCxDQUFhLElBQWIsQ0FBa0IsTUFBbEIsRUFBMEIsY0FBMUIsRUFESztPQUpQOztBQVFBLGFBQU8sS0FBSyxPQUFMLENBQWEsSUFBYixDQVpTOzs7Ozs7Ozs7OzBCQXFCWixLQUE4QjtVQUF6Qiw2REFBTyxLQUFLLFdBQUwsZ0JBQWtCOztBQUNsQyxVQUFJLEVBQUUsZUFBZSxRQUFmLENBQUYsRUFDRixNQUFNLElBQUksS0FBSixDQUFVLHVDQUFWLENBQU4sQ0FERjs7QUFHQSxXQUFLLEdBQUwsQ0FBUztBQUNQLHFCQUFhLHFCQUFTLElBQVQsRUFBZTtBQUFFLGNBQUksSUFBSixFQUFGO1NBQWYsRUFEZjtBQUVHLFVBRkgsRUFKa0M7Ozs7Ozs7d0JBVWhDLFFBQWlDO1VBQXpCLDZEQUFPLEtBQUssV0FBTCxnQkFBa0I7O0FBQ25DLFVBQUksQ0FBQyxxQkFBVyxtQkFBWCxDQUErQixNQUEvQixDQUFELEVBQ0YsTUFBTSxJQUFJLEtBQUosQ0FBVSxxQ0FBVixDQUFOLENBREY7O0FBR0EsVUFBSSxPQUFPLE1BQVAsRUFDRixNQUFNLElBQUksS0FBSixDQUFVLDJDQUFWLENBQU4sQ0FERjs7QUFHQSxhQUFPLE1BQVAsR0FBZ0IsSUFBaEI7OztBQVBtQyxVQVVuQyxDQUFLLFNBQUwsQ0FBZSxHQUFmLENBQW1CLE1BQW5CLEVBVm1DO0FBV25DLFVBQU0sV0FBVyxLQUFLLE9BQUwsQ0FBYSxNQUFiLENBQW9CLE1BQXBCLEVBQTRCLElBQTVCLENBQVg7OztBQVg2QixVQWNuQyxDQUFLLFNBQUwsQ0FBZSxRQUFmLEVBZG1DOzs7Ozs7OzJCQWtCOUIsUUFBUTtBQUNiLFVBQUksT0FBTyxNQUFQLEtBQWtCLElBQWxCLEVBQ0YsTUFBTSxJQUFJLEtBQUosQ0FBVSw2Q0FBVixDQUFOLENBREY7O0FBR0EsYUFBTyxNQUFQLEdBQWdCLElBQWhCOzs7QUFKYSxVQU9iLENBQUssU0FBTCxDQUFlLE1BQWYsQ0FBc0IsTUFBdEIsRUFQYTtBQVFiLFVBQU0sV0FBVyxLQUFLLE9BQUwsQ0FBYSxNQUFiLENBQW9CLE1BQXBCLENBQVg7OztBQVJPLFVBV2IsQ0FBSyxTQUFMLENBQWUsUUFBZixFQVhhOzs7Ozs7O29DQWVDLFFBQWlDO1VBQXpCLDZEQUFPLEtBQUssV0FBTCxnQkFBa0I7O0FBQy9DLFVBQUksT0FBTyxNQUFQLEtBQWtCLElBQWxCLEVBQ0YsTUFBTSxJQUFJLEtBQUosQ0FBVSw2Q0FBVixDQUFOLENBREY7O0FBR0EsVUFBSSxpQkFBSixDQUorQzs7QUFNL0MsVUFBSSxLQUFLLE9BQUwsQ0FBYSxHQUFiLENBQWlCLE1BQWpCLENBQUosRUFDRSxXQUFXLEtBQUssT0FBTCxDQUFhLElBQWIsQ0FBa0IsTUFBbEIsRUFBMEIsSUFBMUIsQ0FBWCxDQURGLEtBR0UsV0FBVyxLQUFLLE9BQUwsQ0FBYSxNQUFiLENBQW9CLE1BQXBCLEVBQTRCLElBQTVCLENBQVgsQ0FIRjs7QUFLQSxXQUFLLFNBQUwsQ0FBZSxRQUFmLEVBWCtDOzs7Ozs7O3dCQWU3QyxRQUFRO0FBQ1YsYUFBTyxLQUFLLFNBQUwsQ0FBZSxHQUFmLENBQW1CLE1BQW5CLENBQVAsQ0FEVTs7Ozs7Ozs0QkFLSjtBQUNOLFdBQUssT0FBTCxDQUFhLEtBQWIsR0FETTtBQUVOLFdBQUssU0FBTCxDQUFlLEtBQWYsR0FGTTtBQUdOLFdBQUssU0FBTCxDQUFlLFFBQWYsRUFITTs7Ozt3QkFwRVU7QUFDaEIsYUFBTyxDQUFQLENBRGdCOzs7U0F6QkMiLCJmaWxlIjoic2NoZWR1bGluZy1xdWV1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU2NoZWR1bGluZ1F1ZXVlIGJhc2UgY2xhc3NcbiAqIGh0dHA6Ly93YXZlc2pzLmdpdGh1Yi5pby9hdWRpby8jYXVkaW8tc2NoZWR1bGluZy1xdWV1ZVxuICpcbiAqIE5vcmJlcnQuU2NobmVsbEBpcmNhbS5mclxuICogQ29weXJpZ2h0IDIwMTQsIDIwMTUgSVJDQU0g4oCTwqBDZW50cmUgUG9tcGlkb3VcbiAqL1xuXG5pbXBvcnQgUHJpb3JpdHlRdWV1ZSBmcm9tICcuL3ByaW9yaXR5LXF1ZXVlJztcbmltcG9ydCBUaW1lRW5naW5lIGZyb20gJy4vdGltZS1lbmdpbmUnO1xuaW1wb3J0IGRlZmF1bHRBdWRpb0NvbnRleHQgZnJvbSAnLi9hdWRpby1jb250ZXh0JztcblxuLyoqXG4gKiBAY2xhc3MgU2NoZWR1bGluZ1F1ZXVlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjaGVkdWxpbmdRdWV1ZSBleHRlbmRzIFRpbWVFbmdpbmUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5fX3F1ZXVlID0gbmV3IFByaW9yaXR5UXVldWUoKTtcbiAgICB0aGlzLl9fZW5naW5lcyA9IG5ldyBTZXQoKTtcbiAgfVxuXG4gIC8vIFRpbWVFbmdpbmUgJ3NjaGVkdWxlZCcgaW50ZXJmYWNlXG4gIGFkdmFuY2VUaW1lKHRpbWUpIHtcbiAgICBjb25zdCBlbmdpbmUgPSB0aGlzLl9fcXVldWUuaGVhZDtcbiAgICBjb25zdCBuZXh0RW5naW5lVGltZSA9IGVuZ2luZS5hZHZhbmNlVGltZSh0aW1lKTtcblxuICAgIGlmICghbmV4dEVuZ2luZVRpbWUpIHtcbiAgICAgIGVuZ2luZS5tYXN0ZXIgPSBudWxsO1xuICAgICAgdGhpcy5fX2VuZ2luZXMuZGVsZXRlKGVuZ2luZSk7XG4gICAgICB0aGlzLl9fcXVldWUucmVtb3ZlKGVuZ2luZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX19xdWV1ZS5tb3ZlKGVuZ2luZSwgbmV4dEVuZ2luZVRpbWUpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLl9fcXVldWUudGltZTtcbiAgfVxuXG4gIC8vIFRpbWVFbmdpbmUgbWFzdGVyIG1ldGhvZCB0byBiZSBpbXBsZW1lbnRlZCBieSBkZXJpdmVkIGNsYXNzXG4gIGdldCBjdXJyZW50VGltZSgpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIC8vIGNhbGwgYSBmdW5jdGlvbiBhdCBhIGdpdmVuIHRpbWVcbiAgZGVmZXIoZnVuLCB0aW1lID0gdGhpcy5jdXJyZW50VGltZSkge1xuICAgIGlmICghKGZ1biBpbnN0YW5jZW9mIEZ1bmN0aW9uKSlcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIm9iamVjdCBjYW5ub3QgYmUgZGVmZXJlZCBieSBzY2hlZHVsZXJcIik7XG5cbiAgICB0aGlzLmFkZCh7XG4gICAgICBhZHZhbmNlVGltZTogZnVuY3Rpb24odGltZSkgeyBmdW4odGltZSk7IH0sIC8vIG1ha2Ugc3VyIHRoYXQgdGhlIGFkdmFuY2VUaW1lIG1ldGhvZCBkb2VzIG5vdCByZXR1cm0gYW55dGhpbmdcbiAgICB9LCB0aW1lKTtcbiAgfVxuXG4gIC8vIGFkZCBhIHRpbWUgZW5naW5lIHRvIHRoZSBzY2hlZHVsZXJcbiAgYWRkKGVuZ2luZSwgdGltZSA9IHRoaXMuY3VycmVudFRpbWUpIHtcbiAgICBpZiAoIVRpbWVFbmdpbmUuaW1wbGVtZW50c1NjaGVkdWxlZChlbmdpbmUpKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwib2JqZWN0IGNhbm5vdCBiZSBhZGRlZCB0byBzY2hlZHVsZXJcIik7XG5cbiAgICBpZiAoZW5naW5lLm1hc3RlcilcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIm9iamVjdCBoYXMgYWxyZWFkeSBiZWVuIGFkZGVkIHRvIGEgbWFzdGVyXCIpO1xuXG4gICAgZW5naW5lLm1hc3RlciA9IHRoaXM7XG5cbiAgICAvLyBhZGQgdG8gZW5naW5lcyBhbmQgcXVldWVcbiAgICB0aGlzLl9fZW5naW5lcy5hZGQoZW5naW5lKTtcbiAgICBjb25zdCBuZXh0VGltZSA9IHRoaXMuX19xdWV1ZS5pbnNlcnQoZW5naW5lLCB0aW1lKTtcblxuICAgIC8vIHJlc2NoZWR1bGUgcXVldWVcbiAgICB0aGlzLnJlc2V0VGltZShuZXh0VGltZSk7XG4gIH1cblxuICAvLyByZW1vdmUgYSB0aW1lIGVuZ2luZSBmcm9tIHRoZSBxdWV1ZVxuICByZW1vdmUoZW5naW5lKSB7XG4gICAgaWYgKGVuZ2luZS5tYXN0ZXIgIT09IHRoaXMpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJvYmplY3QgaGFzIG5vdCBiZWVuIGFkZGVkIHRvIHRoaXMgc2NoZWR1bGVyXCIpO1xuXG4gICAgZW5naW5lLm1hc3RlciA9IG51bGw7XG5cbiAgICAvLyByZW1vdmUgZnJvbSBhcnJheSBhbmQgcXVldWVcbiAgICB0aGlzLl9fZW5naW5lcy5kZWxldGUoZW5naW5lKTtcbiAgICBjb25zdCBuZXh0VGltZSA9IHRoaXMuX19xdWV1ZS5yZW1vdmUoZW5naW5lKTtcblxuICAgIC8vIHJlc2NoZWR1bGUgcXVldWVcbiAgICB0aGlzLnJlc2V0VGltZShuZXh0VGltZSk7XG4gIH1cblxuICAvLyByZXNldCBuZXh0IGVuZ2luZSB0aW1lXG4gIHJlc2V0RW5naW5lVGltZShlbmdpbmUsIHRpbWUgPSB0aGlzLmN1cnJlbnRUaW1lKSB7XG4gICAgaWYgKGVuZ2luZS5tYXN0ZXIgIT09IHRoaXMpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJvYmplY3QgaGFzIG5vdCBiZWVuIGFkZGVkIHRvIHRoaXMgc2NoZWR1bGVyXCIpO1xuXG4gICAgbGV0IG5leHRUaW1lO1xuXG4gICAgaWYgKHRoaXMuX19xdWV1ZS5oYXMoZW5naW5lKSlcbiAgICAgIG5leHRUaW1lID0gdGhpcy5fX3F1ZXVlLm1vdmUoZW5naW5lLCB0aW1lKTtcbiAgICBlbHNlXG4gICAgICBuZXh0VGltZSA9IHRoaXMuX19xdWV1ZS5pbnNlcnQoZW5naW5lLCB0aW1lKTtcblxuICAgIHRoaXMucmVzZXRUaW1lKG5leHRUaW1lKTtcbiAgfVxuXG4gIC8vIGNoZWNrIHdoZXRoZXIgYSBnaXZlbiBlbmdpbmUgaXMgc2NoZWR1bGVkXG4gIGhhcyhlbmdpbmUpIHtcbiAgICByZXR1cm4gdGhpcy5fX2VuZ2luZXMuaGFzKGVuZ2luZSk7XG4gIH1cblxuICAvLyBjbGVhciBxdWV1ZVxuICBjbGVhcigpIHtcbiAgICB0aGlzLl9fcXVldWUuY2xlYXIoKTtcbiAgICB0aGlzLl9fZW5naW5lcy5jbGVhcigpO1xuICAgIHRoaXMucmVzZXRUaW1lKEluZmluaXR5KTtcbiAgfVxufVxuIl19//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(180), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eS5qcz84MTQ4Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZGVmaW5lLXByb3BlcnR5XCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eS5qc1xuLy8gbW9kdWxlIGlkID0gNDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 42 */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmNvZi5qcz81ZTljIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoaXQpLnNsaWNlKDgsIC0xKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmNvZi5qc1xuLy8gbW9kdWxlIGlkID0gNDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

eval("var global    = __webpack_require__(19)\n  , core      = __webpack_require__(21)\n  , ctx       = __webpack_require__(29)\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n  }\n};\n// type bitmap\n$export.F = 1;  // forced\n$export.G = 2;  // global\n$export.S = 4;  // static\n$export.P = 8;  // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\nmodule.exports = $export;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmV4cG9ydC5qcz9kMjk2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBnbG9iYWwgICAgPSByZXF1aXJlKCcuLyQuZ2xvYmFsJylcbiAgLCBjb3JlICAgICAgPSByZXF1aXJlKCcuLyQuY29yZScpXG4gICwgY3R4ICAgICAgID0gcmVxdWlyZSgnLi8kLmN0eCcpXG4gICwgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbnZhciAkZXhwb3J0ID0gZnVuY3Rpb24odHlwZSwgbmFtZSwgc291cmNlKXtcbiAgdmFyIElTX0ZPUkNFRCA9IHR5cGUgJiAkZXhwb3J0LkZcbiAgICAsIElTX0dMT0JBTCA9IHR5cGUgJiAkZXhwb3J0LkdcbiAgICAsIElTX1NUQVRJQyA9IHR5cGUgJiAkZXhwb3J0LlNcbiAgICAsIElTX1BST1RPICA9IHR5cGUgJiAkZXhwb3J0LlBcbiAgICAsIElTX0JJTkQgICA9IHR5cGUgJiAkZXhwb3J0LkJcbiAgICAsIElTX1dSQVAgICA9IHR5cGUgJiAkZXhwb3J0LldcbiAgICAsIGV4cG9ydHMgICA9IElTX0dMT0JBTCA/IGNvcmUgOiBjb3JlW25hbWVdIHx8IChjb3JlW25hbWVdID0ge30pXG4gICAgLCB0YXJnZXQgICAgPSBJU19HTE9CQUwgPyBnbG9iYWwgOiBJU19TVEFUSUMgPyBnbG9iYWxbbmFtZV0gOiAoZ2xvYmFsW25hbWVdIHx8IHt9KVtQUk9UT1RZUEVdXG4gICAgLCBrZXksIG93biwgb3V0O1xuICBpZihJU19HTE9CQUwpc291cmNlID0gbmFtZTtcbiAgZm9yKGtleSBpbiBzb3VyY2Upe1xuICAgIC8vIGNvbnRhaW5zIGluIG5hdGl2ZVxuICAgIG93biA9ICFJU19GT1JDRUQgJiYgdGFyZ2V0ICYmIGtleSBpbiB0YXJnZXQ7XG4gICAgaWYob3duICYmIGtleSBpbiBleHBvcnRzKWNvbnRpbnVlO1xuICAgIC8vIGV4cG9ydCBuYXRpdmUgb3IgcGFzc2VkXG4gICAgb3V0ID0gb3duID8gdGFyZ2V0W2tleV0gOiBzb3VyY2Vba2V5XTtcbiAgICAvLyBwcmV2ZW50IGdsb2JhbCBwb2xsdXRpb24gZm9yIG5hbWVzcGFjZXNcbiAgICBleHBvcnRzW2tleV0gPSBJU19HTE9CQUwgJiYgdHlwZW9mIHRhcmdldFtrZXldICE9ICdmdW5jdGlvbicgPyBzb3VyY2Vba2V5XVxuICAgIC8vIGJpbmQgdGltZXJzIHRvIGdsb2JhbCBmb3IgY2FsbCBmcm9tIGV4cG9ydCBjb250ZXh0XG4gICAgOiBJU19CSU5EICYmIG93biA/IGN0eChvdXQsIGdsb2JhbClcbiAgICAvLyB3cmFwIGdsb2JhbCBjb25zdHJ1Y3RvcnMgZm9yIHByZXZlbnQgY2hhbmdlIHRoZW0gaW4gbGlicmFyeVxuICAgIDogSVNfV1JBUCAmJiB0YXJnZXRba2V5XSA9PSBvdXQgPyAoZnVuY3Rpb24oQyl7XG4gICAgICB2YXIgRiA9IGZ1bmN0aW9uKHBhcmFtKXtcbiAgICAgICAgcmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBDID8gbmV3IEMocGFyYW0pIDogQyhwYXJhbSk7XG4gICAgICB9O1xuICAgICAgRltQUk9UT1RZUEVdID0gQ1tQUk9UT1RZUEVdO1xuICAgICAgcmV0dXJuIEY7XG4gICAgLy8gbWFrZSBzdGF0aWMgdmVyc2lvbnMgZm9yIHByb3RvdHlwZSBtZXRob2RzXG4gICAgfSkob3V0KSA6IElTX1BST1RPICYmIHR5cGVvZiBvdXQgPT0gJ2Z1bmN0aW9uJyA/IGN0eChGdW5jdGlvbi5jYWxsLCBvdXQpIDogb3V0O1xuICAgIGlmKElTX1BST1RPKShleHBvcnRzW1BST1RPVFlQRV0gfHwgKGV4cG9ydHNbUFJPVE9UWVBFXSA9IHt9KSlba2V5XSA9IG91dDtcbiAgfVxufTtcbi8vIHR5cGUgYml0bWFwXG4kZXhwb3J0LkYgPSAxOyAgLy8gZm9yY2VkXG4kZXhwb3J0LkcgPSAyOyAgLy8gZ2xvYmFsXG4kZXhwb3J0LlMgPSA0OyAgLy8gc3RhdGljXG4kZXhwb3J0LlAgPSA4OyAgLy8gcHJvdG9cbiRleHBvcnQuQiA9IDE2OyAvLyBiaW5kXG4kZXhwb3J0LlcgPSAzMjsgLy8gd3JhcFxubW9kdWxlLmV4cG9ydHMgPSAkZXhwb3J0O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5leHBvcnQuanNcbi8vIG1vZHVsZSBpZCA9IDQzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 44 */
/***/ (function(module, exports) {

eval("module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmlzLW9iamVjdC5qcz81MzQ2Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gdHlwZW9mIGl0ID09PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogdHlwZW9mIGl0ID09PSAnZnVuY3Rpb24nO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQuaXMtb2JqZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSA0NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__webaudio_ircam_js__ = __webpack_require__(74);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__defs_js__ = __webpack_require__(75);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_wavesurfer_regions__ = __webpack_require__(216);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_wavesurfer_regions___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_wavesurfer_regions__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_wavesurfer_timeline__ = __webpack_require__(220);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__wavesurfer_elan_json_js__ = __webpack_require__(218);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_wavesurfer_elan_wave_segment__ = __webpack_require__(219);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return selectedRegion; });\n/* unused harmony export utilRemoveRegion */\n\n\nconsole.clear();\n// Create an instance\n//FIXME: Works, but dont now if this is correct way to do it?!\n\n//import * as WaveSurfer from 'wavesurfer'; \n// _MD_ Don't now if this is correct way to do it?!\n\nvar WaveSurfer = __WEBPACK_IMPORTED_MODULE_0__webaudio_ircam_js__[\"a\" /* default */].WaveSurfer; //var WaveSurfer = require(\"wavesurfer\");\n\n\n\n//import * as MiniMap from 'wavesurfer-minimap';\n\n\n//import * as InputStream from './wavesurfer.inputstream.js';\n\nvar selectedRegion = null;\n\nvar _regionFlag = false; // Seems to be needed to be able to decide if a region was clicked, or not.\n\nvar wavesurfer = Object.create(WaveSurfer);\n\n// Zoom slider\nvar slider;\n\nvar GLOBAL_ACTIONS = {\n    'play': function () {\n        wavesurfer.playPause();\n        if (selectedRegion != null) {\n            wavesurfer.backend.seekTo(selectedRegion.start, selectedRegion.end);\n        }\n    },\n\n    'back': function () {\n        if (selectedRegion == null) return wavesurfer.skipBackward();\n\n        var dur = selectedRegion.end - selectedRegion.start;\n        if (selectedRegion.start - dur < 0) {\n            dur = selectedRegion.start;\n        }\n\n        selectedRegion.update({\n            start: selectedRegion.start - dur,\n            end: selectedRegion.start\n        });\n        selectedRegion.updateRender();\n        wavesurfer.backend.seekTo(selectedRegion.start, selectedRegion.end);\n    },\n\n    'forth': function () {\n        if (selectedRegion == null) return wavesurfer.skipForward();\n\n        var dur = selectedRegion.end - selectedRegion.start;\n        if (dur + selectedRegion.end > wavesurfer.getDuration()) {\n            dur = wavesurfer.getDuration() - selectedRegion.end;\n        }\n\n        selectedRegion.update({\n            start: selectedRegion.end,\n            end: selectedRegion.end + dur\n        });\n        selectedRegion.updateRender();\n        wavesurfer.backend.seekTo(selectedRegion.start, selectedRegion.end);\n    },\n\n    'toggle-mute': function () {\n        wavesurfer.toggleMute();\n    }\n};\n\n// Init & load audio file\ndocument.addEventListener('DOMContentLoaded', function () {\n    var options = {\n        container: '#waveform',\n        waveColor: 'black', //'rgba(255, 0, 106, 0.88)',//'purple',//'#3498db',\n        progressColor: 'rgba(255, 0, 106, 0.88)', //'#7f8c8d',\n        loaderColor: 'purple',\n        cursorColor: 'navy',\n        selectionColor: '#d0e9c6',\n        backend: 'WebAudio',\n        normalize: true,\n        //barWidth: 2,\n        loopSelection: false,\n        renderer: 'MultiCanvas',\n        partialRender: true,\n        waveSegmentRenderer: 'Canvas',\n        waveSegmentHeight: 50,\n        autoCenter: false,\n        height: 100\n    };\n\n    if (location.search.match('scroll')) {\n        options.minPxPerSec = 100;\n        options.scrollParent = true;\n    }\n\n    // Init\n    wavesurfer.init(options);\n    // Load audio from URL\n    wavesurfer.load('assets/demo.wav');\n    //wavesurfer.load('https://api.soundcloud.com/tracks/82056139/stream?client_id=0b4984c1ad516406425dab7232f983f3');    \n    //wavesurfer.load('https://api.soundcloud.com/tracks/131615092/stream?client_id=0b4984c1ad516406425dab7232f983f3');\n    //wavesurfer.load('https://api.soundcloud.com/tracks/266600258/stream?client_id=0b4984c1ad516406425dab7232f983f3');\n    //wavesurfer.load('https://api.soundcloud.com/tracks/238570095/stream?client_id=0b4984c1ad516406425dab7232f983f3');\n    //wavesurfer.load('https://api.soundcloud.com/tracks/196668498/stream?client_id=0b4984c1ad516406425dab7232f983f3');\n    //wavesurfer.load('https://api.soundcloud.com/tracks/62955492/stream?client_id=0b4984c1ad516406425dab7232f983f3');//czardas\n});\n\n/* Progress bar */\ndocument.addEventListener('DOMContentLoaded', function () {\n    var progressDiv = document.querySelector('#progress-bar');\n    var progressBar = progressDiv.querySelector('.progress-bar');\n    var dropMessage = document.querySelector('#dropmessage');\n    var waveForm = document.querySelector('#waveform');\n\n    var showProgress = function (percent) {\n        waveForm.style.visibility = 'visible';\n        waveForm.style.display = 'block';\n\n        progressDiv.style.display = 'block';\n        progressDiv.style.visibility = 'visible';\n\n        progressBar.style.width = percent + '%';\n    };\n\n    var showMessage = function (percent) {\n        waveForm.style.visibility = 'hidden';\n        waveForm.style.display = 'none';\n\n        dropMessage.style.display = 'block';\n        dropMessage.style.visibility = 'visible';\n    };\n\n    var hideProgress = function () {\n        progressDiv.style.display = 'none';\n        progressDiv.style.visibility = 'hidden';\n    };\n\n    var hideMessage = function () {\n        dropMessage.style.display = 'none';\n        dropMessage.style.visibility = 'hidden';\n    };\n\n    // What to show when: \n    // 1) no waveform is loaded\n    // 2) when loading and \n    // 3) when waveform is loaded\n    wavesurfer.on('loading', function () {\n        showProgress();\n        hideMessage();\n    });\n    wavesurfer.on('ready', function () {\n        hideProgress();\n        hideMessage();\n        var timeline = Object.create(WaveSurfer.Timeline);\n\n        timeline.init({\n            primaryColor: '#800',\n            secondaryColor: '#808000',\n            primaryFontColor: '#800',\n            secondaryFontColor: '#880',\n            wavesurfer: wavesurfer,\n            container: \"#wave-timeline\"\n        });\n\n        // Custom click handling\n        wavesurfer.drawer.un('click');\n        wavesurfer.drawer.on('click', clickOverride);\n\n        // when hovering over waveform -> seek to this position\n\n        $(\"#waveform\").on('mousemove', function (e) {\n\n            //if (wavesurfer.isPlaying()) return;\n            var prog = wavesurfer.drawer.handleEvent(e);\n            //console.log(\"progress: \" + prog);\n            wavesurfer.seekTo(prog);\n            $(\"#img-tooltip\").css({\n                top: e.pageY - 50,\n                left: e.pageX\n            }).attr('data-original-title', wavesurfer.backend.getPlayedTime());\n            $('[data-toggle=\"tooltip\"]').tooltip('show');\n        });\n\n        $(\"#waveform\").on('mouseleave', function (e) {\n            $('[data-toggle=\"tooltip\"]').tooltip('hide');\n        });\n    });\n\n    wavesurfer.on('destroy', function () {\n        hideProgress();\n        showMessage();\n    });\n    wavesurfer.on('error', function () {\n        hideProgress();\n        showMessage();\n        console.error(err);\n    });\n\n    // Setup click handling on the waveform\n    wavesurfer.on('region-dblclick', regionDblClicked);\n    wavesurfer.on('region-click', regionClicked);\n    wavesurfer.on('region-update-end', regionUpdated);\n    wavesurfer.drawer.on('click', clickOverride); // Override Wavesurfer.Drawer's click handler.\n\n    // Do something when the clip is over\n    wavesurfer.on('finish', function () {\n        console.log('Finished playing');\n    });\n\n    // Add function to zoom into selection\n    wavesurfer.zoomTo = zoomTo;\n\n    //Slider\n    slider = document.querySelector('[data-action=\"zoom\"]');\n    slider.value = wavesurfer.params.minPxPerSec;\n    slider.min = 1;\n\n    slider.addEventListener('input', function () {\n        var zoomLevel = Number(slider.value);\n        wavesurfer.zoom(zoomLevel);\n    });\n\n    hideProgress();\n    showMessage();\n});\n\n// Drag'n'drop\ndocument.addEventListener('DOMContentLoaded', function () {\n    var toggleActive = function (e, toggle) {\n        e.stopPropagation();\n        e.preventDefault();\n        toggle ? e.target.classList.add('wavesurfer-dragover') : e.target.classList.remove('wavesurfer-dragover');\n    };\n\n    var handlers = {\n        // Drop event\n        drop: function (e) {\n            toggleActive(e, false);\n\n            // Load the file into wavesurfer\n            if (e.dataTransfer.files.length) {\n                wavesurfer.loadBlob(e.dataTransfer.files[0]);\n            } else {\n                wavesurfer.fireEvent('error', 'Not a file');\n            }\n        },\n\n        // Drag-over event\n        dragover: function (e) {\n            toggleActive(e, true);\n        },\n\n        // Drag-leave event\n        dragleave: function (e) {\n            toggleActive(e, false);\n        }\n    };\n\n    var dropTarget = document.querySelector('#drop');\n    Object.keys(handlers).forEach(function (event) {\n        dropTarget.addEventListener(event, handlers[event]);\n    });\n});\n\n// Zoom in to selection\nfunction zoomTo(start, end) {\n    var parentWidth = this.drawer.getWidth();\n\n    var pxPerSec = parentWidth / (end - start);\n\n    this.params.minPxPerSec = pxPerSec;\n\n    this.params.scrollParent = true;\n\n    this.drawBuffer();\n\n    this.seekAndCenter((end + start) / 2 / this.getDuration());\n\n    this.fireEvent('zoom', pxPerSec);\n}\n\n//Remove selection\nfunction unselectRegion(region) {\n    utilRemoveRegion(wavesurfer, region.id);\n}\n\n//Unhighligt old selection\nfunction unhighlightRegion(region) {\n    region.update({\n        color: 'rgba(0, 255, 0, 0.1)'\n    });\n}\n\n// Override Wavesurfer.Drawer's click handler.\n// Because if you select/update a region, the click event will \n// still be triggered after, and the default is to seek to \"click\" position.\n// That will also deselect a selection, which in this applicaton case is unwanted.\n//\n// FIXME: Maybe another solution:\n// Temporarily disable region-click events #1053\n// https://github.com/katspaugh/wavesurfer.js/issues/1053\nfunction clickOverride(event, progress) {\n\n    if (_regionFlag) {\n        // A region was clicked\n        wavesurfer.backend.seekTo(selectedRegion.start, selectedRegion.end);\n    } else {\n        // Click happened \"outside\" a region\n        // Unselect old selected region\n        if (selectedRegion != null) {\n            unselectRegion(selectedRegion);\n            selectedRegion = null;\n        }\n        wavesurfer.backend.seekTo(progress * wavesurfer.getDuration());\n        wavesurfer.drawer.progress(wavesurfer.backend.getPlayedPercents());\n    }\n    _regionFlag = false;\n}\n\nfunction regionClicked(region) {\n    _regionFlag = true;\n    selectedRegion = region;\n}\n\nfunction regionDblClicked(region) {\n    wavesurfer.drawer.on('click', function (e, progress) {\n        setTimeout(function () {\n            wavesurfer.seekTo(); //this will stop audio from looping\n        }, 0);\n    });\n    setTimeout(function () {\n        wavesurfer.zoomTo(selectedRegion.start, selectedRegion.end);\n        selectedRegion.updateRender();\n        slider.value = wavesurfer.params.minPxPerSec;\n    }, 0);\n}\n\nfunction regionUpdated(region) {\n\n    if (selectedRegion == region) {\n        return;\n    }\n\n    // Unselect old selected region\n    if (selectedRegion != null) {\n        unselectRegion(selectedRegion);\n    }\n\n    regionClicked(region);\n}\n\n// Bind actions to buttons and keypresses\ndocument.addEventListener('DOMContentLoaded', function () {\n    document.addEventListener('keydown', function (e) {\n        var map = {\n            32: 'play', // space\n            37: 'back', // left\n            39: 'forth' // right\n        };\n        var action = map[e.keyCode];\n        if (action in GLOBAL_ACTIONS) {\n            if (document == e.target || document.body == e.target) {\n                e.preventDefault();\n            }\n            GLOBAL_ACTIONS[action](e);\n        }\n    });\n\n    [].forEach.call(document.querySelectorAll('[data-action]'), function (el) {\n        el.addEventListener('click', function (e) {\n            var action = e.currentTarget.dataset.action;\n            if (action in GLOBAL_ACTIONS) {\n                e.preventDefault();\n                GLOBAL_ACTIONS[action](e);\n            }\n        });\n    });\n});\n\nfunction utilRemoveRegion(ws, region_id) {\n    if (ws.regions.list == undefined) return;\n    Object.keys(ws.regions.list).forEach(function (item_id) {\n        var item = ws.regions.list[item_id];\n\n        if (region_id == item_id) {\n            item.remove();\n        }\n    }, ws.Region);\n}\n\n// Misc\ndocument.addEventListener('DOMContentLoaded', function () {\n    // Web Audio not supported\n    if (!window.AudioContext && !window.webkitAudioContext) {\n        var demo = document.querySelector('#demo');\n        if (demo) {\n            demo.innerHTML = '<img src=\"/example/screenshot.png\" />';\n        }\n    }\n\n    // Navbar links\n    var ul = document.querySelector('.nav-pills');\n    var pills = ul.querySelectorAll('li');\n    var active = pills[0];\n    if (location.search) {\n        var first = location.search.split('&')[0];\n        var link = ul.querySelector('a[href=\"' + first + '\"]');\n        if (link) {\n            active = link.parentNode;\n        }\n    }\n    active && active.classList.add('active');\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (wavesurfer);\nvar selectedRegion;\nvar utilRemoveRegion;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 46 */
/***/ (function(module, exports) {

eval("module.exports = function(it, Constructor, name, forbiddenField){\n  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hbi1pbnN0YW5jZS5qcz9lNGQ2Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQsIENvbnN0cnVjdG9yLCBuYW1lLCBmb3JiaWRkZW5GaWVsZCl7XG4gIGlmKCEoaXQgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikgfHwgKGZvcmJpZGRlbkZpZWxkICE9PSB1bmRlZmluZWQgJiYgZm9yYmlkZGVuRmllbGQgaW4gaXQpKXtcbiAgICB0aHJvdyBUeXBlRXJyb3IobmFtZSArICc6IGluY29ycmVjdCBpbnZvY2F0aW9uIScpO1xuICB9IHJldHVybiBpdDtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hbi1pbnN0YW5jZS5qc1xuLy8gbW9kdWxlIGlkID0gNDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx      = __webpack_require__(23)\n  , IObject  = __webpack_require__(50)\n  , toObject = __webpack_require__(37)\n  , toLength = __webpack_require__(60)\n  , asc      = __webpack_require__(136);\nmodule.exports = function(TYPE, $create){\n  var IS_MAP        = TYPE == 1\n    , IS_FILTER     = TYPE == 2\n    , IS_SOME       = TYPE == 3\n    , IS_EVERY      = TYPE == 4\n    , IS_FIND_INDEX = TYPE == 6\n    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX\n    , create        = $create || asc;\n  return function($this, callbackfn, that){\n    var O      = toObject($this)\n      , self   = IObject(O)\n      , f      = ctx(callbackfn, that, 3)\n      , length = toLength(self.length)\n      , index  = 0\n      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined\n      , val, res;\n    for(;length > index; index++)if(NO_HOLES || index in self){\n      val = self[index];\n      res = f(val, index, O);\n      if(TYPE){\n        if(IS_MAP)result[index] = res;            // map\n        else if(res)switch(TYPE){\n          case 3: return true;                    // some\n          case 5: return val;                     // find\n          case 6: return index;                   // findIndex\n          case 2: result.push(val);               // filter\n        } else if(IS_EVERY)return false;          // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hcnJheS1tZXRob2RzLmpzP2RlNzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMCAtPiBBcnJheSNmb3JFYWNoXG4vLyAxIC0+IEFycmF5I21hcFxuLy8gMiAtPiBBcnJheSNmaWx0ZXJcbi8vIDMgLT4gQXJyYXkjc29tZVxuLy8gNCAtPiBBcnJheSNldmVyeVxuLy8gNSAtPiBBcnJheSNmaW5kXG4vLyA2IC0+IEFycmF5I2ZpbmRJbmRleFxudmFyIGN0eCAgICAgID0gcmVxdWlyZSgnLi9fY3R4JylcbiAgLCBJT2JqZWN0ICA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKVxuICAsIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JylcbiAgLCB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpXG4gICwgYXNjICAgICAgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNyZWF0ZScpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihUWVBFLCAkY3JlYXRlKXtcbiAgdmFyIElTX01BUCAgICAgICAgPSBUWVBFID09IDFcbiAgICAsIElTX0ZJTFRFUiAgICAgPSBUWVBFID09IDJcbiAgICAsIElTX1NPTUUgICAgICAgPSBUWVBFID09IDNcbiAgICAsIElTX0VWRVJZICAgICAgPSBUWVBFID09IDRcbiAgICAsIElTX0ZJTkRfSU5ERVggPSBUWVBFID09IDZcbiAgICAsIE5PX0hPTEVTICAgICAgPSBUWVBFID09IDUgfHwgSVNfRklORF9JTkRFWFxuICAgICwgY3JlYXRlICAgICAgICA9ICRjcmVhdGUgfHwgYXNjO1xuICByZXR1cm4gZnVuY3Rpb24oJHRoaXMsIGNhbGxiYWNrZm4sIHRoYXQpe1xuICAgIHZhciBPICAgICAgPSB0b09iamVjdCgkdGhpcylcbiAgICAgICwgc2VsZiAgID0gSU9iamVjdChPKVxuICAgICAgLCBmICAgICAgPSBjdHgoY2FsbGJhY2tmbiwgdGhhdCwgMylcbiAgICAgICwgbGVuZ3RoID0gdG9MZW5ndGgoc2VsZi5sZW5ndGgpXG4gICAgICAsIGluZGV4ICA9IDBcbiAgICAgICwgcmVzdWx0ID0gSVNfTUFQID8gY3JlYXRlKCR0aGlzLCBsZW5ndGgpIDogSVNfRklMVEVSID8gY3JlYXRlKCR0aGlzLCAwKSA6IHVuZGVmaW5lZFxuICAgICAgLCB2YWwsIHJlcztcbiAgICBmb3IoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKWlmKE5PX0hPTEVTIHx8IGluZGV4IGluIHNlbGYpe1xuICAgICAgdmFsID0gc2VsZltpbmRleF07XG4gICAgICByZXMgPSBmKHZhbCwgaW5kZXgsIE8pO1xuICAgICAgaWYoVFlQRSl7XG4gICAgICAgIGlmKElTX01BUClyZXN1bHRbaW5kZXhdID0gcmVzOyAgICAgICAgICAgIC8vIG1hcFxuICAgICAgICBlbHNlIGlmKHJlcylzd2l0Y2goVFlQRSl7XG4gICAgICAgICAgY2FzZSAzOiByZXR1cm4gdHJ1ZTsgICAgICAgICAgICAgICAgICAgIC8vIHNvbWVcbiAgICAgICAgICBjYXNlIDU6IHJldHVybiB2YWw7ICAgICAgICAgICAgICAgICAgICAgLy8gZmluZFxuICAgICAgICAgIGNhc2UgNjogcmV0dXJuIGluZGV4OyAgICAgICAgICAgICAgICAgICAvLyBmaW5kSW5kZXhcbiAgICAgICAgICBjYXNlIDI6IHJlc3VsdC5wdXNoKHZhbCk7ICAgICAgICAgICAgICAgLy8gZmlsdGVyXG4gICAgICAgIH0gZWxzZSBpZihJU19FVkVSWSlyZXR1cm4gZmFsc2U7ICAgICAgICAgIC8vIGV2ZXJ5XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBJU19GSU5EX0lOREVYID8gLTEgOiBJU19TT01FIHx8IElTX0VWRVJZID8gSVNfRVZFUlkgOiByZXN1bHQ7XG4gIH07XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYXJyYXktbWV0aG9kcy5qc1xuLy8gbW9kdWxlIGlkID0gNDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 48 */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb2YuanM/NDhlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKGl0KS5zbGljZSg4LCAtMSk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY29mLmpzXG4vLyBtb2R1bGUgaWQgPSA0OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 49 */
/***/ (function(module, exports) {

eval("// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19lbnVtLWJ1Zy1rZXlzLmpzPzc1OTgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSUUgOC0gZG9uJ3QgZW51bSBidWcga2V5c1xubW9kdWxlLmV4cG9ydHMgPSAoXG4gICdjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2YnXG4pLnNwbGl0KCcsJyk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19lbnVtLWJ1Zy1rZXlzLmpzXG4vLyBtb2R1bGUgaWQgPSA0OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

eval("// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(48);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pb2JqZWN0LmpzPzVjZjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBhbmQgbm9uLWVudW1lcmFibGUgb2xkIFY4IHN0cmluZ3NcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0KCd6JykucHJvcGVydHlJc0VudW1lcmFibGUoMCkgPyBPYmplY3QgOiBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBjb2YoaXQpID09ICdTdHJpbmcnID8gaXQuc3BsaXQoJycpIDogT2JqZWN0KGl0KTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pb2JqZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSA1MFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar LIBRARY        = __webpack_require__(52)\n  , $export        = __webpack_require__(14)\n  , redefine       = __webpack_require__(56)\n  , hide           = __webpack_require__(16)\n  , has            = __webpack_require__(15)\n  , Iterators      = __webpack_require__(24)\n  , $iterCreate    = __webpack_require__(144)\n  , setToStringTag = __webpack_require__(36)\n  , getPrototypeOf = __webpack_require__(87)\n  , ITERATOR       = __webpack_require__(3)('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined\n    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native\n    , methods, key, IteratorPrototype;\n  // Fix native\n  if($anyNative){\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));\n    if(IteratorPrototype !== Object.prototype){\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if(DEF_VALUES && $native && $native.name !== VALUES){\n    VALUES_BUG = true;\n    $default = function values(){ return $native.call(this); };\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES ? $default : getMethod(VALUES),\n      keys:    IS_SET     ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLWRlZmluZS5qcz85YTk0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBMSUJSQVJZICAgICAgICA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKVxuICAsICRleHBvcnQgICAgICAgID0gcmVxdWlyZSgnLi9fZXhwb3J0JylcbiAgLCByZWRlZmluZSAgICAgICA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJylcbiAgLCBoaWRlICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hpZGUnKVxuICAsIGhhcyAgICAgICAgICAgID0gcmVxdWlyZSgnLi9faGFzJylcbiAgLCBJdGVyYXRvcnMgICAgICA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpXG4gICwgJGl0ZXJDcmVhdGUgICAgPSByZXF1aXJlKCcuL19pdGVyLWNyZWF0ZScpXG4gICwgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpXG4gICwgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJylcbiAgLCBJVEVSQVRPUiAgICAgICA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpXG4gICwgQlVHR1kgICAgICAgICAgPSAhKFtdLmtleXMgJiYgJ25leHQnIGluIFtdLmtleXMoKSkgLy8gU2FmYXJpIGhhcyBidWdneSBpdGVyYXRvcnMgdy9vIGBuZXh0YFxuICAsIEZGX0lURVJBVE9SICAgID0gJ0BAaXRlcmF0b3InXG4gICwgS0VZUyAgICAgICAgICAgPSAna2V5cydcbiAgLCBWQUxVRVMgICAgICAgICA9ICd2YWx1ZXMnO1xuXG52YXIgcmV0dXJuVGhpcyA9IGZ1bmN0aW9uKCl7IHJldHVybiB0aGlzOyB9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKEJhc2UsIE5BTUUsIENvbnN0cnVjdG9yLCBuZXh0LCBERUZBVUxULCBJU19TRVQsIEZPUkNFRCl7XG4gICRpdGVyQ3JlYXRlKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KTtcbiAgdmFyIGdldE1ldGhvZCA9IGZ1bmN0aW9uKGtpbmQpe1xuICAgIGlmKCFCVUdHWSAmJiBraW5kIGluIHByb3RvKXJldHVybiBwcm90b1traW5kXTtcbiAgICBzd2l0Y2goa2luZCl7XG4gICAgICBjYXNlIEtFWVM6IHJldHVybiBmdW5jdGlvbiBrZXlzKCl7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgICBjYXNlIFZBTFVFUzogcmV0dXJuIGZ1bmN0aW9uIHZhbHVlcygpeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICAgIH0gcmV0dXJuIGZ1bmN0aW9uIGVudHJpZXMoKXsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgfTtcbiAgdmFyIFRBRyAgICAgICAgPSBOQU1FICsgJyBJdGVyYXRvcidcbiAgICAsIERFRl9WQUxVRVMgPSBERUZBVUxUID09IFZBTFVFU1xuICAgICwgVkFMVUVTX0JVRyA9IGZhbHNlXG4gICAgLCBwcm90byAgICAgID0gQmFzZS5wcm90b3R5cGVcbiAgICAsICRuYXRpdmUgICAgPSBwcm90b1tJVEVSQVRPUl0gfHwgcHJvdG9bRkZfSVRFUkFUT1JdIHx8IERFRkFVTFQgJiYgcHJvdG9bREVGQVVMVF1cbiAgICAsICRkZWZhdWx0ICAgPSAkbmF0aXZlIHx8IGdldE1ldGhvZChERUZBVUxUKVxuICAgICwgJGVudHJpZXMgICA9IERFRkFVTFQgPyAhREVGX1ZBTFVFUyA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKCdlbnRyaWVzJykgOiB1bmRlZmluZWRcbiAgICAsICRhbnlOYXRpdmUgPSBOQU1FID09ICdBcnJheScgPyBwcm90by5lbnRyaWVzIHx8ICRuYXRpdmUgOiAkbmF0aXZlXG4gICAgLCBtZXRob2RzLCBrZXksIEl0ZXJhdG9yUHJvdG90eXBlO1xuICAvLyBGaXggbmF0aXZlXG4gIGlmKCRhbnlOYXRpdmUpe1xuICAgIEl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG90eXBlT2YoJGFueU5hdGl2ZS5jYWxsKG5ldyBCYXNlKSk7XG4gICAgaWYoSXRlcmF0b3JQcm90b3R5cGUgIT09IE9iamVjdC5wcm90b3R5cGUpe1xuICAgICAgLy8gU2V0IEBAdG9TdHJpbmdUYWcgdG8gbmF0aXZlIGl0ZXJhdG9yc1xuICAgICAgc2V0VG9TdHJpbmdUYWcoSXRlcmF0b3JQcm90b3R5cGUsIFRBRywgdHJ1ZSk7XG4gICAgICAvLyBmaXggZm9yIHNvbWUgb2xkIGVuZ2luZXNcbiAgICAgIGlmKCFMSUJSQVJZICYmICFoYXMoSXRlcmF0b3JQcm90b3R5cGUsIElURVJBVE9SKSloaWRlKEl0ZXJhdG9yUHJvdG90eXBlLCBJVEVSQVRPUiwgcmV0dXJuVGhpcyk7XG4gICAgfVxuICB9XG4gIC8vIGZpeCBBcnJheSN7dmFsdWVzLCBAQGl0ZXJhdG9yfS5uYW1lIGluIFY4IC8gRkZcbiAgaWYoREVGX1ZBTFVFUyAmJiAkbmF0aXZlICYmICRuYXRpdmUubmFtZSAhPT0gVkFMVUVTKXtcbiAgICBWQUxVRVNfQlVHID0gdHJ1ZTtcbiAgICAkZGVmYXVsdCA9IGZ1bmN0aW9uIHZhbHVlcygpeyByZXR1cm4gJG5hdGl2ZS5jYWxsKHRoaXMpOyB9O1xuICB9XG4gIC8vIERlZmluZSBpdGVyYXRvclxuICBpZigoIUxJQlJBUlkgfHwgRk9SQ0VEKSAmJiAoQlVHR1kgfHwgVkFMVUVTX0JVRyB8fCAhcHJvdG9bSVRFUkFUT1JdKSl7XG4gICAgaGlkZShwcm90bywgSVRFUkFUT1IsICRkZWZhdWx0KTtcbiAgfVxuICAvLyBQbHVnIGZvciBsaWJyYXJ5XG4gIEl0ZXJhdG9yc1tOQU1FXSA9ICRkZWZhdWx0O1xuICBJdGVyYXRvcnNbVEFHXSAgPSByZXR1cm5UaGlzO1xuICBpZihERUZBVUxUKXtcbiAgICBtZXRob2RzID0ge1xuICAgICAgdmFsdWVzOiAgREVGX1ZBTFVFUyA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKFZBTFVFUyksXG4gICAgICBrZXlzOiAgICBJU19TRVQgICAgID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoS0VZUyksXG4gICAgICBlbnRyaWVzOiAkZW50cmllc1xuICAgIH07XG4gICAgaWYoRk9SQ0VEKWZvcihrZXkgaW4gbWV0aG9kcyl7XG4gICAgICBpZighKGtleSBpbiBwcm90bykpcmVkZWZpbmUocHJvdG8sIGtleSwgbWV0aG9kc1trZXldKTtcbiAgICB9IGVsc2UgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoQlVHR1kgfHwgVkFMVUVTX0JVRyksIE5BTUUsIG1ldGhvZHMpO1xuICB9XG4gIHJldHVybiBtZXRob2RzO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItZGVmaW5lLmpzXG4vLyBtb2R1bGUgaWQgPSA1MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 52 */
/***/ (function(module, exports) {

eval("module.exports = true;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19saWJyYXJ5LmpzPzJjODAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB0cnVlO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fbGlicmFyeS5qc1xuLy8gbW9kdWxlIGlkID0gNTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

eval("var pIE            = __webpack_require__(34)\n  , createDesc     = __webpack_require__(35)\n  , toIObject      = __webpack_require__(17)\n  , toPrimitive    = __webpack_require__(61)\n  , has            = __webpack_require__(15)\n  , IE8_DOM_DEFINE = __webpack_require__(83)\n  , gOPD           = Object.getOwnPropertyDescriptor;\n\nexports.f = __webpack_require__(5) ? gOPD : function getOwnPropertyDescriptor(O, P){\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if(IE8_DOM_DEFINE)try {\n    return gOPD(O, P);\n  } catch(e){ /* empty */ }\n  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ29wZC5qcz9kN2Q4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBwSUUgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKVxuICAsIGNyZWF0ZURlc2MgICAgID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpXG4gICwgdG9JT2JqZWN0ICAgICAgPSByZXF1aXJlKCcuL190by1pb2JqZWN0JylcbiAgLCB0b1ByaW1pdGl2ZSAgICA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpXG4gICwgaGFzICAgICAgICAgICAgPSByZXF1aXJlKCcuL19oYXMnKVxuICAsIElFOF9ET01fREVGSU5FID0gcmVxdWlyZSgnLi9faWU4LWRvbS1kZWZpbmUnKVxuICAsIGdPUEQgICAgICAgICAgID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcblxuZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGdPUEQgOiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUCl7XG4gIE8gPSB0b0lPYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgaWYoSUU4X0RPTV9ERUZJTkUpdHJ5IHtcbiAgICByZXR1cm4gZ09QRChPLCBQKTtcbiAgfSBjYXRjaChlKXsgLyogZW1wdHkgKi8gfVxuICBpZihoYXMoTywgUCkpcmV0dXJuIGNyZWF0ZURlc2MoIXBJRS5mLmNhbGwoTywgUCksIE9bUF0pO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1nb3BkLmpzXG4vLyBtb2R1bGUgaWQgPSA1M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 54 */
/***/ (function(module, exports) {

eval("exports.f = Object.getOwnPropertySymbols;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ29wcy5qcz9hNWZiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ29wcy5qc1xuLy8gbW9kdWxlIGlkID0gNTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

eval("var hide = __webpack_require__(16);\nmodule.exports = function(target, src, safe){\n  for(var key in src){\n    if(safe && target[key])target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19yZWRlZmluZS1hbGwuanM/YzcyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odGFyZ2V0LCBzcmMsIHNhZmUpe1xuICBmb3IodmFyIGtleSBpbiBzcmMpe1xuICAgIGlmKHNhZmUgJiYgdGFyZ2V0W2tleV0pdGFyZ2V0W2tleV0gPSBzcmNba2V5XTtcbiAgICBlbHNlIGhpZGUodGFyZ2V0LCBrZXksIHNyY1trZXldKTtcbiAgfSByZXR1cm4gdGFyZ2V0O1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3JlZGVmaW5lLWFsbC5qc1xuLy8gbW9kdWxlIGlkID0gNTVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(16);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19yZWRlZmluZS5qcz8xNDU1Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9faGlkZScpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fcmVkZWZpbmUuanNcbi8vIG1vZHVsZSBpZCA9IDU2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

eval("var shared = __webpack_require__(58)('keys')\n  , uid    = __webpack_require__(38);\nmodule.exports = function(key){\n  return shared[key] || (shared[key] = uid(key));\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zaGFyZWQta2V5LmpzPzJhNmMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCdrZXlzJylcbiAgLCB1aWQgICAgPSByZXF1aXJlKCcuL191aWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oa2V5KXtcbiAgcmV0dXJuIHNoYXJlZFtrZXldIHx8IChzaGFyZWRba2V5XSA9IHVpZChrZXkpKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zaGFyZWQta2V5LmpzXG4vLyBtb2R1bGUgaWQgPSA1N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

eval("var global = __webpack_require__(6)\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zaGFyZWQuanM/N2I2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJylcbiAgLCBTSEFSRUQgPSAnX19jb3JlLWpzX3NoYXJlZF9fJ1xuICAsIHN0b3JlICA9IGdsb2JhbFtTSEFSRURdIHx8IChnbG9iYWxbU0hBUkVEXSA9IHt9KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oa2V5KXtcbiAgcmV0dXJuIHN0b3JlW2tleV0gfHwgKHN0b3JlW2tleV0gPSB7fSk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2hhcmVkLmpzXG4vLyBtb2R1bGUgaWQgPSA1OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 59 */
/***/ (function(module, exports) {

eval("// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1pbnRlZ2VyLmpzP2Y2NWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4xLjQgVG9JbnRlZ2VyXG52YXIgY2VpbCAgPSBNYXRoLmNlaWxcbiAgLCBmbG9vciA9IE1hdGguZmxvb3I7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIGlzTmFOKGl0ID0gK2l0KSA/IDAgOiAoaXQgPiAwID8gZmxvb3IgOiBjZWlsKShpdCk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8taW50ZWdlci5qc1xuLy8gbW9kdWxlIGlkID0gNTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 7.1.15 ToLength\nvar toInteger = __webpack_require__(59)\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1sZW5ndGguanM/NjJhNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjEuMTUgVG9MZW5ndGhcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJylcbiAgLCBtaW4gICAgICAgPSBNYXRoLm1pbjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gaXQgPiAwID8gbWluKHRvSW50ZWdlcihpdCksIDB4MWZmZmZmZmZmZmZmZmYpIDogMDsgLy8gcG93KDIsIDUzKSAtIDEgPT0gOTAwNzE5OTI1NDc0MDk5MVxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWxlbmd0aC5qc1xuLy8gbW9kdWxlIGlkID0gNjBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(13);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1wcmltaXRpdmUuanM/NDlhNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjEuMSBUb1ByaW1pdGl2ZShpbnB1dCBbLCBQcmVmZXJyZWRUeXBlXSlcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuLy8gaW5zdGVhZCBvZiB0aGUgRVM2IHNwZWMgdmVyc2lvbiwgd2UgZGlkbid0IGltcGxlbWVudCBAQHRvUHJpbWl0aXZlIGNhc2Vcbi8vIGFuZCB0aGUgc2Vjb25kIGFyZ3VtZW50IC0gZmxhZyAtIHByZWZlcnJlZCB0eXBlIGlzIGEgc3RyaW5nXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0LCBTKXtcbiAgaWYoIWlzT2JqZWN0KGl0KSlyZXR1cm4gaXQ7XG4gIHZhciBmbiwgdmFsO1xuICBpZihTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKXJldHVybiB2YWw7XG4gIGlmKHR5cGVvZiAoZm4gPSBpdC52YWx1ZU9mKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpcmV0dXJuIHZhbDtcbiAgaWYoIVMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpcmV0dXJuIHZhbDtcbiAgdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLXByaW1pdGl2ZS5qc1xuLy8gbW9kdWxlIGlkID0gNjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

eval("var global         = __webpack_require__(6)\n  , core           = __webpack_require__(0)\n  , LIBRARY        = __webpack_require__(52)\n  , wksExt         = __webpack_require__(63)\n  , defineProperty = __webpack_require__(7).f;\nmodule.exports = function(name){\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL193a3MtZGVmaW5lLmpzP2I2ZTAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdsb2JhbCAgICAgICAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJylcbiAgLCBjb3JlICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2NvcmUnKVxuICAsIExJQlJBUlkgICAgICAgID0gcmVxdWlyZSgnLi9fbGlicmFyeScpXG4gICwgd2tzRXh0ICAgICAgICAgPSByZXF1aXJlKCcuL193a3MtZXh0JylcbiAgLCBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG5hbWUpe1xuICB2YXIgJFN5bWJvbCA9IGNvcmUuU3ltYm9sIHx8IChjb3JlLlN5bWJvbCA9IExJQlJBUlkgPyB7fSA6IGdsb2JhbC5TeW1ib2wgfHwge30pO1xuICBpZihuYW1lLmNoYXJBdCgwKSAhPSAnXycgJiYgIShuYW1lIGluICRTeW1ib2wpKWRlZmluZVByb3BlcnR5KCRTeW1ib2wsIG5hbWUsIHt2YWx1ZTogd2tzRXh0LmYobmFtZSl9KTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL193a3MtZGVmaW5lLmpzXG4vLyBtb2R1bGUgaWQgPSA2MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

eval("exports.f = __webpack_require__(3);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL193a3MtZXh0LmpzPzZlZTIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fd2tzJyk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL193a3MtZXh0LmpzXG4vLyBtb2R1bGUgaWQgPSA2M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 64 */
/***/ (function(module, exports) {

eval("//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar $at  = __webpack_require__(151)(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(51)(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IuanM/ZmUxOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgJGF0ICA9IHJlcXVpcmUoJy4vX3N0cmluZy1hdCcpKHRydWUpO1xuXG4vLyAyMS4xLjMuMjcgU3RyaW5nLnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5yZXF1aXJlKCcuL19pdGVyLWRlZmluZScpKFN0cmluZywgJ1N0cmluZycsIGZ1bmN0aW9uKGl0ZXJhdGVkKXtcbiAgdGhpcy5fdCA9IFN0cmluZyhpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuLy8gMjEuMS41LjIuMSAlU3RyaW5nSXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24oKXtcbiAgdmFyIE8gICAgID0gdGhpcy5fdFxuICAgICwgaW5kZXggPSB0aGlzLl9pXG4gICAgLCBwb2ludDtcbiAgaWYoaW5kZXggPj0gTy5sZW5ndGgpcmV0dXJuIHt2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlfTtcbiAgcG9pbnQgPSAkYXQoTywgaW5kZXgpO1xuICB0aGlzLl9pICs9IHBvaW50Lmxlbmd0aDtcbiAgcmV0dXJuIHt2YWx1ZTogcG9pbnQsIGRvbmU6IGZhbHNlfTtcbn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yLmpzXG4vLyBtb2R1bGUgaWQgPSA2NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = __webpack_require__(1);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(2);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// works by reference\nfunction swap(arr, i1, i2) {\n  var tmp = arr[i1];\n  arr[i1] = arr[i2];\n  arr[i2] = tmp;\n}\n\n// https://jsperf.com/js-for-loop-vs-array-indexof/346\nfunction indexOf(arr, el) {\n  var l = arr.length;\n  // ignore first element as it can't be a entry\n  for (var i = 1; i < l; i++) {\n    if (arr[i] === el) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Define if `time1` should be lower in the topography than `time2`.\n * Is dynamically affected to the priority queue according to handle `min` and `max` heap.\n * @param {Number} time1\n * @param {Number} time2\n * @return {Boolean}\n */\nvar _isLowerMaxHeap = function _isLowerMaxHeap(time1, time2) {\n  return time1 < time2;\n};\n\nvar _isLowerMinHeap = function _isLowerMinHeap(time1, time2) {\n  return time1 > time2;\n};\n\n/**\n * Define if `time1` should be higher in the topography than `time2`.\n * Is dynamically affected to the priority queue according to handle `min` and `max` heap.\n * @param {Number} time1\n * @param {Number} time2\n * @return {Boolean}\n */\nvar _isHigherMaxHeap = function _isHigherMaxHeap(time1, time2) {\n  return time1 > time2;\n};\n\nvar _isHigherMinHeap = function _isHigherMinHeap(time1, time2) {\n  return time1 < time2;\n};\n\nvar POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n/**\n * Priority queue implementing a binary heap.\n * Acts as a min heap by default, can be dynamically changed to a max heap by setting `reverse` to true.\n */\n\nvar PriorityQueue = function () {\n  /**\n   * @param {String} [accessor='time'] - The attribute of the entries that should be used as the priority value. This attribute must be a number.\n   * @param {Number} [heapLength=100] - The size of the array used to create the heap.\n   */\n\n  function PriorityQueue() {\n    var heapLength = arguments.length <= 0 || arguments[0] === undefined ? 100 : arguments[0];\n    (0, _classCallCheck3.default)(this, PriorityQueue);\n\n    /**\n     * @type {Number}\n     * A pointer to the first empty index of the heap.\n     */\n    this._currentLength = 1;\n\n    /**\n     * An array of the sorted indexes of the entries, the actual heap. Ignore the index 0.\n     * @type {Array}\n     */\n    this._heap = new Array(heapLength + 1);\n\n    /**\n     * Define the type of the queue: `min` heap if `false`, `max` heap if `true`\n     * @type {Boolean}\n     */\n    this._reverse = null;\n\n    // initialize compare functions\n    this.reverse = false;\n  }\n\n  /**\n   * Return the time of the first element in the binary heap.\n   * @returns {Number}\n   */\n\n\n  (0, _createClass3.default)(PriorityQueue, [{\n    key: \"_bubbleUp\",\n\n\n    /**\n     * Fix the heap by moving an entry to a new upper position.\n     * @param {Number} startIndex - The index of the entry to move.\n     */\n    value: function _bubbleUp(startIndex) {\n      var entry = this._heap[startIndex];\n\n      var index = startIndex;\n      var parentIndex = Math.floor(index / 2);\n      var parent = this._heap[parentIndex];\n\n      while (parent && this._isHigher(entry.queueTime, parent.queueTime)) {\n        swap(this._heap, index, parentIndex);\n\n        index = parentIndex;\n        parentIndex = Math.floor(index / 2);\n        parent = this._heap[parentIndex];\n      }\n    }\n\n    /**\n     * Fix the heap by moving an entry to a new lower position.\n     * @param {Number} startIndex - The index of the entry to move.\n     */\n\n  }, {\n    key: \"_bubbleDown\",\n    value: function _bubbleDown(startIndex) {\n      var entry = this._heap[startIndex];\n\n      var index = startIndex;\n      var c1index = index * 2;\n      var c2index = c1index + 1;\n      var child1 = this._heap[c1index];\n      var child2 = this._heap[c2index];\n\n      while (child1 && this._isLower(entry.queueTime, child1.queueTime) || child2 && this._isLower(entry.queueTime, child2.queueTime)) {\n        // swap with the minimum child\n        var targetIndex = void 0;\n\n        if (child2) targetIndex = this._isHigher(child1.queueTime, child2.queueTime) ? c1index : c2index;else targetIndex = c1index;\n\n        swap(this._heap, index, targetIndex);\n\n        // update to find next children\n        index = targetIndex;\n        c1index = index * 2;\n        c2index = c1index + 1;\n        child1 = this._heap[c1index];\n        child2 = this._heap[c2index];\n      }\n    }\n\n    /**\n     * Build the heap from bottom up.\n     */\n\n  }, {\n    key: \"buildHeap\",\n    value: function buildHeap() {\n      // find the index of the last internal node\n      // @todo - make sure that's the right way to do.\n      var maxIndex = Math.floor((this._currentLength - 1) / 2);\n\n      for (var i = maxIndex; i > 0; i--) {\n        this._bubbleDown(i);\n      }\n    }\n\n    /**\n     * Insert a new object in the binary heap, and sort it.\n     * @param {Object} entry - Entry to insert.\n     * @param {Number} time - Time at which the entry should be orderer.\n     * @returns {Number} - Time of the first entry in the heap.\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(entry, time) {\n      if (Math.abs(time) !== POSITIVE_INFINITY) {\n        entry.queueTime = time;\n        // add the new entry at the end of the heap\n        this._heap[this._currentLength] = entry;\n        // bubble it up\n        this._bubbleUp(this._currentLength);\n        this._currentLength += 1;\n\n        return this.time;\n      }\n\n      entry.queueTime = undefined;\n      return this.remove(entry);\n    }\n\n    /**\n     * Move an entry to a new position.\n     * @param {Object} entry - Entry to move.\n     * @param {Number} time - Time at which the entry should be orderer.\n     * @return {Number} - Time of first entry in the heap.\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(entry, time) {\n      if (Math.abs(time) !== POSITIVE_INFINITY) {\n        var index = indexOf(this._heap, entry);\n\n        if (index !== -1) {\n          entry.queueTime = time;\n          // define if the entry should be bubbled up or down\n          var parent = this._heap[Math.floor(index / 2)];\n\n          if (parent && this._isHigher(time, parent.queueTime)) this._bubbleUp(index);else this._bubbleDown(index);\n        }\n\n        return this.time;\n      }\n\n      entry.queueTime = undefined;\n      return this.remove(entry);\n    }\n\n    /**\n     * This is broken, assuming bubbling down only is false\n     * Remove an entry from the heap and fix the heap.\n     * @param {Object} entry - Entry to remove.\n     * @return {Number} - Time of first entry in the heap.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(entry) {\n      // find the index of the entry\n      var index = indexOf(this._heap, entry);\n\n      if (index !== -1) {\n        var lastIndex = this._currentLength - 1;\n\n        // if the entry is the last one\n        if (index === lastIndex) {\n          // remove the element from heap\n          this._heap[lastIndex] = undefined;\n          // update current length\n          this._currentLength = lastIndex;\n\n          return this.time;\n        } else {\n          // swap with the last element of the heap\n          swap(this._heap, index, lastIndex);\n          // remove the element from heap\n          this._heap[lastIndex] = undefined;\n\n          if (index === 1) {\n            this._bubbleDown(1);\n          } else {\n            // bubble the (ex last) element up or down according to its new context\n            var _entry = this._heap[index];\n            var parent = this._heap[Math.floor(index / 2)];\n\n            if (parent && this._isHigher(_entry.queueTime, parent.queueTime)) this._bubbleUp(index);else this._bubbleDown(index);\n          }\n        }\n\n        // update current length\n        this._currentLength = lastIndex;\n      }\n\n      return this.time;\n    }\n\n    /**\n     * Clear the queue.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._currentLength = 1;\n      this._heap = new Array(this._heap.length);\n    }\n  }, {\n    key: \"has\",\n    value: function has(entry) {\n      return this._heap.indexOf(entry) !== -1;\n    }\n  }, {\n    key: \"time\",\n    get: function get() {\n      if (this._currentLength > 1) return this._heap[1].queueTime;\n\n      return Infinity;\n    }\n\n    /**\n     * Returns the entry of the first element in the binary heap.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"head\",\n    get: function get() {\n      return this._heap[1];\n    }\n\n    /**\n     * Change the order of the queue, rebuild the heap with the existing entries.\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"reverse\",\n    set: function set(value) {\n      if (value !== this._reverse) {\n        this._reverse = value;\n\n        if (this._reverse === true) {\n          this._isLower = _isLowerMaxHeap;\n          this._isHigher = _isHigherMaxHeap;\n        } else {\n          this._isLower = _isLowerMinHeap;\n          this._isHigher = _isHigherMinHeap;\n        }\n\n        this.buildHeap();\n      }\n    },\n    get: function get() {\n      return this._reverse;\n    }\n  }]);\n  return PriorityQueue;\n}();\n\nexports.default = PriorityQueue;\n//# sourceMappingURL=data:application/json;base64,# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSimpleScheduler = exports.getScheduler = undefined;\n\nvar _weakMap = __webpack_require__(120);\n\nvar _weakMap2 = _interopRequireDefault(_weakMap);\n\nvar _audioContext = __webpack_require__(18);\n\nvar _audioContext2 = _interopRequireDefault(_audioContext);\n\nvar _scheduler = __webpack_require__(92);\n\nvar _scheduler2 = _interopRequireDefault(_scheduler);\n\nvar _simpleScheduler = __webpack_require__(93);\n\nvar _simpleScheduler2 = _interopRequireDefault(_simpleScheduler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar schedulerMap = new _weakMap2.default(); // schedulers should be singletons\n\nvar simpleSchedulerMap = new _weakMap2.default();\n\n// scheduler factory\nvar getScheduler = exports.getScheduler = function getScheduler() {\n  var audioContext = arguments.length <= 0 || arguments[0] === undefined ? _audioContext2.default : arguments[0];\n\n  var scheduler = schedulerMap.get(audioContext);\n\n  if (!scheduler) {\n    scheduler = new _scheduler2.default({ audioContext: audioContext });\n    schedulerMap.set(audioContext, scheduler);\n  }\n\n  return scheduler;\n};\n\nvar getSimpleScheduler = exports.getSimpleScheduler = function getSimpleScheduler() {\n  var audioContext = arguments.length <= 0 || arguments[0] === undefined ? _audioContext2.default : arguments[0];\n\n  var simpleScheduler = simpleSchedulerMap.get(audioContext);\n\n  if (!simpleScheduler) {\n    simpleScheduler = new _simpleScheduler2.default({ audioContext: audioContext });\n    simpleSchedulerMap.set(audioContext, simpleScheduler);\n  }\n\n  return simpleScheduler;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZhY3Rvcmllcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUEsSUFBTSxlQUFlLHVCQUFmOztBQUNOLElBQU0scUJBQXFCLHVCQUFyQjs7O0FBR0MsSUFBTSxzQ0FBZSxTQUFmLFlBQWUsR0FBNkM7TUFBcEMsMkdBQW9DOztBQUN2RSxNQUFJLFlBQVksYUFBYSxHQUFiLENBQWlCLFlBQWpCLENBQVosQ0FEbUU7O0FBR3ZFLE1BQUksQ0FBQyxTQUFELEVBQVk7QUFDZCxnQkFBWSx3QkFBYyxFQUFFLGNBQWMsWUFBZCxFQUFoQixDQUFaLENBRGM7QUFFZCxpQkFBYSxHQUFiLENBQWlCLFlBQWpCLEVBQStCLFNBQS9CLEVBRmM7R0FBaEI7O0FBS0EsU0FBTyxTQUFQLENBUnVFO0NBQTdDOztBQVdyQixJQUFNLGtEQUFxQixTQUFyQixrQkFBcUIsR0FBNkM7TUFBcEMsMkdBQW9DOztBQUM3RSxNQUFJLGtCQUFrQixtQkFBbUIsR0FBbkIsQ0FBdUIsWUFBdkIsQ0FBbEIsQ0FEeUU7O0FBRzdFLE1BQUksQ0FBQyxlQUFELEVBQWtCO0FBQ3BCLHNCQUFrQiw4QkFBb0IsRUFBRSxjQUFjLFlBQWQsRUFBdEIsQ0FBbEIsQ0FEb0I7QUFFcEIsdUJBQW1CLEdBQW5CLENBQXVCLFlBQXZCLEVBQXFDLGVBQXJDLEVBRm9CO0dBQXRCOztBQUtBLFNBQU8sZUFBUCxDQVI2RTtDQUE3QyIsImZpbGUiOiJmYWN0b3JpZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzY2hlZHVsZXJzIHNob3VsZCBiZSBzaW5nbGV0b25zXG5pbXBvcnQgZGVmYXVsdEF1ZGlvQ29udGV4dCBmcm9tICcuLi9jb3JlL2F1ZGlvLWNvbnRleHQnO1xuaW1wb3J0IFNjaGVkdWxlciBmcm9tICcuL3NjaGVkdWxlcic7XG5pbXBvcnQgU2ltcGxlU2NoZWR1bGVyIGZyb20gJy4vc2ltcGxlLXNjaGVkdWxlcic7XG5cbmNvbnN0IHNjaGVkdWxlck1hcCA9IG5ldyBXZWFrTWFwKCk7XG5jb25zdCBzaW1wbGVTY2hlZHVsZXJNYXAgPSBuZXcgV2Vha01hcCgpO1xuXG4vLyBzY2hlZHVsZXIgZmFjdG9yeVxuZXhwb3J0IGNvbnN0IGdldFNjaGVkdWxlciA9IGZ1bmN0aW9uKGF1ZGlvQ29udGV4dCA9IGRlZmF1bHRBdWRpb0NvbnRleHQpIHtcbiAgbGV0IHNjaGVkdWxlciA9IHNjaGVkdWxlck1hcC5nZXQoYXVkaW9Db250ZXh0KTtcblxuICBpZiAoIXNjaGVkdWxlcikge1xuICAgIHNjaGVkdWxlciA9IG5ldyBTY2hlZHVsZXIoeyBhdWRpb0NvbnRleHQ6IGF1ZGlvQ29udGV4dCB9KTtcbiAgICBzY2hlZHVsZXJNYXAuc2V0KGF1ZGlvQ29udGV4dCwgc2NoZWR1bGVyKTtcbiAgfVxuXG4gIHJldHVybiBzY2hlZHVsZXI7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0U2ltcGxlU2NoZWR1bGVyID0gZnVuY3Rpb24oYXVkaW9Db250ZXh0ID0gZGVmYXVsdEF1ZGlvQ29udGV4dCkge1xuICBsZXQgc2ltcGxlU2NoZWR1bGVyID0gc2ltcGxlU2NoZWR1bGVyTWFwLmdldChhdWRpb0NvbnRleHQpO1xuXG4gIGlmICghc2ltcGxlU2NoZWR1bGVyKSB7XG4gICAgc2ltcGxlU2NoZWR1bGVyID0gbmV3IFNpbXBsZVNjaGVkdWxlcih7IGF1ZGlvQ29udGV4dDogYXVkaW9Db250ZXh0IH0pO1xuICAgIHNpbXBsZVNjaGVkdWxlck1hcC5zZXQoYXVkaW9Db250ZXh0LCBzaW1wbGVTY2hlZHVsZXIpO1xuICB9XG5cbiAgcmV0dXJuIHNpbXBsZVNjaGVkdWxlcjtcbn07XG4iXX0=//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWF1ZGlvL2Rpc3QvbWFzdGVycy9mYWN0b3JpZXMuanM/ZDk2MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmdldFNpbXBsZVNjaGVkdWxlciA9IGV4cG9ydHMuZ2V0U2NoZWR1bGVyID0gdW5kZWZpbmVkO1xuXG52YXIgX3dlYWtNYXAgPSByZXF1aXJlKCdiYWJlbC1ydW50aW1lL2NvcmUtanMvd2Vhay1tYXAnKTtcblxudmFyIF93ZWFrTWFwMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3dlYWtNYXApO1xuXG52YXIgX2F1ZGlvQ29udGV4dCA9IHJlcXVpcmUoJy4uL2NvcmUvYXVkaW8tY29udGV4dCcpO1xuXG52YXIgX2F1ZGlvQ29udGV4dDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9hdWRpb0NvbnRleHQpO1xuXG52YXIgX3NjaGVkdWxlciA9IHJlcXVpcmUoJy4vc2NoZWR1bGVyJyk7XG5cbnZhciBfc2NoZWR1bGVyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NjaGVkdWxlcik7XG5cbnZhciBfc2ltcGxlU2NoZWR1bGVyID0gcmVxdWlyZSgnLi9zaW1wbGUtc2NoZWR1bGVyJyk7XG5cbnZhciBfc2ltcGxlU2NoZWR1bGVyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3NpbXBsZVNjaGVkdWxlcik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBzY2hlZHVsZXJNYXAgPSBuZXcgX3dlYWtNYXAyLmRlZmF1bHQoKTsgLy8gc2NoZWR1bGVycyBzaG91bGQgYmUgc2luZ2xldG9uc1xuXG52YXIgc2ltcGxlU2NoZWR1bGVyTWFwID0gbmV3IF93ZWFrTWFwMi5kZWZhdWx0KCk7XG5cbi8vIHNjaGVkdWxlciBmYWN0b3J5XG52YXIgZ2V0U2NoZWR1bGVyID0gZXhwb3J0cy5nZXRTY2hlZHVsZXIgPSBmdW5jdGlvbiBnZXRTY2hlZHVsZXIoKSB7XG4gIHZhciBhdWRpb0NvbnRleHQgPSBhcmd1bWVudHMubGVuZ3RoIDw9IDAgfHwgYXJndW1lbnRzWzBdID09PSB1bmRlZmluZWQgPyBfYXVkaW9Db250ZXh0Mi5kZWZhdWx0IDogYXJndW1lbnRzWzBdO1xuXG4gIHZhciBzY2hlZHVsZXIgPSBzY2hlZHVsZXJNYXAuZ2V0KGF1ZGlvQ29udGV4dCk7XG5cbiAgaWYgKCFzY2hlZHVsZXIpIHtcbiAgICBzY2hlZHVsZXIgPSBuZXcgX3NjaGVkdWxlcjIuZGVmYXVsdCh7IGF1ZGlvQ29udGV4dDogYXVkaW9Db250ZXh0IH0pO1xuICAgIHNjaGVkdWxlck1hcC5zZXQoYXVkaW9Db250ZXh0LCBzY2hlZHVsZXIpO1xuICB9XG5cbiAgcmV0dXJuIHNjaGVkdWxlcjtcbn07XG5cbnZhciBnZXRTaW1wbGVTY2hlZHVsZXIgPSBleHBvcnRzLmdldFNpbXBsZVNjaGVkdWxlciA9IGZ1bmN0aW9uIGdldFNpbXBsZVNjaGVkdWxlcigpIHtcbiAgdmFyIGF1ZGlvQ29udGV4dCA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMCB8fCBhcmd1bWVudHNbMF0gPT09IHVuZGVmaW5lZCA/IF9hdWRpb0NvbnRleHQyLmRlZmF1bHQgOiBhcmd1bWVudHNbMF07XG5cbiAgdmFyIHNpbXBsZVNjaGVkdWxlciA9IHNpbXBsZVNjaGVkdWxlck1hcC5nZXQoYXVkaW9Db250ZXh0KTtcblxuICBpZiAoIXNpbXBsZVNjaGVkdWxlcikge1xuICAgIHNpbXBsZVNjaGVkdWxlciA9IG5ldyBfc2ltcGxlU2NoZWR1bGVyMi5kZWZhdWx0KHsgYXVkaW9Db250ZXh0OiBhdWRpb0NvbnRleHQgfSk7XG4gICAgc2ltcGxlU2NoZWR1bGVyTWFwLnNldChhdWRpb0NvbnRleHQsIHNpbXBsZVNjaGVkdWxlcik7XG4gIH1cblxuICByZXR1cm4gc2ltcGxlU2NoZWR1bGVyO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbVpoWTNSdmNtbGxjeTVxY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pT3pzN096czdPenM3T3p0QlFVTkJPenM3TzBGQlEwRTdPenM3UVVGRFFUczdPenM3TzBGQlJVRXNTVUZCVFN4bFFVRmxMSFZDUVVGbU96dEJRVU5PTEVsQlFVMHNjVUpCUVhGQ0xIVkNRVUZ5UWpzN08wRkJSME1zU1VGQlRTeHpRMEZCWlN4VFFVRm1MRmxCUVdVc1IwRkJOa003VFVGQmNFTXNNa2RCUVc5RE96dEJRVU4yUlN4TlFVRkpMRmxCUVZrc1lVRkJZU3hIUVVGaUxFTkJRV2xDTEZsQlFXcENMRU5CUVZvc1EwRkViVVU3TzBGQlIzWkZMRTFCUVVrc1EwRkJReXhUUVVGRUxFVkJRVms3UVVGRFpDeG5Ra0ZCV1N4M1FrRkJZeXhGUVVGRkxHTkJRV01zV1VGQlpDeEZRVUZvUWl4RFFVRmFMRU5CUkdNN1FVRkZaQ3hwUWtGQllTeEhRVUZpTEVOQlFXbENMRmxCUVdwQ0xFVkJRU3RDTEZOQlFTOUNMRVZCUm1NN1IwRkJhRUk3TzBGQlMwRXNVMEZCVHl4VFFVRlFMRU5CVW5WRk8wTkJRVGRET3p0QlFWZHlRaXhKUVVGTkxHdEVRVUZ4UWl4VFFVRnlRaXhyUWtGQmNVSXNSMEZCTmtNN1RVRkJjRU1zTWtkQlFXOURPenRCUVVNM1JTeE5RVUZKTEd0Q1FVRnJRaXh0UWtGQmJVSXNSMEZCYmtJc1EwRkJkVUlzV1VGQmRrSXNRMEZCYkVJc1EwRkVlVVU3TzBGQlJ6ZEZMRTFCUVVrc1EwRkJReXhsUVVGRUxFVkJRV3RDTzBGQlEzQkNMSE5DUVVGclFpdzRRa0ZCYjBJc1JVRkJSU3hqUVVGakxGbEJRV1FzUlVGQmRFSXNRMEZCYkVJc1EwRkViMEk3UVVGRmNFSXNkVUpCUVcxQ0xFZEJRVzVDTEVOQlFYVkNMRmxCUVhaQ0xFVkJRWEZETEdWQlFYSkRMRVZCUm05Q08wZEJRWFJDT3p0QlFVdEJMRk5CUVU4c1pVRkJVQ3hEUVZJMlJUdERRVUUzUXlJc0ltWnBiR1VpT2lKbVlXTjBiM0pwWlhNdWFuTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2THlCelkyaGxaSFZzWlhKeklITm9iM1ZzWkNCaVpTQnphVzVuYkdWMGIyNXpYRzVwYlhCdmNuUWdaR1ZtWVhWc2RFRjFaR2x2UTI5dWRHVjRkQ0JtY205dElDY3VMaTlqYjNKbEwyRjFaR2x2TFdOdmJuUmxlSFFuTzF4dWFXMXdiM0owSUZOamFHVmtkV3hsY2lCbWNtOXRJQ2N1TDNOamFHVmtkV3hsY2ljN1hHNXBiWEJ2Y25RZ1UybHRjR3hsVTJOb1pXUjFiR1Z5SUdaeWIyMGdKeTR2YzJsdGNHeGxMWE5qYUdWa2RXeGxjaWM3WEc1Y2JtTnZibk4wSUhOamFHVmtkV3hsY2sxaGNDQTlJRzVsZHlCWFpXRnJUV0Z3S0NrN1hHNWpiMjV6ZENCemFXMXdiR1ZUWTJobFpIVnNaWEpOWVhBZ1BTQnVaWGNnVjJWaGEwMWhjQ2dwTzF4dVhHNHZMeUJ6WTJobFpIVnNaWElnWm1GamRHOXllVnh1Wlhod2IzSjBJR052Ym5OMElHZGxkRk5qYUdWa2RXeGxjaUE5SUdaMWJtTjBhVzl1S0dGMVpHbHZRMjl1ZEdWNGRDQTlJR1JsWm1GMWJIUkJkV1JwYjBOdmJuUmxlSFFwSUh0Y2JpQWdiR1YwSUhOamFHVmtkV3hsY2lBOUlITmphR1ZrZFd4bGNrMWhjQzVuWlhRb1lYVmthVzlEYjI1MFpYaDBLVHRjYmx4dUlDQnBaaUFvSVhOamFHVmtkV3hsY2lrZ2UxeHVJQ0FnSUhOamFHVmtkV3hsY2lBOUlHNWxkeUJUWTJobFpIVnNaWElvZXlCaGRXUnBiME52Ym5SbGVIUTZJR0YxWkdsdlEyOXVkR1Y0ZENCOUtUdGNiaUFnSUNCelkyaGxaSFZzWlhKTllYQXVjMlYwS0dGMVpHbHZRMjl1ZEdWNGRDd2djMk5vWldSMWJHVnlLVHRjYmlBZ2ZWeHVYRzRnSUhKbGRIVnliaUJ6WTJobFpIVnNaWEk3WEc1OU8xeHVYRzVsZUhCdmNuUWdZMjl1YzNRZ1oyVjBVMmx0Y0d4bFUyTm9aV1IxYkdWeUlEMGdablZ1WTNScGIyNG9ZWFZrYVc5RGIyNTBaWGgwSUQwZ1pHVm1ZWFZzZEVGMVpHbHZRMjl1ZEdWNGRDa2dlMXh1SUNCc1pYUWdjMmx0Y0d4bFUyTm9aV1IxYkdWeUlEMGdjMmx0Y0d4bFUyTm9aV1IxYkdWeVRXRndMbWRsZENoaGRXUnBiME52Ym5SbGVIUXBPMXh1WEc0Z0lHbG1JQ2doYzJsdGNHeGxVMk5vWldSMWJHVnlLU0I3WEc0Z0lDQWdjMmx0Y0d4bFUyTm9aV1IxYkdWeUlEMGdibVYzSUZOcGJYQnNaVk5qYUdWa2RXeGxjaWg3SUdGMVpHbHZRMjl1ZEdWNGREb2dZWFZrYVc5RGIyNTBaWGgwSUgwcE8xeHVJQ0FnSUhOcGJYQnNaVk5qYUdWa2RXeGxjazFoY0M1elpYUW9ZWFZrYVc5RGIyNTBaWGgwTENCemFXMXdiR1ZUWTJobFpIVnNaWElwTzF4dUlDQjlYRzVjYmlBZ2NtVjBkWEp1SUhOcGJYQnNaVk5qYUdWa2RXeGxjanRjYm4wN1hHNGlYWDA9XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWF1ZGlvL2Rpc3QvbWFzdGVycy9mYWN0b3JpZXMuanNcbi8vIG1vZHVsZSBpZCA9IDY3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports[\"default\"] = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nexports.__esModule = true;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9iYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3MtY2FsbC1jaGVjay5qcz80OTkxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IGZ1bmN0aW9uIChpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59O1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL2NsYXNzLWNhbGwtY2hlY2suanNcbi8vIG1vZHVsZSBpZCA9IDY4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 69 */
/***/ (function(module, exports) {

eval("module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmEtZnVuY3Rpb24uanM/ZjQ4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgaWYodHlwZW9mIGl0ICE9ICdmdW5jdGlvbicpdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYSBmdW5jdGlvbiEnKTtcbiAgcmV0dXJuIGl0O1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQuYS1mdW5jdGlvbi5qc1xuLy8gbW9kdWxlIGlkID0gNjlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

eval("// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(103)(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmRlc2NyaXB0b3JzLmpzP2ZhMGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhhbmsncyBJRTggZm9yIGhpcyBmdW5ueSBkZWZpbmVQcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSAhcmVxdWlyZSgnLi8kLmZhaWxzJykoZnVuY3Rpb24oKXtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgJ2EnLCB7Z2V0OiBmdW5jdGlvbigpeyByZXR1cm4gNzsgfX0pLmEgIT0gNztcbn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5kZXNjcmlwdG9ycy5qc1xuLy8gbW9kdWxlIGlkID0gNzBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

eval("var $          = __webpack_require__(8)\n  , createDesc = __webpack_require__(107);\nmodule.exports = __webpack_require__(70) ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmhpZGUuanM/NWUyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJCAgICAgICAgICA9IHJlcXVpcmUoJy4vJCcpXG4gICwgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vJC5wcm9wZXJ0eS1kZXNjJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vJC5kZXNjcmlwdG9ycycpID8gZnVuY3Rpb24ob2JqZWN0LCBrZXksIHZhbHVlKXtcbiAgcmV0dXJuICQuc2V0RGVzYyhvYmplY3QsIGtleSwgY3JlYXRlRGVzYygxLCB2YWx1ZSkpO1xufSA6IGZ1bmN0aW9uKG9iamVjdCwga2V5LCB2YWx1ZSl7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG4gIHJldHVybiBvYmplY3Q7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5oaWRlLmpzXG4vLyBtb2R1bGUgaWQgPSA3MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

eval("var def = __webpack_require__(8).setDesc\n  , has = __webpack_require__(104)\n  , TAG = __webpack_require__(9)('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLnNldC10by1zdHJpbmctdGFnLmpzP2IzMjIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRlZiA9IHJlcXVpcmUoJy4vJCcpLnNldERlc2NcbiAgLCBoYXMgPSByZXF1aXJlKCcuLyQuaGFzJylcbiAgLCBUQUcgPSByZXF1aXJlKCcuLyQud2tzJykoJ3RvU3RyaW5nVGFnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQsIHRhZywgc3RhdCl7XG4gIGlmKGl0ICYmICFoYXMoaXQgPSBzdGF0ID8gaXQgOiBpdC5wcm90b3R5cGUsIFRBRykpZGVmKGl0LCBUQUcsIHtjb25maWd1cmFibGU6IHRydWUsIHZhbHVlOiB0YWd9KTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLnNldC10by1zdHJpbmctdGFnLmpzXG4vLyBtb2R1bGUgaWQgPSA3MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n  if (true) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n      return (root['WaveSurfer'] = factory());\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['WaveSurfer'] = factory();\n  }\n}(this, function () {\n\n'use strict';\n\nvar WaveSurfer = {\n    defaultParams: {\n        audioContext  : null,\n        audioRate     : 1,\n        autoCenter    : true,\n        backend       : 'WebAudio',\n        barHeight     : 1,\n        closeAudioContext: false,\n        container     : null,\n        cursorColor   : '#333',\n        cursorWidth   : 1,\n        dragSelection : true,\n        fillParent    : true,\n        forceDecode   : false,\n        height        : 128,\n        hideScrollbar : false,\n        interact      : true,\n        loopSelection : true,\n        mediaContainer: null,\n        mediaControls : false,\n        mediaType     : 'audio',\n        minPxPerSec   : 20,\n        partialRender : false,\n        pixelRatio    : window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        progressColor : '#555',\n        normalize     : false,\n        renderer      : 'MultiCanvas',\n        scrollParent  : false,\n        skipLength    : 2,\n        splitChannels : false,\n        waveColor     : '#999',\n    },\n\n    init: function (params) {\n        // Extract relevant parameters (or defaults)\n        this.params = WaveSurfer.util.extend({}, this.defaultParams, params);\n\n        this.container = 'string' == typeof params.container ?\n            document.querySelector(this.params.container) :\n            this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            this.mediaContainer = document.querySelector(this.params.mediaContainer);\n        } else {\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        // Used to save the current volume when muting so we can\n        // restore once unmuted\n        this.savedVolume = 0;\n\n        // The current muted state\n        this.isMuted = false;\n\n        // Will hold a list of event descriptors that need to be\n        // cancelled on subsequent loads of audio\n        this.tmpEvents = [];\n\n        // Holds any running audio downloads\n        this.currentAjax = null;\n\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n\n        this.isDestroyed = false;\n    },\n\n    createDrawer: function () {\n        var my = this;\n\n        this.drawer = Object.create(WaveSurfer.Drawer[this.params.renderer]);\n        this.drawer.init(this.container, this.params);\n\n        this.drawer.on('redraw', function () {\n            my.drawBuffer();\n            my.drawer.progress(my.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', function (e, progress) {\n            setTimeout(function () {\n                my.seekTo(progress);\n            }, 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', function (e) {\n            if (my.params.partialRender) {\n                my.drawBuffer();\n            }\n            my.fireEvent('scroll', e);\n        });\n    },\n\n    createBackend: function () {\n        var my = this;\n\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (this.params.backend == 'WebAudio' && !WaveSurfer.WebAudio.supportsWebAudio()) {\n            this.params.backend = 'MediaElement';\n        }\n\n        this.backend = Object.create(WaveSurfer[this.params.backend]);\n        this.backend.init(this.params);\n\n        this.backend.on('finish', function () { my.fireEvent('finish'); });\n        this.backend.on('play', function () { my.fireEvent('play'); });\n        this.backend.on('pause', function () { my.fireEvent('pause'); });\n\n        this.backend.on('audioprocess', function (time) {\n            my.drawer.progress(my.backend.getPlayedPercents());\n            my.fireEvent('audioprocess', time);\n        });\n    },\n\n    createPeakCache: function() {\n        if (this.params.partialRender) {\n            this.peakCache = Object.create(WaveSurfer.PeakCache);\n            this.peakCache.init();\n        }\n    },\n\n    getDuration: function () {\n        return this.backend.getDuration();\n    },\n\n    getCurrentTime: function () {\n        return this.backend.getCurrentTime();\n    },\n\n    play: function (start, end) {\n        this.fireEvent('interaction', this.play.bind(this, start, end));\n        this.backend.play(start, end);\n    },\n\n    pause: function () {\n        this.backend.isPaused() || this.backend.pause();\n    },\n\n    playPause: function () {\n        this.backend.isPaused() ? this.play() : this.pause();\n    },\n\n    isPlaying: function () {\n        return !this.backend.isPaused();\n    },\n\n    skipBackward: function (seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    },\n\n    skipForward: function (seconds) {\n        this.skip(seconds || this.params.skipLength);\n    },\n\n    skip: function (offset) {\n        var position = this.getCurrentTime() || 0;\n        var duration = this.getDuration() || 1;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    },\n\n    seekAndCenter: function (progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    },\n\n    seekTo: function (progress) {\n        this.fireEvent('interaction', this.seekTo.bind(this, progress));\n\n        var paused = this.backend.isPaused();\n        // avoid draw wrong position while playing backward seeking\n        if (!paused) {\n            this.backend.pause();\n        }\n        // avoid small scrolls while paused seeking\n        var oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        if (!paused) {\n            this.backend.play();\n        }\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    },\n\n    stop: function () {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    },\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {Number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    setVolume: function (newVolume) {\n        this.backend.setVolume(newVolume);\n    },\n\n    /**\n     * Get the playback volume.\n     */\n    getVolume: function () {\n        return this.backend.getVolume();\n    },\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {Number} rate A positive number. E.g. 0.5 means half the\n     * normal speed, 2 means double speed and so on.\n     */\n    setPlaybackRate: function (rate) {\n        this.backend.setPlaybackRate(rate);\n    },\n\n    /**\n     * Get the playback rate.\n     */\n    getPlaybackRate: function () {\n        return this.backend.getPlaybackRate();\n    },\n\n    /**\n     * Toggle the volume on and off. It not currenly muted it will\n     * save the current volume value and turn the volume off.\n     * If currently muted then it will restore the volume to the saved\n     * value, and then rest the saved value.\n     */\n    toggleMute: function () {\n        this.setMute(!this.isMuted);\n    },\n\n    setMute: function (mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            return;\n        }\n\n        if (mute) {\n            // If currently not muted then save current volume,\n            // turn off the volume and update the mute properties\n            this.savedVolume = this.backend.getVolume();\n            this.backend.setVolume(0);\n            this.isMuted = true;\n        } else {\n            // If currently muted then restore to the saved volume\n            // and update the mute properties\n            this.backend.setVolume(this.savedVolume);\n            this.isMuted = false;\n        }\n    },\n\n    /**\n     * Get the current mute status.\n     */\n    getMute: function () {\n        return this.isMuted;\n    },\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     */\n    getFilters: function() {\n        return this.backend.filters || [];\n    },\n\n    toggleScroll: function () {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    },\n\n    toggleInteraction: function () {\n        this.params.interact = !this.params.interact;\n    },\n\n    drawBuffer: function () {\n        var nominalWidth = Math.round(\n            this.getDuration() * this.params.minPxPerSec * this.params.pixelRatio\n        );\n        var parentWidth = this.drawer.getWidth();\n        var width = nominalWidth;\n        var start = this.drawer.getScrollX();\n        var end = Math.min(start + parentWidth, width);\n\n        // Fill container\n        if (this.params.fillParent && (!this.params.scrollParent || nominalWidth < parentWidth)) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        if (this.params.partialRender) {\n            var newRanges = this.peakCache.addRangeToPeakCache(width, start, end);\n            for (var i = 0; i < newRanges.length; i++) {\n              var peaks = this.backend.getPeaks(width, newRanges[i][0], newRanges[i][1]);\n              this.drawer.drawPeaks(peaks, width, newRanges[i][0], newRanges[i][1]);\n            }\n        } else {\n            start = 0;\n            end = width;\n            var peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    },\n\n    zoom: function (pxPerSec) {\n        this.params.minPxPerSec = pxPerSec;\n\n        this.params.scrollParent = true;\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(\n            this.getCurrentTime() / this.getDuration()\n        );\n        this.fireEvent('zoom', pxPerSec);\n    },\n\n    /**\n     * Internal method.\n     */\n    loadArrayBuffer: function (arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, function (data) {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        }.bind(this));\n    },\n\n    /**\n     * Directly load an externally decoded AudioBuffer.\n     */\n    loadDecodedBuffer: function (buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.fireEvent('ready');\n    },\n\n    /**\n     * Loads audio data from a Blob or File object.\n     *\n     * @param {Blob|File} blob Audio data.\n     */\n    loadBlob: function (blob) {\n        var my = this;\n        // Create file reader\n        var reader = new FileReader();\n        reader.addEventListener('progress', function (e) {\n            my.onProgress(e);\n        });\n        reader.addEventListener('load', function (e) {\n            my.loadArrayBuffer(e.target.result);\n        });\n        reader.addEventListener('error', function () {\n            my.fireEvent('error', 'Error reading file');\n        });\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    },\n\n    /**\n     * Loads audio and re-renders the waveform.\n     */\n    load: function (url, peaks, preload) {\n        this.empty();\n\n        switch (this.params.backend) {\n            case 'WebAudio': return this.loadBuffer(url, peaks);\n            case 'MediaElement': return this.loadMediaElement(url, peaks, preload);\n        }\n    },\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     */\n    loadBuffer: function (url, peaks) {\n        var load = (function (action) {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, this.loadArrayBuffer.bind(this));\n        }).bind(this);\n\n        if (peaks) {\n            this.backend.setPeaks(peaks);\n            this.drawBuffer();\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    },\n\n    /**\n     *  Either create a media element, or load\n     *  an existing media element.\n     *  @param  {String|HTMLElement} urlOrElt Either a path to a media file,\n     *                                          or an existing HTML5 Audio/Video\n     *                                          Element\n     *  @param  {Array}            [peaks]     Array of peaks. Required to bypass\n     *                                          web audio dependency\n     */\n    loadMediaElement: function (urlOrElt, peaks, preload) {\n        var url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            var elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', (function () {\n                this.drawBuffer();\n                this.fireEvent('ready');\n            }).bind(this)),\n\n            this.backend.once('error', (function (err) {\n                this.fireEvent('error', err);\n            }).bind(this))\n        );\n\n        // If no pre-decoded peaks provided or pre-decoded peaks are\n        // provided with forceDecode flag, attempt to download the\n        // audio file and decode it with Web Audio.\n        if (peaks) { this.backend.setPeaks(peaks); }\n\n        if ((!peaks || this.params.forceDecode) && this.backend.supportsWebAudio()) {\n            this.getArrayBuffer(url, (function (arraybuffer) {\n                this.decodeArrayBuffer(arraybuffer, (function (buffer) {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                }).bind(this));\n            }).bind(this));\n        }\n    },\n\n    decodeArrayBuffer: function (arraybuffer, callback) {\n        this.arraybuffer = arraybuffer;\n\n        this.backend.decodeArrayBuffer(\n            arraybuffer,\n            (function (data) {\n                // Only use the decoded data if we haven't been destroyed or another decode started in the meantime\n                if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                    callback(data);\n                    this.arraybuffer = null;\n                }\n            }).bind(this),\n            this.fireEvent.bind(this, 'error', 'Error decoding audiobuffer')\n        );\n    },\n\n    getArrayBuffer: function (url, callback) {\n        var my = this;\n\n        var ajax = WaveSurfer.util.ajax({\n            url: url,\n            responseType: 'arraybuffer'\n        });\n\n        this.currentAjax = ajax;\n\n        this.tmpEvents.push(\n            ajax.on('progress', function (e) {\n                my.onProgress(e);\n            }),\n            ajax.on('success', function (data, e) {\n                callback(data);\n                my.currentAjax = null;\n            }),\n            ajax.on('error', function (e) {\n                my.fireEvent('error', 'XHR error: ' + e.target.statusText);\n                my.currentAjax = null;\n            })\n        );\n\n        return ajax;\n    },\n\n    onProgress: function (e) {\n        if (e.lengthComputable) {\n            var percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    },\n\n    /**\n     * Exports PCM data into a JSON array and opens in a new window.\n     */\n    exportPCM: function (length, accuracy, noWindow) {\n        length = length || 1024;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        var peaks = this.backend.getPeaks(length, accuracy);\n        var arr = [].map.call(peaks, function (val) {\n            return Math.round(val * accuracy) / accuracy;\n        });\n        var json = JSON.stringify(arr);\n        if (!noWindow) {\n            window.open('data:application/json;charset=utf-8,' +\n                encodeURIComponent(json));\n        }\n        return json;\n    },\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is 'image/png'. Other supported types are\n     * 'image/jpeg' and 'image/webp'.\n     */\n    exportImage: function(format, quality) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n\n        return this.drawer.getImage(format, quality);\n    },\n\n    cancelAjax: function () {\n        if (this.currentAjax) {\n            this.currentAjax.xhr.abort();\n            this.currentAjax = null;\n        }\n    },\n\n    clearTmpEvents: function () {\n        this.tmpEvents.forEach(function (e) { e.un(); });\n    },\n\n    /**\n     * Display empty waveform.\n     */\n    empty: function () {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    },\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     */\n    destroy: function () {\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        this.backend.destroy();\n        this.drawer.destroy();\n        this.isDestroyed = true;\n    }\n};\n\nWaveSurfer.create = function (params) {\n    var wavesurfer = Object.create(WaveSurfer);\n    wavesurfer.init(params);\n    return wavesurfer;\n};\n\nWaveSurfer.util = {\n    extend: function (dest) {\n        var sources = Array.prototype.slice.call(arguments, 1);\n        sources.forEach(function (source) {\n            Object.keys(source).forEach(function (key) {\n                dest[key] = source[key];\n            });\n        });\n        return dest;\n    },\n\n    debounce: function (func, wait, immediate) {\n        var args, context, timeout;\n        var later = function() {\n            timeout = null;\n            if (!immediate) {\n                func.apply(context, args);\n            }\n        };\n        return function() {\n            context = this;\n            args = arguments;\n            var callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (!timeout) {\n                timeout = setTimeout(later, wait);\n            }\n            if (callNow) {\n                func.apply(context, args);\n            }\n        };\n    },\n\n    min: function (values) {\n        var min = +Infinity;\n        for (var i in values) {\n            if (values[i] < min) {\n                min = values[i];\n            }\n        }\n\n        return min;\n    },\n\n    max: function (values) {\n        var max = -Infinity;\n        for (var i in values) {\n            if (values[i] > max) {\n                max = values[i];\n            }\n        }\n\n        return max;\n    },\n\n    getId: function () {\n        return 'wavesurfer_' + Math.random().toString(32).substring(2);\n    },\n\n    ajax: function (options) {\n        var ajax = Object.create(WaveSurfer.Observer);\n        var xhr = new XMLHttpRequest();\n        var fired100 = false;\n\n        xhr.open(options.method || 'GET', options.url, true);\n        xhr.responseType = options.responseType || 'json';\n\n        xhr.addEventListener('progress', function (e) {\n            ajax.fireEvent('progress', e);\n            if (e.lengthComputable && e.loaded == e.total) {\n                fired100 = true;\n            }\n        });\n\n        xhr.addEventListener('load', function (e) {\n            if (!fired100) {\n                ajax.fireEvent('progress', e);\n            }\n            ajax.fireEvent('load', e);\n\n            if (200 == xhr.status || 206 == xhr.status) {\n                ajax.fireEvent('success', xhr.response, e);\n            } else {\n                ajax.fireEvent('error', e);\n            }\n        });\n\n        xhr.addEventListener('error', function (e) {\n            ajax.fireEvent('error', e);\n        });\n\n        xhr.send();\n        ajax.xhr = xhr;\n        return ajax;\n    }\n};\n\n/* Observer */\nWaveSurfer.Observer = {\n    /**\n     * Attach a handler function for an event.\n     */\n    on: function (event, fn) {\n        if (!this.handlers) { this.handlers = {}; }\n\n        var handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: this.un.bind(this, event, fn)\n        };\n    },\n\n    /**\n     * Remove an event handler.\n     */\n    un: function (event, fn) {\n        if (!this.handlers) { return; }\n\n        var handlers = this.handlers[event];\n        if (handlers) {\n            if (fn) {\n                for (var i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    },\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll: function () {\n        this.handlers = null;\n    },\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     */\n    once: function (event, handler) {\n        var my = this;\n        var fn = function () {\n            handler.apply(this, arguments);\n            setTimeout(function () {\n                my.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    },\n\n    fireEvent: function (event) {\n        if (!this.handlers) { return; }\n        var handlers = this.handlers[event];\n        var args = Array.prototype.slice.call(arguments, 1);\n        handlers && handlers.forEach(function (fn) {\n            fn.apply(null, args);\n        });\n    }\n};\n\n/* Make the main WaveSurfer object an observer */\nWaveSurfer.util.extend(WaveSurfer, WaveSurfer.Observer);\n\n'use strict';\n\nWaveSurfer.WebAudio = {\n    scriptBufferSize: 256,\n    PLAYING_STATE: 0,\n    PAUSED_STATE: 1,\n    FINISHED_STATE: 2,\n\n    supportsWebAudio: function () {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    },\n\n    getAudioContext: function () {\n        if (!WaveSurfer.WebAudio.audioContext) {\n            WaveSurfer.WebAudio.audioContext = new (\n                window.AudioContext || window.webkitAudioContext\n            );\n        }\n        return WaveSurfer.WebAudio.audioContext;\n    },\n\n    getOfflineAudioContext: function (sampleRate) {\n        if (!WaveSurfer.WebAudio.offlineAudioContext) {\n            WaveSurfer.WebAudio.offlineAudioContext = new (\n                window.OfflineAudioContext || window.webkitOfflineAudioContext\n            )(1, 2, sampleRate);\n        }\n        return WaveSurfer.WebAudio.offlineAudioContext;\n    },\n\n    init: function (params) {\n        this.params = params;\n        this.ac = params.audioContext || this.getAudioContext();\n\n        this.lastPlay = this.ac.currentTime;\n        this.startPosition = 0;\n        this.scheduledPause = null;\n\n        this.states = [\n            Object.create(WaveSurfer.WebAudio.state.playing),\n            Object.create(WaveSurfer.WebAudio.state.paused),\n            Object.create(WaveSurfer.WebAudio.state.finished)\n        ];\n\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(this.PAUSED_STATE);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    },\n\n    disconnectFilters: function () {\n        if (this.filters) {\n            this.filters.forEach(function (filter) {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    },\n\n    setState: function (state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    },\n\n    // Unpacked filters\n    setFilter: function () {\n        this.setFilters([].slice.call(arguments));\n    },\n\n    /**\n     * @param {Array} filters Packed ilters array\n     */\n    setFilters: function (filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters.reduce(function (prev, curr) {\n                prev.connect(curr);\n                return curr;\n            }, this.analyser).connect(this.gainNode);\n        }\n\n    },\n\n    createScriptNode: function () {\n        if (this.ac.createScriptProcessor) {\n            this.scriptNode = this.ac.createScriptProcessor(this.scriptBufferSize);\n        } else {\n            this.scriptNode = this.ac.createJavaScriptNode(this.scriptBufferSize);\n        }\n\n        this.scriptNode.connect(this.ac.destination);\n    },\n\n    addOnAudioProcess: function () {\n        var my = this;\n\n        this.scriptNode.onaudioprocess = function () {\n            var time = my.getCurrentTime();\n\n            if (time >= my.getDuration()) {\n                my.setState(my.FINISHED_STATE);\n                my.fireEvent('pause');\n            } else if (time >= my.scheduledPause) {\n                my.pause();\n            } else if (my.state === my.states[my.PLAYING_STATE]) {\n                my.fireEvent('audioprocess', time);\n            }\n        };\n    },\n\n    removeOnAudioProcess: function () {\n        this.scriptNode.onaudioprocess = null;\n    },\n\n    createAnalyserNode: function () {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    },\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     */\n    createVolumeNode: function () {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    },\n\n    /**\n     * Set the gain to a new value.\n     *\n     * @param {Number} newGain The new gain, a floating point value\n     * between 0 and 1. 0 being no gain and 1 being maximum gain.\n     */\n    setVolume: function (newGain) {\n        this.gainNode.gain.value = newGain;\n    },\n\n    /**\n     * Get the current gain.\n     *\n     * @returns {Number} The current gain, a floating point value\n     * between 0 and 1. 0 being no gain and 1 being maximum gain.\n     */\n    getVolume: function () {\n        return this.gainNode.gain.value;\n    },\n\n    decodeArrayBuffer: function (arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(this.ac ? this.ac.sampleRate : 44100);\n        }\n        this.offlineAc.decodeAudioData(arraybuffer, (function (data) {\n            callback(data);\n        }).bind(this), errback);\n    },\n\n    /**\n     * Set pre-decoded peaks.\n     */\n    setPeaks: function (peaks) {\n        this.peaks = peaks;\n    },\n\n    /**\n     * Set the rendered length (different from the length of the audio).\n     */\n    setLength: function (length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == ((2 * this.mergedPeaks.length - 1) + 2)) {\n          return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        var channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        for (var c = 0; c < channels; c++) {\n          this.splitPeaks[c] = [];\n          this.splitPeaks[c][2 * (length - 1)] = 0;\n          this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    },\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     * @param {Number} length How many subranges to break the waveform into.\n     * @param {Number} first First sample in the required range.\n     * @param {Number} last Last sample in the required range.\n     * @returns {Array} Array of 2*<length> peaks or array of arrays\n     * of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks: function (length, first, last) {\n        if (this.peaks) { return this.peaks; }\n\n        this.setLength(length);\n\n        var sampleSize = this.buffer.length / length;\n        var sampleStep = ~~(sampleSize / 10) || 1;\n        var channels = this.buffer.numberOfChannels;\n\n        for (var c = 0; c < channels; c++) {\n            var peaks = this.splitPeaks[c];\n            var chan = this.buffer.getChannelData(c);\n\n            for (var i = first; i <= last; i++) {\n                var start = ~~(i * sampleSize);\n                var end = ~~(start + sampleSize);\n                var min = 0;\n                var max = 0;\n\n                for (var j = start; j < end; j += sampleStep) {\n                    var value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    },\n\n    getPlayedPercents: function () {\n        return this.state.getPlayedPercents.call(this);\n    },\n\n    disconnectSource: function () {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    },\n\n    destroy: function () {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (typeof this.ac.close === 'function' && this.ac.state != 'closed') {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                WaveSurfer.WebAudio.audioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            WaveSurfer.WebAudio.offlineAudioContext = null;\n        }\n    },\n\n    load: function (buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    },\n\n    createSource: function () {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        //adjust for old browsers.\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.source.playbackRate.value = this.playbackRate;\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    },\n\n    isPaused: function () {\n        return this.state !== this.states[this.PLAYING_STATE];\n    },\n\n    getDuration: function () {\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    },\n\n    seekTo: function (start, end) {\n        if (!this.buffer) { return; }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[this.FINISHED_STATE]) {\n            this.setState(this.PAUSED_STATE);\n        }\n\n        return { start: start, end: end };\n    },\n\n    getPlayedTime: function () {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    },\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {Number} start Start offset in seconds,\n     * relative to the beginning of a clip.\n     * @param {Number} end When to stop\n     * relative to the beginning of a clip.\n     */\n    play: function (start, end) {\n        if (!this.buffer) { return; }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        var adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start, end - start);\n\n        if (this.ac.state == 'suspended') {\n          this.ac.resume && this.ac.resume();\n        }\n\n        this.setState(this.PLAYING_STATE);\n\n        this.fireEvent('play');\n    },\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause: function () {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        this.source && this.source.stop(0);\n\n        this.setState(this.PAUSED_STATE);\n\n        this.fireEvent('pause');\n    },\n\n    /**\n    *   Returns the current time in seconds relative to the audioclip's duration.\n    */\n    getCurrentTime: function () {\n        return this.state.getCurrentTime.call(this);\n    },\n\n    /**\n    *   Returns the current playback rate.\n    */\n    getPlaybackRate: function () {\n        return this.playbackRate;\n    },\n\n    /**\n     * Set the audio source playback rate.\n     */\n    setPlaybackRate: function (value) {\n        value = value || 1;\n        if (this.isPaused()) {\n            this.playbackRate = value;\n        } else {\n            this.pause();\n            this.playbackRate = value;\n            this.play();\n        }\n    }\n};\n\nWaveSurfer.WebAudio.state = {};\n\nWaveSurfer.WebAudio.state.playing = {\n    init: function () {\n        this.addOnAudioProcess();\n    },\n    getPlayedPercents: function () {\n        var duration = this.getDuration();\n        return (this.getCurrentTime() / duration) || 0;\n    },\n    getCurrentTime: function () {\n        return this.startPosition + this.getPlayedTime();\n    }\n};\n\nWaveSurfer.WebAudio.state.paused = {\n    init: function () {\n        this.removeOnAudioProcess();\n    },\n    getPlayedPercents: function () {\n        var duration = this.getDuration();\n        return (this.getCurrentTime() / duration) || 0;\n    },\n    getCurrentTime: function () {\n        return this.startPosition;\n    }\n};\n\nWaveSurfer.WebAudio.state.finished = {\n    init: function () {\n        this.removeOnAudioProcess();\n        this.fireEvent('finish');\n    },\n    getPlayedPercents: function () {\n        return 1;\n    },\n    getCurrentTime: function () {\n        return this.getDuration();\n    }\n};\n\nWaveSurfer.util.extend(WaveSurfer.WebAudio, WaveSurfer.Observer);\n\n'use strict';\n\nWaveSurfer.MediaElement = Object.create(WaveSurfer.WebAudio);\n\nWaveSurfer.util.extend(WaveSurfer.MediaElement, {\n    init: function (params) {\n        this.params = params;\n\n        // Dummy media to catch errors\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play: function () {},\n            pause: function () {}\n        };\n\n        this.mediaType = params.mediaType.toLowerCase();\n        this.elementPosition = params.elementPosition;\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    },\n\n\n    /**\n     * Create a timer to provide a more precise `audioprocess' event.\n     */\n    createTimer: function () {\n        var my = this;\n        var playing = false;\n\n        var onAudioProcess = function () {\n            if (my.isPaused()) { return; }\n\n            my.fireEvent('audioprocess', my.getCurrentTime());\n\n            // Call again in the next frame\n            var requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame;\n            requestAnimationFrame(onAudioProcess);\n        };\n\n        this.on('play', onAudioProcess);\n    },\n\n    /**\n     *  Create media element with url as its source,\n     *  and append to container element.\n     *  @param  {String}        url         path to media file\n     *  @param  {HTMLElement}   container   HTML element\n     *  @param  {Array}         peaks       array of peak data\n     *  @param  {String}        preload     HTML 5 preload attribute value\n     */\n    load: function (url, container, peaks, preload) {\n        var my = this;\n\n        var media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        var prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks);\n    },\n\n    /**\n     *  Load existing media element.\n     *  @param  {MediaElement}  elt     HTML5 Audio or Video element\n     *  @param  {Array}         peaks   array of peak data\n     */\n    loadElt: function (elt, peaks) {\n        var my = this;\n\n        var media = elt;\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n\n        this._load(media, peaks);\n    },\n\n    /**\n     *  Private method called by both load (from url)\n     *  and loadElt (existing media element).\n     *  @param  {MediaElement}  media     HTML5 Audio or Video element\n     *  @param  {Array}         peaks   array of peak data\n     *  @private\n     */\n    _load: function (media, peaks) {\n        var my = this;\n\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        if (typeof media.load == 'function') {\n            media.load();\n        }\n\n        media.addEventListener('error', function () {\n            my.fireEvent('error', 'Error loading media element');\n        });\n\n        media.addEventListener('canplay', function () {\n            my.fireEvent('canplay');\n        });\n\n        media.addEventListener('ended', function () {\n            my.fireEvent('finish');\n        });\n\n        this.media = media;\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.setPlaybackRate(this.playbackRate);\n    },\n\n    isPaused: function () {\n        return !this.media || this.media.paused;\n    },\n\n    getDuration: function () {\n        var duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) { // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    },\n\n    getCurrentTime: function () {\n        return this.media && this.media.currentTime;\n    },\n\n    getPlayedPercents: function () {\n        return (this.getCurrentTime() / this.getDuration()) || 0;\n    },\n\n    getPlaybackRate: function () {\n        return this.playbackRate || this.media.playbackRate;\n    },\n\n    /**\n     * Set the audio source playback rate.\n     */\n    setPlaybackRate: function (value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    },\n\n    seekTo: function (start) {\n        if (start != null) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    },\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {Number} start Start offset in seconds,\n     * relative to the beginning of a clip.\n     * @param {Number} end End offset in seconds,\n     * relative to the beginning of a clip.\n     */\n    play: function (start, end) {\n        this.seekTo(start);\n        this.media.play();\n        end && this.setPlayEnd(end);\n        this.fireEvent('play');\n    },\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause: function () {\n        this.media && this.media.pause();\n        this.clearPlayEnd();\n        this.fireEvent('pause');\n    },\n\n    setPlayEnd: function (end) {\n        var my = this;\n        this.onPlayEnd = function (time) {\n            if (time >= end) {\n                my.pause();\n                my.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this.onPlayEnd);\n    },\n\n    clearPlayEnd: function () {\n        if (this.onPlayEnd) {\n            this.un('audioprocess', this.onPlayEnd);\n            this.onPlayEnd = null;\n        }\n    },\n\n    getPeaks: function (length, start, end) {\n        if (this.buffer) {\n            return WaveSurfer.WebAudio.getPeaks.call(this, length, start, end);\n        }\n        return this.peaks || [];\n    },\n\n    getVolume: function () {\n        return this.media.volume;\n    },\n\n    setVolume: function (val) {\n        this.media.volume = val;\n    },\n\n    destroy: function () {\n        this.pause();\n        this.unAll();\n        this.media && this.media.parentNode && this.media.parentNode.removeChild(this.media);\n        this.media = null;\n    }\n});\n\n//For backwards compatibility\nWaveSurfer.AudioElement = WaveSurfer.MediaElement;\n\n'use strict';\n\nWaveSurfer.Drawer = {\n    init: function (container, params) {\n        this.container = container;\n        this.params = params;\n\n        this.width = 0;\n        this.height = params.height * this.params.pixelRatio;\n\n        this.lastPos = 0;\n\n        this.initDrawer(params);\n        this.createWrapper();\n        this.createElements();\n    },\n\n    createWrapper: function () {\n        this.wrapper = this.container.appendChild(\n            document.createElement('wave')\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    },\n\n    handleEvent: function (e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        var clientX = e.targetTouches ? e.targetTouches[0].clientX : e.clientX;\n        var bbox = this.wrapper.getBoundingClientRect();\n\n        var nominalWidth = this.width;\n        var parentWidth = this.getWidth();\n\n        var progress;\n\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress = ((clientX - bbox.left) * this.params.pixelRatio / nominalWidth) || 0;\n\n            if (progress > 1) {\n                progress = 1;\n            }\n        } else {\n            progress = ((clientX - bbox.left + this.wrapper.scrollLeft) / this.wrapper.scrollWidth) || 0;\n        }\n\n        return progress;\n    },\n\n    setupWrapperEvents: function () {\n        var my = this;\n\n        this.wrapper.addEventListener('click', function (e) {\n            var scrollbarHeight = my.wrapper.offsetHeight - my.wrapper.clientHeight;\n            if (scrollbarHeight != 0) {\n                // scrollbar is visible.  Check if click was on it\n                var bbox = my.wrapper.getBoundingClientRect();\n                if (e.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (my.params.interact) {\n                my.fireEvent('click', e, my.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', function (e) {\n            my.fireEvent('scroll', e);\n        });\n    },\n\n    drawPeaks: function (peaks, length, start, end) {\n        this.setWidth(length);\n\n        this.params.barWidth ?\n            this.drawBars(peaks, 0, start, end) :\n            this.drawWave(peaks, 0, start, end);\n    },\n\n    style: function (el, styles) {\n        Object.keys(styles).forEach(function (prop) {\n            if (el.style[prop] !== styles[prop]) {\n                el.style[prop] = styles[prop];\n            }\n        });\n        return el;\n    },\n\n    resetScroll: function () {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    },\n\n    recenter: function (percent) {\n        var position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    },\n\n    recenterOnPosition: function (position, immediate) {\n        var scrollLeft = this.wrapper.scrollLeft;\n        var half = ~~(this.wrapper.clientWidth / 2);\n        var target = position - half;\n        var offset = target - scrollLeft;\n        var maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // we'll limit the \"re-center\" rate.\n            var rate = 5;\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n\n    },\n\n    getScrollX: function() {\n        return Math.round(this.wrapper.scrollLeft * this.params.pixelRatio);\n    },\n\n    getWidth: function () {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    },\n\n    setWidth: function (width) {\n        if (this.width == width) {\n          return;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            this.style(this.wrapper, {\n                width: ~~(this.width / this.params.pixelRatio) + 'px'\n            });\n        }\n\n        this.updateSize();\n    },\n\n    setHeight: function (height) {\n        if (height == this.height) { return; }\n        this.height = height;\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n        this.updateSize();\n    },\n\n    progress: function (progress) {\n        var minPxDelta = 1 / this.params.pixelRatio;\n        var pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                var newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(newPos);\n            }\n\n            this.updateProgress(pos);\n        }\n    },\n\n    destroy: function () {\n        this.unAll();\n        if (this.wrapper) {\n            this.container.removeChild(this.wrapper);\n            this.wrapper = null;\n        }\n    },\n\n    /* Renderer-specific methods */\n    initDrawer: function () {},\n\n    createElements: function () {},\n\n    updateSize: function () {},\n\n    drawWave: function (peaks, max) {},\n\n    clearWave: function () {},\n\n    updateProgress: function (position) {}\n};\n\nWaveSurfer.util.extend(WaveSurfer.Drawer, WaveSurfer.Observer);\n\n'use strict';\n\nWaveSurfer.Drawer.Canvas = Object.create(WaveSurfer.Drawer);\n\nWaveSurfer.util.extend(WaveSurfer.Drawer.Canvas, {\n    createElements: function () {\n        var waveCanvas = this.wrapper.appendChild(\n            this.style(document.createElement('canvas'), {\n                position: 'absolute',\n                zIndex: 1,\n                left: 0,\n                top: 0,\n                bottom: 0\n            })\n        );\n        this.waveCc = waveCanvas.getContext('2d');\n\n        this.progressWave = this.wrapper.appendChild(\n            this.style(document.createElement('wave'), {\n                position: 'absolute',\n                zIndex: 2,\n                left: 0,\n                top: 0,\n                bottom: 0,\n                overflow: 'hidden',\n                width: '0',\n                display: 'none',\n                boxSizing: 'border-box',\n                borderRightStyle: 'solid',\n                borderRightWidth: this.params.cursorWidth + 'px',\n                borderRightColor: this.params.cursorColor\n            })\n        );\n\n        if (this.params.waveColor != this.params.progressColor) {\n            var progressCanvas = this.progressWave.appendChild(\n                document.createElement('canvas')\n            );\n            this.progressCc = progressCanvas.getContext('2d');\n        }\n    },\n\n    updateSize: function () {\n        var width = Math.round(this.width / this.params.pixelRatio);\n\n        this.waveCc.canvas.width = this.width;\n        this.waveCc.canvas.height = this.height;\n        this.style(this.waveCc.canvas, { width: width + 'px'});\n\n        this.style(this.progressWave, { display: 'block'});\n\n        if (this.progressCc) {\n            this.progressCc.canvas.width = this.width;\n            this.progressCc.canvas.height = this.height;\n            this.style(this.progressCc.canvas, { width: width + 'px'});\n        }\n\n        this.clearWave();\n    },\n\n    clearWave: function () {\n        this.waveCc.clearRect(0, 0, this.width, this.height);\n        if (this.progressCc) {\n            this.progressCc.clearRect(0, 0, this.width, this.height);\n        }\n    },\n\n    drawBars: function (peaks, channelIndex, start, end) {\n        var my = this;\n        // Split channels\n        if (peaks[0] instanceof Array) {\n            var channels = peaks;\n            if (this.params.splitChannels) {\n                this.setHeight(channels.length * this.params.height * this.params.pixelRatio);\n                channels.forEach(function(channelPeaks, i) {\n                    my.drawBars(channelPeaks, i, start, end);\n                });\n                return;\n            } else {\n                peaks = channels[0];\n            }\n        }\n\n        // Bar wave draws the bottom only as a reflection of the top,\n        // so we don't need negative values\n        var hasMinVals = [].some.call(peaks, function (val) { return val < 0; });\n        // Skip every other value if there are negatives.\n        var peakIndexScale = 1;\n        if (hasMinVals) {\n            peakIndexScale = 2;\n        }\n\n        // A half-pixel offset makes lines crisp\n        var $ = 0.5 / this.params.pixelRatio;\n        var width = this.width;\n        var height = this.params.height * this.params.pixelRatio;\n        var offsetY = height * channelIndex || 0;\n        var halfH = height / 2;\n        var length = peaks.length / peakIndexScale;\n        var bar = this.params.barWidth * this.params.pixelRatio;\n        var gap = Math.max(this.params.pixelRatio, ~~(bar / 2));\n        var step = bar + gap;\n\n        var absmax = 1 / this.params.barHeight;\n        if (this.params.normalize) {\n            var max = WaveSurfer.util.max(peaks);\n            var min = WaveSurfer.util.min(peaks);\n            absmax = -min > max ? -min : max;\n        }\n\n        var scale = length / width;\n\n        this.waveCc.fillStyle = this.params.waveColor;\n        if (this.progressCc) {\n            this.progressCc.fillStyle = this.params.progressColor;\n        }\n\n        [ this.waveCc, this.progressCc ].forEach(function (cc) {\n            if (!cc) { return; }\n\n            for (var i = (start / scale); i < (end / scale); i += step) {\n                var peak = peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n                var h = Math.round(peak / absmax * halfH);\n                cc.fillRect(i + $, halfH - h + offsetY, bar + $, h * 2);\n            }\n        }, this);\n    },\n\n    drawWave: function (peaks, channelIndex, start, end) {\n        var my = this;\n        // Split channels\n        if (peaks[0] instanceof Array) {\n            var channels = peaks;\n            if (this.params.splitChannels) {\n                this.setHeight(channels.length * this.params.height * this.params.pixelRatio);\n                channels.forEach(function(channelPeaks, i) {\n                    my.drawWave(channelPeaks, i, start, end);\n                });\n                return;\n            } else {\n                peaks = channels[0];\n            }\n        }\n\n        // Support arrays without negative peaks\n        var hasMinValues = [].some.call(peaks, function (val) { return val < 0; });\n        if (!hasMinValues) {\n            var reflectedPeaks = [];\n            for (var i = 0, len = peaks.length; i < len; i++) {\n                reflectedPeaks[2 * i] = peaks[i];\n                reflectedPeaks[2 * i + 1] = -peaks[i];\n            }\n            peaks = reflectedPeaks;\n        }\n\n        // A half-pixel offset makes lines crisp\n        var $ = 0.5 / this.params.pixelRatio;\n        var height = this.params.height * this.params.pixelRatio;\n        var offsetY = height * channelIndex || 0;\n        var halfH = height / 2;\n        var length = ~~(peaks.length / 2);\n\n        var scale = 1;\n        if (this.params.fillParent && this.width != length) {\n            scale = this.width / length;\n        }\n\n        var absmax = 1 / this.params.barHeight;\n        if (this.params.normalize) {\n            var max = WaveSurfer.util.max(peaks);\n            var min = WaveSurfer.util.min(peaks);\n            absmax = -min > max ? -min : max;\n        }\n\n        this.waveCc.fillStyle = this.params.waveColor;\n        if (this.progressCc) {\n            this.progressCc.fillStyle = this.params.progressColor;\n        }\n\n        [ this.waveCc, this.progressCc ].forEach(function (cc) {\n            if (!cc) { return; }\n\n            cc.beginPath();\n            cc.moveTo(start * scale + $, halfH + offsetY);\n\n            for (var i = start; i < end; i++) {\n                var h = Math.round(peaks[2 * i] / absmax * halfH);\n                cc.lineTo(i * scale + $, halfH - h + offsetY);\n            }\n\n            // Draw the bottom edge going backwards, to make a single\n            // closed hull to fill.\n            for (var i = end - 1; i >= start; i--) {\n                var h = Math.round(peaks[2 * i + 1] / absmax * halfH);\n                cc.lineTo(i * scale + $, halfH - h + offsetY);\n            }\n\n            cc.closePath();\n            cc.fill();\n\n            // Always draw a median line\n            cc.fillRect(0, halfH + offsetY - $, this.width, $);\n        }, this);\n    },\n\n    updateProgress: function (pos) {\n        this.style(this.progressWave, { width: pos + 'px' });\n    },\n\n    getImage: function(type, quality) {\n        return this.waveCc.canvas.toDataURL(type, quality);\n    }\n});\n\n'use strict';\n\nWaveSurfer.Drawer.MultiCanvas = Object.create(WaveSurfer.Drawer);\n\nWaveSurfer.util.extend(WaveSurfer.Drawer.MultiCanvas, {\n\n    initDrawer: function (params) {\n        this.maxCanvasWidth = params.maxCanvasWidth != null ? params.maxCanvasWidth : 4000;\n        this.maxCanvasElementWidth = Math.round(this.maxCanvasWidth / this.params.pixelRatio);\n\n        if (this.maxCanvasWidth <= 1) {\n            throw 'maxCanvasWidth must be greater than 1.';\n        } else if (this.maxCanvasWidth % 2 == 1) {\n            throw 'maxCanvasWidth must be an even number.';\n        }\n\n        this.hasProgressCanvas = this.params.waveColor != this.params.progressColor;\n        this.halfPixel = 0.5 / this.params.pixelRatio;\n        this.canvases = [];\n    },\n\n    createElements: function () {\n        this.progressWave = this.wrapper.appendChild(\n            this.style(document.createElement('wave'), {\n                position: 'absolute',\n                zIndex: 2,\n                left: 0,\n                top: 0,\n                bottom: 0,\n                overflow: 'hidden',\n                width: '0',\n                display: 'none',\n                boxSizing: 'border-box',\n                borderRightStyle: 'solid',\n                borderRightWidth: this.params.cursorWidth + 'px',\n                borderRightColor: this.params.cursorColor\n            })\n        );\n\n        this.addCanvas();\n    },\n\n    updateSize: function () {\n        var totalWidth = Math.round(this.width / this.params.pixelRatio),\n            requiredCanvases = Math.ceil(totalWidth / this.maxCanvasElementWidth);\n\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        for (var i in this.canvases) {\n            // Add some overlap to prevent vertical white stripes, keep the width even for simplicity.\n            var canvasWidth = this.maxCanvasWidth + 2 * Math.ceil(this.params.pixelRatio / 2);\n\n            if (i == this.canvases.length - 1) {\n                canvasWidth = this.width - (this.maxCanvasWidth * (this.canvases.length - 1));\n            }\n\n            this.updateDimensions(this.canvases[i], canvasWidth, this.height);\n            this.clearWaveForEntry(this.canvases[i]);\n        }\n    },\n\n    addCanvas: function () {\n        var entry = {},\n            leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        entry.wave = this.wrapper.appendChild(\n            this.style(document.createElement('canvas'), {\n                position: 'absolute',\n                zIndex: 1,\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0\n            })\n        );\n        entry.waveCtx = entry.wave.getContext('2d');\n\n        if (this.hasProgressCanvas) {\n            entry.progress = this.progressWave.appendChild(\n                this.style(document.createElement('canvas'), {\n                    position: 'absolute',\n                    left: leftOffset + 'px',\n                    top: 0,\n                    bottom: 0\n                })\n            );\n            entry.progressCtx = entry.progress.getContext('2d');\n        }\n\n        this.canvases.push(entry);\n    },\n\n    removeCanvas: function () {\n        var lastEntry = this.canvases.pop();\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave);\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress);\n        }\n    },\n\n    updateDimensions: function (entry, width, height) {\n        var elementWidth = Math.round(width / this.params.pixelRatio),\n            totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // Where the canvas starts and ends in the waveform, represented as a decimal between 0 and 1.\n        entry.start = (entry.waveCtx.canvas.offsetLeft / totalWidth) || 0;\n        entry.end = entry.start + elementWidth / totalWidth;\n\n        entry.waveCtx.canvas.width = width;\n        entry.waveCtx.canvas.height = height;\n        this.style(entry.waveCtx.canvas, { width: elementWidth + 'px'});\n\n        this.style(this.progressWave, { display: 'block'});\n\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.canvas.width = width;\n            entry.progressCtx.canvas.height = height;\n            this.style(entry.progressCtx.canvas, { width: elementWidth + 'px'});\n        }\n    },\n\n    clearWave: function () {\n        for (var i in this.canvases) {\n            this.clearWaveForEntry(this.canvases[i]);\n        }\n    },\n\n    clearWaveForEntry: function (entry) {\n        entry.waveCtx.clearRect(0, 0, entry.waveCtx.canvas.width, entry.waveCtx.canvas.height);\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.clearRect(0, 0, entry.progressCtx.canvas.width, entry.progressCtx.canvas.height);\n        }\n    },\n\n    drawBars: function (peaks, channelIndex, start, end) {\n        var my = this;\n        // Split channels\n        if (peaks[0] instanceof Array) {\n            var channels = peaks;\n            if (this.params.splitChannels) {\n                this.setHeight(channels.length * this.params.height * this.params.pixelRatio);\n                channels.forEach(function(channelPeaks, i) {\n                    my.drawBars(channelPeaks, i, start, end);\n                });\n                return;\n            } else {\n                peaks = channels[0];\n            }\n        }\n\n        // Bar wave draws the bottom only as a reflection of the top,\n        // so we don't need negative values\n        var hasMinVals = [].some.call(peaks, function (val) { return val < 0; });\n        // Skip every other value if there are negatives.\n        var peakIndexScale = 1;\n        if (hasMinVals) {\n            peakIndexScale = 2;\n        }\n\n        // A half-pixel offset makes lines crisp\n        var width = this.width;\n        var height = this.params.height * this.params.pixelRatio;\n        var offsetY = height * channelIndex || 0;\n        var halfH = height / 2;\n        var length = peaks.length / peakIndexScale;\n        var bar = this.params.barWidth * this.params.pixelRatio;\n        var gap = Math.max(this.params.pixelRatio, ~~(bar / 2));\n        var step = bar + gap;\n\n        var absmax = 1 / this.params.barHeight;\n        if (this.params.normalize) {\n            var max = WaveSurfer.util.max(peaks);\n            var min = WaveSurfer.util.min(peaks);\n            absmax = -min > max ? -min : max;\n        }\n\n        var scale = length / width;\n\n        for (var i = (start / scale); i < (end / scale); i += step) {\n            var peak = peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n            var h = Math.round(peak / absmax * halfH);\n            this.fillRect(i + this.halfPixel, halfH - h + offsetY, bar + this.halfPixel, h * 2);\n        }\n    },\n\n    drawWave: function (peaks, channelIndex, start, end) {\n        var my = this;\n        // Split channels\n        if (peaks[0] instanceof Array) {\n            var channels = peaks;\n            if (this.params.splitChannels) {\n                this.setHeight(channels.length * this.params.height * this.params.pixelRatio);\n                channels.forEach(function(channelPeaks, i) {\n                    my.drawWave(channelPeaks, i, start, end);\n                });\n                return;\n            } else {\n                peaks = channels[0];\n            }\n        }\n\n        // Support arrays without negative peaks\n        var hasMinValues = [].some.call(peaks, function (val) { return val < 0; });\n        if (!hasMinValues) {\n            var reflectedPeaks = [];\n            for (var i = 0, len = peaks.length; i < len; i++) {\n                reflectedPeaks[2 * i] = peaks[i];\n                reflectedPeaks[2 * i + 1] = -peaks[i];\n            }\n            peaks = reflectedPeaks;\n        }\n\n        // A half-pixel offset makes lines crisp\n        var height = this.params.height * this.params.pixelRatio;\n        var offsetY = height * channelIndex || 0;\n        var halfH = height / 2;\n\n        var absmax = 1 / this.params.barHeight;\n        if (this.params.normalize) {\n            var max = WaveSurfer.util.max(peaks);\n            var min = WaveSurfer.util.min(peaks);\n            absmax = -min > max ? -min : max;\n        }\n\n        this.drawLine(peaks, absmax, halfH, offsetY, start, end);\n\n        // Always draw a median line\n        this.fillRect(0, halfH + offsetY - this.halfPixel, this.width, this.halfPixel);\n    },\n\n    drawLine: function (peaks, absmax, halfH, offsetY, start, end) {\n        for (var index in this.canvases) {\n            var entry = this.canvases[index];\n\n            this.setFillStyles(entry);\n\n            this.drawLineToContext(entry, entry.waveCtx, peaks, absmax, halfH, offsetY, start, end);\n            this.drawLineToContext(entry, entry.progressCtx, peaks, absmax, halfH, offsetY, start, end);\n        }\n    },\n\n    drawLineToContext: function (entry, ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) { return; }\n\n        var length = peaks.length / 2;\n\n        var scale = 1;\n        if (this.params.fillParent && this.width != length) {\n            scale = this.width / length;\n        }\n\n        var first = Math.round(length * entry.start),\n            last = Math.round(length * entry.end);\n        if (first > end || last < start) { return; }\n        var canvasStart = Math.max(first, start);\n        var canvasEnd = Math.min(last, end);\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale + this.halfPixel, halfH + offsetY);\n\n        for (var i = canvasStart; i < canvasEnd; i++) {\n            var peak = peaks[2 * i] || 0;\n            var h = Math.round(peak / absmax * halfH);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfH - h + offsetY);\n        }\n\n        // Draw the bottom edge going backwards, to make a single\n        // closed hull to fill.\n        for (var i = canvasEnd - 1; i >= canvasStart; i--) {\n            var peak = peaks[2 * i + 1] || 0;\n            var h = Math.round(peak / absmax * halfH);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfH - h + offsetY);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    },\n\n    fillRect: function (x, y, width, height) {\n        var startCanvas = Math.floor(x / this.maxCanvasWidth);\n        var endCanvas = Math.min(Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n                                 this.canvases.length);\n        for (var i = startCanvas; i < endCanvas; i++) {\n            var entry = this.canvases[i],\n                leftOffset = i * this.maxCanvasWidth;\n\n            var intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(x + width, i * this.maxCanvasWidth + entry.waveCtx.canvas.width),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                this.setFillStyles(entry);\n\n                this.fillRectToContext(entry.waveCtx,\n                        intersection.x1 - leftOffset,\n                        intersection.y1,\n                        intersection.x2 - intersection.x1,\n                        intersection.y2 - intersection.y1);\n\n                this.fillRectToContext(entry.progressCtx,\n                        intersection.x1 - leftOffset,\n                        intersection.y1,\n                        intersection.x2 - intersection.x1,\n                        intersection.y2 - intersection.y1);\n            }\n        }\n    },\n\n    fillRectToContext: function (ctx, x, y, width, height) {\n        if (!ctx) { return; }\n        ctx.fillRect(x, y, width, height);\n    },\n\n    setFillStyles: function (entry) {\n        entry.waveCtx.fillStyle = this.params.waveColor;\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.fillStyle = this.params.progressColor;\n        }\n    },\n\n    updateProgress: function (pos) {\n        this.style(this.progressWave, { width: pos + 'px' });\n    },\n\n    /**\n     * Combine all available canvasses together.\n     *\n     * @param {String} type - an optional value of a format type. Default is image/png.\n     * @param {Number} quality - an optional value between 0 and 1. Default is 0.92.\n     *\n     */\n    getImage: function(type, quality) {\n        var availableCanvas = [];\n        this.canvases.forEach(function (entry) {\n            availableCanvas.push(entry.wave.toDataURL(type, quality));\n        });\n        return availableCanvas.length > 1 ? availableCanvas : availableCanvas[0];\n    }\n});\n\n'use strict';\n\nWaveSurfer.Drawer.SplitWavePointPlot = Object.create(WaveSurfer.Drawer.Canvas);\n\nWaveSurfer.util.extend(WaveSurfer.Drawer.SplitWavePointPlot, {\n\n    defaultPlotParams: {\n        plotNormalizeTo: 'whole',\n        plotTimeStart: 0,\n        plotMin: 0,\n        plotMax: 1,\n        plotColor     : '#f63',\n        plotProgressColor : '#F00',\n        plotPointHeight: 2,\n        plotPointWidth: 2,\n        plotSeparator: true,\n        plotSeparatorColor: 'black',\n        plotRangeDisplay: false,\n        plotRangeUnits: '',\n        plotRangePrecision: 4,\n        plotRangeIgnoreOutliers: false,\n        plotRangeFontSize: 12,\n        plotRangeFontType: 'Ariel',\n        waveDrawMedianLine: true,\n        plotFileDelimiter:  '\\t'\n    },\n\n    //object variables that get manipulated by various object functions\n    plotTimeStart: 0,  //the start time of our wave according to plot data\n    plotTimeEnd: -1,   //the end of our wave according to plot data\n    plotArrayLoaded: false,\n    plotArray: [],     //array of plot data objects containing time and plot value\n    plotPoints: [],        //calculated average plot points corresponding to value of our wave\n    plotMin: 0,\n    plotMax: 1,\n\n    /**\n     * Initializes the plot array. If params.plotFileUrl is provided an ajax call will be\n     * executed and drawing of the wave is delayed until plot info is retrieved\n     * @param params\n     */\n    initDrawer: function (params) {\n        var my = this;\n\n        //set defaults if not passed in\n        for(var paramName in this.defaultPlotParams) {\n            if(this.params[paramName] === undefined) {\n                this.params[paramName] = this.defaultPlotParams[paramName];\n            }\n        }\n\n        //set the plotTimeStart\n        this.plotTimeStart = this.params.plotTimeStart;\n\n        //check to see if plotTimeEnd\n        if(this.params.plotTimeEnd !== undefined) {\n            this.plotTimeEnd = this.params.plotTimeEnd;\n        }\n\n        //set the plot array\n        if (Array.isArray(params.plotArray)) {\n            this.plotArray = params.plotArray;\n            this.plotArrayLoaded = true;\n        }\n        //Need to load the plot array from ajax with our callback\n        else {\n            var onPlotArrayLoaded = function (plotArray) {\n                my.plotArray = plotArray;\n                my.plotArrayLoaded = true;\n                my.fireEvent('plot_array_loaded');\n            };\n            this.loadPlotArrayFromFile(params.plotFileUrl, onPlotArrayLoaded, this.params.plotFileDelimiter);\n        }\n    },\n\n    /**\n     * Draw the peaks - this overrides the drawer.js function and does the following additional steps\n     * - ensures that the plotArray has already been loaded, if not it loads via ajax\n     * - moves the wave form to where channel 1 would normally be\n     * @param peaks\n     * @param length\n     * @param start\n     * @param end\n     */\n    drawPeaks: function (peaks, length, start, end) {\n        //make sure that the plot array is already loaded\n        if (this.plotArrayLoaded == true) {\n\n            this.setWidth(length);\n\n            //fake that we are splitting channels\n            this.splitChannels = true;\n            this.params.height = this.params.height/2;\n            if (peaks[0] instanceof Array) {\n               peaks = peaks[0];\n            }\n\n            this.params.barWidth ?\n                this.drawBars(peaks, 1, start, end) :\n                this.drawWave(peaks, 1, start, end);\n\n            //set the height back to the original\n            this.params.height = this.params.height*2;\n\n            this.calculatePlots();\n            this.drawPlots();\n\n        }\n        //otherwise wait for the plot array to be loaded and then draw again\n        else {\n            var my = this;\n            my.on('plot-array-loaded', function () {\n                my.drawPeaks(peaks, length, start, end);\n            });\n        }\n    },\n\n\n\n\n    /**\n     * Loop through the calculated plot values and actually draw them\n     */\n    drawPlots: function() {\n        var height = this.params.height * this.params.pixelRatio / 2;\n\n        var $ = 0.5 / this.params.pixelRatio;\n\n        this.waveCc.fillStyle = this.params.plotColor;\n        if(this.progressCc) {\n            this.progressCc.fillStyle = this.params.plotProgressColor;\n        }\n        for(var i in this.plotPoints) {\n            var x = parseInt(i);\n            var y = height - this.params.plotPointHeight - (this.plotPoints[i] * (height - this.params.plotPointHeight));\n            var pointHeight = this.params.plotPointHeight;\n\n            this.waveCc.fillRect(x, y, this.params.plotPointWidth, pointHeight);\n\n            if(this.progressCc) {\n                this.progressCc.fillRect(x, y, this.params.plotPointWidth, pointHeight);\n            }\n        }\n\n        //draw line to separate the two waves\n        if(this.params.plotSeparator) {\n            this.waveCc.fillStyle = this.params.plotSeparatorColor;\n            this.waveCc.fillRect(0, height, this.width, $);\n        }\n\n        if(this.params.plotRangeDisplay) {\n            this.displayPlotRange();\n        }\n    },\n\n\n    /**\n     * Display the range for the plot graph\n     */\n    displayPlotRange: function()\n    {\n        var fontSize = this.params.plotRangeFontSize * this.params.pixelRatio;\n        var maxRange = this.plotMax.toPrecision(this.params.plotRangePrecision) + ' ' + this.params.plotRangeUnits;\n        var minRange = this.plotMin.toPrecision(this.params.plotRangePrecision) + ' ' + this.params.plotRangeUnits;\n        this.waveCc.font = fontSize.toString() + 'px ' + this.params.plotRangeFontType;\n        this.waveCc.fillText(maxRange, 3, fontSize);\n        this.waveCc.fillText(minRange, 3, this.height/2);\n\n    },\n    /**\n     * This function loops through the plotArray and converts it to the plot points\n     * to be drawn on the canvas keyed by their position\n     */\n    calculatePlots: function() {\n        //reset plots array\n        this.plotPoints = {};\n\n        //make sure we have our plotTimeEnd\n        this.calculatePlotTimeEnd();\n\n        var pointsForAverage = [];\n        var previousWaveIndex = -1;\n        var maxPlot = 0;\n        var minPlot = 99999999999999;\n        var maxSegmentPlot = 0;\n        var minSegmentPlot = 99999999999999;\n        var duration = this.plotTimeEnd - this.plotTimeStart;\n\n        //loop through our plotArray and map values to wave indexes and take the average values for each wave index\n        for(var i = 0; i < this.plotArray.length; i++) {\n            var dataPoint = this.plotArray[i];\n            if(dataPoint.value > maxPlot) {maxPlot = dataPoint.value;}\n            if(dataPoint.value < minPlot) {minPlot = dataPoint.value;}\n\n            //make sure we are in the specified range\n            if(dataPoint.time >= this.plotTimeStart && dataPoint.time <= this.plotTimeEnd) {\n                //get the wave index corresponding to the data point\n                var waveIndex = Math.round(this.width * (dataPoint.time - this.plotTimeStart) / duration);\n\n                pointsForAverage.push(dataPoint.value);\n\n                //if we have moved on to a new position in our wave record average and reset previousWaveIndex\n                if(waveIndex !== previousWaveIndex) {\n                    if(pointsForAverage.length > 0) {\n                        //get the average plot for this point\n                        var avgPlot = this.avg(pointsForAverage);\n\n                        //check for min max\n                        if(avgPlot > maxSegmentPlot) {maxSegmentPlot = avgPlot;}\n                        if(avgPlot < minSegmentPlot) {minSegmentPlot = avgPlot;}\n\n                        //add plot to the position\n                        this.plotPoints[previousWaveIndex] = avgPlot;\n                        pointsForAverage = [];\n                    }\n                }\n                previousWaveIndex = waveIndex;\n            }\n        }\n\n        //normalize the plots points\n        if(this.params.plotNormalizeTo == 'whole') {\n            this.plotMin = minPlot;\n            this.plotMax = maxPlot;\n        }\n        else if(this.params.plotNormalizeTo == 'values') {\n            this.plotMin = this.params.plotMin;\n            this.plotMax = this.params.plotMax;\n        }\n        else {\n            this.plotMin = minSegmentPlot;\n            this.plotMax = maxSegmentPlot;\n        }\n        this.normalizeValues();\n    },\n\n    /**\n     * Function to take all of the plots in this.plots and normalize them from 0 to one\n     * depending on this.plotMin and this.plotMax values\n     */\n    normalizeValues: function() {\n        var normalizedValues = {};\n\n        //check to make sure we should be normalizing\n        if(this.params.plotNormalizeTo === 'none') {return;}\n\n        for(var i in this.plotPoints) {\n            //get the normalized value between 0 and 1\n            var normalizedValue = (this.plotPoints[i] - this.plotMin) / (this.plotMax - this.plotMin);\n\n            //check if the value is above our specified range max\n            if(normalizedValue > 1) {\n                if(!this.params.plotRangeIgnoreOutliers) {\n                    normalizedValues[i] = 1;\n                }\n            }\n            //check if hte value is below our specified rant\n            else if(normalizedValue < 0) {\n                if(!this.params.plotRangeIgnoreOutliers) {\n                    normalizedValues[i] = 0;\n                }\n            }\n            //in our range add the normalized value\n            else {\n                normalizedValues[i] = normalizedValue;\n            }\n        }\n        this.plotPoints = normalizedValues;\n    },\n    /**\n     *\n     */\n\n    /**\n     * Function to load the plot array from a external file\n     *\n     * The text file should contain a series of lines.\n     * Each line should contain [audio time] [delimiter character] [plot value]\n     * e.g. \"1.2355 [tab] 124.2321\"\n     *\n     * @param plotFileUrl  url of the file containing time and value information\n     * @param onSuccess    function to run on success\n     * @param delimiter    the delimiter that separates the time and values on each line\n     */\n    loadPlotArrayFromFile: function(plotFileUrl, onSuccess, delimiter) {\n        //default delimiter to tab character\n        if (delimiter === undefined) {delimiter = '\\t';}\n\n        var plotArray = [];\n\n        var options = {\n            url: plotFileUrl,\n            responseType: 'text'\n        };\n        var fileAjax = WaveSurfer.util.ajax(options);\n\n        fileAjax.on('load', function (data) {\n            if (data.currentTarget.status == 200) {\n                //split the file by line endings\n                var plotLines = data.currentTarget.responseText.split('\\n');\n                //loop through each line and find the time and plot values (delimited by tab)\n                for (var i = 0; i < plotLines.length; i++) {\n                    var plotParts = plotLines[i].split(delimiter);\n                    if(plotParts.length == 2) {\n                        plotArray.push({time: parseFloat(plotParts[0]), value: parseFloat(plotParts[1])});\n                    }\n                }\n                //run success function\n                onSuccess(plotArray);\n            }\n        });\n    },\n\n    /***\n     * Calculate the end time of the plot\n     */\n    calculatePlotTimeEnd: function() {\n        if(this.params.plotTimeEnd !== undefined) {\n            this.plotTimeEnd = this.params.plotTimeEnd;\n        }\n        else {\n            this.plotTimeEnd = this.plotArray[this.plotArray.length -1].time;\n        }\n    },\n\n    /**\n     * Quick convenience function to average numbers in an array\n     * @param  array of values\n     * @returns {number}\n     */\n    avg: function(values) {\n        var sum = values.reduce(function(a, b) {return a+b;});\n        return sum/values.length;\n    }\n});\n\nWaveSurfer.util.extend(WaveSurfer.Drawer.SplitWavePointPlot, WaveSurfer.Observer);\n\n'use strict';\n\nWaveSurfer.PeakCache = {\n    init: function() {\n        this.clearPeakCache();\n    },\n\n    clearPeakCache: function() {\n\t// Flat array with entries that are always in pairs to mark the\n\t// beginning and end of each subrange.  This is a convenience so we can\n\t// iterate over the pairs for easy set difference operations.\n        this.peakCacheRanges = [];\n\t// Length of the entire cachable region, used for resetting the cache\n\t// when this changes (zoom events, for instance).\n        this.peakCacheLength = -1;\n    },\n\n    addRangeToPeakCache: function(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        var uncachedRanges = [];\n        var i = 0;\n        // Skip ranges before the current start.\n        while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] < start) {\n            i++;\n        }\n\t// If |i| is even, |start| falls after an existing range.  Otherwise,\n\t// |start| falls between an existing range, and the uncached region\n\t// starts when we encounter the next node in |peakCacheRanges| or\n\t// |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (i < this.peakCacheRanges.length && this.peakCacheRanges[i] <= end) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter(function(item, pos, arr) {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            } else {\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            }\n        });\n\n\t// Merge the two ranges together, uncachedRanges will either contain\n\t// wholly new points, or duplicates of points in peakCacheRanges.  If\n\t// duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges.sort(function(a, b) {\n            return a - b;\n        }).filter(function(item, pos, arr) {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            } else {\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            }\n        });\n\n\t// Push the uncached ranges into an array of arrays for ease of\n\t// iteration in the functions that call this.\n        var uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i+1]]);\n        }\n\n        return uncachedRangePairs;\n    },\n\n    // For testing\n    getCacheRanges: function() {\n      var peakCacheRangePairs = [];\n      for (var i = 0; i < this.peakCacheRanges.length; i += 2) {\n          peakCacheRangePairs.push([this.peakCacheRanges[i], this.peakCacheRanges[i+1]]);\n      }\n      return peakCacheRangePairs;\n    }\n};\n\n'use strict';\n\n/* Init from HTML */\n(function () {\n    var init = function () {\n        var containers = document.querySelectorAll('wavesurfer');\n\n        Array.prototype.forEach.call(containers, function (el) {\n            var params = WaveSurfer.util.extend({\n                container: el,\n                backend: 'MediaElement',\n                mediaControls: true\n            }, el.dataset);\n\n            el.style.display = 'block';\n\n            var wavesurfer = WaveSurfer.create(params);\n\n            if (el.dataset.peaks) {\n                var peaks = JSON.parse(el.dataset.peaks);\n            }\n\n            wavesurfer.load(el.dataset.url, peaks);\n        });\n    };\n\n    if (document.readyState === 'complete') {\n        init();\n    } else {\n        window.addEventListener('load', init);\n    }\n}());\n\nreturn WaveSurfer;\n\n}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzdXJmZXIuanMvZGlzdC93YXZlc3VyZmVyLmpzPzU0ZTAiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIChyb290LCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICAvLyBBTUQuIFJlZ2lzdGVyIGFzIGFuIGFub255bW91cyBtb2R1bGUgdW5sZXNzIGFtZE1vZHVsZUlkIGlzIHNldFxuICAgIGRlZmluZSgnd2F2ZXN1cmZlcicsIFtdLCBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gKHJvb3RbJ1dhdmVTdXJmZXInXSA9IGZhY3RvcnkoKSk7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKSB7XG4gICAgLy8gTm9kZS4gRG9lcyBub3Qgd29yayB3aXRoIHN0cmljdCBDb21tb25KUywgYnV0XG4gICAgLy8gb25seSBDb21tb25KUy1saWtlIGVudmlyb25tZW50cyB0aGF0IHN1cHBvcnQgbW9kdWxlLmV4cG9ydHMsXG4gICAgLy8gbGlrZSBOb2RlLlxuICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSgpO1xuICB9IGVsc2Uge1xuICAgIHJvb3RbJ1dhdmVTdXJmZXInXSA9IGZhY3RvcnkoKTtcbiAgfVxufSh0aGlzLCBmdW5jdGlvbiAoKSB7XG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFdhdmVTdXJmZXIgPSB7XG4gICAgZGVmYXVsdFBhcmFtczoge1xuICAgICAgICBhdWRpb0NvbnRleHQgIDogbnVsbCxcbiAgICAgICAgYXVkaW9SYXRlICAgICA6IDEsXG4gICAgICAgIGF1dG9DZW50ZXIgICAgOiB0cnVlLFxuICAgICAgICBiYWNrZW5kICAgICAgIDogJ1dlYkF1ZGlvJyxcbiAgICAgICAgYmFySGVpZ2h0ICAgICA6IDEsXG4gICAgICAgIGNsb3NlQXVkaW9Db250ZXh0OiBmYWxzZSxcbiAgICAgICAgY29udGFpbmVyICAgICA6IG51bGwsXG4gICAgICAgIGN1cnNvckNvbG9yICAgOiAnIzMzMycsXG4gICAgICAgIGN1cnNvcldpZHRoICAgOiAxLFxuICAgICAgICBkcmFnU2VsZWN0aW9uIDogdHJ1ZSxcbiAgICAgICAgZmlsbFBhcmVudCAgICA6IHRydWUsXG4gICAgICAgIGZvcmNlRGVjb2RlICAgOiBmYWxzZSxcbiAgICAgICAgaGVpZ2h0ICAgICAgICA6IDEyOCxcbiAgICAgICAgaGlkZVNjcm9sbGJhciA6IGZhbHNlLFxuICAgICAgICBpbnRlcmFjdCAgICAgIDogdHJ1ZSxcbiAgICAgICAgbG9vcFNlbGVjdGlvbiA6IHRydWUsXG4gICAgICAgIG1lZGlhQ29udGFpbmVyOiBudWxsLFxuICAgICAgICBtZWRpYUNvbnRyb2xzIDogZmFsc2UsXG4gICAgICAgIG1lZGlhVHlwZSAgICAgOiAnYXVkaW8nLFxuICAgICAgICBtaW5QeFBlclNlYyAgIDogMjAsXG4gICAgICAgIHBhcnRpYWxSZW5kZXIgOiBmYWxzZSxcbiAgICAgICAgcGl4ZWxSYXRpbyAgICA6IHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvIHx8IHNjcmVlbi5kZXZpY2VYRFBJIC8gc2NyZWVuLmxvZ2ljYWxYRFBJLFxuICAgICAgICBwcm9ncmVzc0NvbG9yIDogJyM1NTUnLFxuICAgICAgICBub3JtYWxpemUgICAgIDogZmFsc2UsXG4gICAgICAgIHJlbmRlcmVyICAgICAgOiAnTXVsdGlDYW52YXMnLFxuICAgICAgICBzY3JvbGxQYXJlbnQgIDogZmFsc2UsXG4gICAgICAgIHNraXBMZW5ndGggICAgOiAyLFxuICAgICAgICBzcGxpdENoYW5uZWxzIDogZmFsc2UsXG4gICAgICAgIHdhdmVDb2xvciAgICAgOiAnIzk5OScsXG4gICAgfSxcblxuICAgIGluaXQ6IGZ1bmN0aW9uIChwYXJhbXMpIHtcbiAgICAgICAgLy8gRXh0cmFjdCByZWxldmFudCBwYXJhbWV0ZXJzIChvciBkZWZhdWx0cylcbiAgICAgICAgdGhpcy5wYXJhbXMgPSBXYXZlU3VyZmVyLnV0aWwuZXh0ZW5kKHt9LCB0aGlzLmRlZmF1bHRQYXJhbXMsIHBhcmFtcyk7XG5cbiAgICAgICAgdGhpcy5jb250YWluZXIgPSAnc3RyaW5nJyA9PSB0eXBlb2YgcGFyYW1zLmNvbnRhaW5lciA/XG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMucGFyYW1zLmNvbnRhaW5lcikgOlxuICAgICAgICAgICAgdGhpcy5wYXJhbXMuY29udGFpbmVyO1xuXG4gICAgICAgIGlmICghdGhpcy5jb250YWluZXIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ29udGFpbmVyIGVsZW1lbnQgbm90IGZvdW5kJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5wYXJhbXMubWVkaWFDb250YWluZXIgPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5tZWRpYUNvbnRhaW5lciA9IHRoaXMuY29udGFpbmVyO1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB0aGlzLnBhcmFtcy5tZWRpYUNvbnRhaW5lciA9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdGhpcy5tZWRpYUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5wYXJhbXMubWVkaWFDb250YWluZXIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tZWRpYUNvbnRhaW5lciA9IHRoaXMucGFyYW1zLm1lZGlhQ29udGFpbmVyO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCF0aGlzLm1lZGlhQ29udGFpbmVyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01lZGlhIENvbnRhaW5lciBlbGVtZW50IG5vdCBmb3VuZCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVXNlZCB0byBzYXZlIHRoZSBjdXJyZW50IHZvbHVtZSB3aGVuIG11dGluZyBzbyB3ZSBjYW5cbiAgICAgICAgLy8gcmVzdG9yZSBvbmNlIHVubXV0ZWRcbiAgICAgICAgdGhpcy5zYXZlZFZvbHVtZSA9IDA7XG5cbiAgICAgICAgLy8gVGhlIGN1cnJlbnQgbXV0ZWQgc3RhdGVcbiAgICAgICAgdGhpcy5pc011dGVkID0gZmFsc2U7XG5cbiAgICAgICAgLy8gV2lsbCBob2xkIGEgbGlzdCBvZiBldmVudCBkZXNjcmlwdG9ycyB0aGF0IG5lZWQgdG8gYmVcbiAgICAgICAgLy8gY2FuY2VsbGVkIG9uIHN1YnNlcXVlbnQgbG9hZHMgb2YgYXVkaW9cbiAgICAgICAgdGhpcy50bXBFdmVudHMgPSBbXTtcblxuICAgICAgICAvLyBIb2xkcyBhbnkgcnVubmluZyBhdWRpbyBkb3dubG9hZHNcbiAgICAgICAgdGhpcy5jdXJyZW50QWpheCA9IG51bGw7XG5cbiAgICAgICAgdGhpcy5jcmVhdGVEcmF3ZXIoKTtcbiAgICAgICAgdGhpcy5jcmVhdGVCYWNrZW5kKCk7XG4gICAgICAgIHRoaXMuY3JlYXRlUGVha0NhY2hlKCk7XG5cbiAgICAgICAgdGhpcy5pc0Rlc3Ryb3llZCA9IGZhbHNlO1xuICAgIH0sXG5cbiAgICBjcmVhdGVEcmF3ZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG15ID0gdGhpcztcblxuICAgICAgICB0aGlzLmRyYXdlciA9IE9iamVjdC5jcmVhdGUoV2F2ZVN1cmZlci5EcmF3ZXJbdGhpcy5wYXJhbXMucmVuZGVyZXJdKTtcbiAgICAgICAgdGhpcy5kcmF3ZXIuaW5pdCh0aGlzLmNvbnRhaW5lciwgdGhpcy5wYXJhbXMpO1xuXG4gICAgICAgIHRoaXMuZHJhd2VyLm9uKCdyZWRyYXcnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBteS5kcmF3QnVmZmVyKCk7XG4gICAgICAgICAgICBteS5kcmF3ZXIucHJvZ3Jlc3MobXkuYmFja2VuZC5nZXRQbGF5ZWRQZXJjZW50cygpKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gQ2xpY2stdG8tc2Vla1xuICAgICAgICB0aGlzLmRyYXdlci5vbignY2xpY2snLCBmdW5jdGlvbiAoZSwgcHJvZ3Jlc3MpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIG15LnNlZWtUbyhwcm9ncmVzcyk7XG4gICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gUmVsYXkgdGhlIHNjcm9sbCBldmVudCBmcm9tIHRoZSBkcmF3ZXJcbiAgICAgICAgdGhpcy5kcmF3ZXIub24oJ3Njcm9sbCcsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBpZiAobXkucGFyYW1zLnBhcnRpYWxSZW5kZXIpIHtcbiAgICAgICAgICAgICAgICBteS5kcmF3QnVmZmVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBteS5maXJlRXZlbnQoJ3Njcm9sbCcsIGUpO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgY3JlYXRlQmFja2VuZDogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbXkgPSB0aGlzO1xuXG4gICAgICAgIGlmICh0aGlzLmJhY2tlbmQpIHtcbiAgICAgICAgICAgIHRoaXMuYmFja2VuZC5kZXN0cm95KCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBCYWNrIGNvbXBhdFxuICAgICAgICBpZiAodGhpcy5wYXJhbXMuYmFja2VuZCA9PSAnQXVkaW9FbGVtZW50Jykge1xuICAgICAgICAgICAgdGhpcy5wYXJhbXMuYmFja2VuZCA9ICdNZWRpYUVsZW1lbnQnO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMucGFyYW1zLmJhY2tlbmQgPT0gJ1dlYkF1ZGlvJyAmJiAhV2F2ZVN1cmZlci5XZWJBdWRpby5zdXBwb3J0c1dlYkF1ZGlvKCkpIHtcbiAgICAgICAgICAgIHRoaXMucGFyYW1zLmJhY2tlbmQgPSAnTWVkaWFFbGVtZW50JztcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuYmFja2VuZCA9IE9iamVjdC5jcmVhdGUoV2F2ZVN1cmZlclt0aGlzLnBhcmFtcy5iYWNrZW5kXSk7XG4gICAgICAgIHRoaXMuYmFja2VuZC5pbml0KHRoaXMucGFyYW1zKTtcblxuICAgICAgICB0aGlzLmJhY2tlbmQub24oJ2ZpbmlzaCcsIGZ1bmN0aW9uICgpIHsgbXkuZmlyZUV2ZW50KCdmaW5pc2gnKTsgfSk7XG4gICAgICAgIHRoaXMuYmFja2VuZC5vbigncGxheScsIGZ1bmN0aW9uICgpIHsgbXkuZmlyZUV2ZW50KCdwbGF5Jyk7IH0pO1xuICAgICAgICB0aGlzLmJhY2tlbmQub24oJ3BhdXNlJywgZnVuY3Rpb24gKCkgeyBteS5maXJlRXZlbnQoJ3BhdXNlJyk7IH0pO1xuXG4gICAgICAgIHRoaXMuYmFja2VuZC5vbignYXVkaW9wcm9jZXNzJywgZnVuY3Rpb24gKHRpbWUpIHtcbiAgICAgICAgICAgIG15LmRyYXdlci5wcm9ncmVzcyhteS5iYWNrZW5kLmdldFBsYXllZFBlcmNlbnRzKCkpO1xuICAgICAgICAgICAgbXkuZmlyZUV2ZW50KCdhdWRpb3Byb2Nlc3MnLCB0aW1lKTtcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIGNyZWF0ZVBlYWtDYWNoZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLnBhcmFtcy5wYXJ0aWFsUmVuZGVyKSB7XG4gICAgICAgICAgICB0aGlzLnBlYWtDYWNoZSA9IE9iamVjdC5jcmVhdGUoV2F2ZVN1cmZlci5QZWFrQ2FjaGUpO1xuICAgICAgICAgICAgdGhpcy5wZWFrQ2FjaGUuaW5pdCgpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIGdldER1cmF0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJhY2tlbmQuZ2V0RHVyYXRpb24oKTtcbiAgICB9LFxuXG4gICAgZ2V0Q3VycmVudFRpbWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYmFja2VuZC5nZXRDdXJyZW50VGltZSgpO1xuICAgIH0sXG5cbiAgICBwbGF5OiBmdW5jdGlvbiAoc3RhcnQsIGVuZCkge1xuICAgICAgICB0aGlzLmZpcmVFdmVudCgnaW50ZXJhY3Rpb24nLCB0aGlzLnBsYXkuYmluZCh0aGlzLCBzdGFydCwgZW5kKSk7XG4gICAgICAgIHRoaXMuYmFja2VuZC5wbGF5KHN0YXJ0LCBlbmQpO1xuICAgIH0sXG5cbiAgICBwYXVzZTogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmJhY2tlbmQuaXNQYXVzZWQoKSB8fCB0aGlzLmJhY2tlbmQucGF1c2UoKTtcbiAgICB9LFxuXG4gICAgcGxheVBhdXNlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuYmFja2VuZC5pc1BhdXNlZCgpID8gdGhpcy5wbGF5KCkgOiB0aGlzLnBhdXNlKCk7XG4gICAgfSxcblxuICAgIGlzUGxheWluZzogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gIXRoaXMuYmFja2VuZC5pc1BhdXNlZCgpO1xuICAgIH0sXG5cbiAgICBza2lwQmFja3dhcmQ6IGZ1bmN0aW9uIChzZWNvbmRzKSB7XG4gICAgICAgIHRoaXMuc2tpcCgtc2Vjb25kcyB8fCAtdGhpcy5wYXJhbXMuc2tpcExlbmd0aCk7XG4gICAgfSxcblxuICAgIHNraXBGb3J3YXJkOiBmdW5jdGlvbiAoc2Vjb25kcykge1xuICAgICAgICB0aGlzLnNraXAoc2Vjb25kcyB8fCB0aGlzLnBhcmFtcy5za2lwTGVuZ3RoKTtcbiAgICB9LFxuXG4gICAgc2tpcDogZnVuY3Rpb24gKG9mZnNldCkge1xuICAgICAgICB2YXIgcG9zaXRpb24gPSB0aGlzLmdldEN1cnJlbnRUaW1lKCkgfHwgMDtcbiAgICAgICAgdmFyIGR1cmF0aW9uID0gdGhpcy5nZXREdXJhdGlvbigpIHx8IDE7XG4gICAgICAgIHBvc2l0aW9uID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oZHVyYXRpb24sIHBvc2l0aW9uICsgKG9mZnNldCB8fCAwKSkpO1xuICAgICAgICB0aGlzLnNlZWtBbmRDZW50ZXIocG9zaXRpb24gLyBkdXJhdGlvbik7XG4gICAgfSxcblxuICAgIHNlZWtBbmRDZW50ZXI6IGZ1bmN0aW9uIChwcm9ncmVzcykge1xuICAgICAgICB0aGlzLnNlZWtUbyhwcm9ncmVzcyk7XG4gICAgICAgIHRoaXMuZHJhd2VyLnJlY2VudGVyKHByb2dyZXNzKTtcbiAgICB9LFxuXG4gICAgc2Vla1RvOiBmdW5jdGlvbiAocHJvZ3Jlc3MpIHtcbiAgICAgICAgdGhpcy5maXJlRXZlbnQoJ2ludGVyYWN0aW9uJywgdGhpcy5zZWVrVG8uYmluZCh0aGlzLCBwcm9ncmVzcykpO1xuXG4gICAgICAgIHZhciBwYXVzZWQgPSB0aGlzLmJhY2tlbmQuaXNQYXVzZWQoKTtcbiAgICAgICAgLy8gYXZvaWQgZHJhdyB3cm9uZyBwb3NpdGlvbiB3aGlsZSBwbGF5aW5nIGJhY2t3YXJkIHNlZWtpbmdcbiAgICAgICAgaWYgKCFwYXVzZWQpIHtcbiAgICAgICAgICAgIHRoaXMuYmFja2VuZC5wYXVzZSgpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGF2b2lkIHNtYWxsIHNjcm9sbHMgd2hpbGUgcGF1c2VkIHNlZWtpbmdcbiAgICAgICAgdmFyIG9sZFNjcm9sbFBhcmVudCA9IHRoaXMucGFyYW1zLnNjcm9sbFBhcmVudDtcbiAgICAgICAgdGhpcy5wYXJhbXMuc2Nyb2xsUGFyZW50ID0gZmFsc2U7XG4gICAgICAgIHRoaXMuYmFja2VuZC5zZWVrVG8ocHJvZ3Jlc3MgKiB0aGlzLmdldER1cmF0aW9uKCkpO1xuICAgICAgICB0aGlzLmRyYXdlci5wcm9ncmVzcyh0aGlzLmJhY2tlbmQuZ2V0UGxheWVkUGVyY2VudHMoKSk7XG5cbiAgICAgICAgaWYgKCFwYXVzZWQpIHtcbiAgICAgICAgICAgIHRoaXMuYmFja2VuZC5wbGF5KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYXJhbXMuc2Nyb2xsUGFyZW50ID0gb2xkU2Nyb2xsUGFyZW50O1xuICAgICAgICB0aGlzLmZpcmVFdmVudCgnc2VlaycsIHByb2dyZXNzKTtcbiAgICB9LFxuXG4gICAgc3RvcDogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnBhdXNlKCk7XG4gICAgICAgIHRoaXMuc2Vla1RvKDApO1xuICAgICAgICB0aGlzLmRyYXdlci5wcm9ncmVzcygwKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBwbGF5YmFjayB2b2x1bWUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gbmV3Vm9sdW1lIEEgdmFsdWUgYmV0d2VlbiAwIGFuZCAxLCAwIGJlaW5nIG5vXG4gICAgICogdm9sdW1lIGFuZCAxIGJlaW5nIGZ1bGwgdm9sdW1lLlxuICAgICAqL1xuICAgIHNldFZvbHVtZTogZnVuY3Rpb24gKG5ld1ZvbHVtZSkge1xuICAgICAgICB0aGlzLmJhY2tlbmQuc2V0Vm9sdW1lKG5ld1ZvbHVtZSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgcGxheWJhY2sgdm9sdW1lLlxuICAgICAqL1xuICAgIGdldFZvbHVtZTogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5iYWNrZW5kLmdldFZvbHVtZSgpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIHBsYXliYWNrIHJhdGUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gcmF0ZSBBIHBvc2l0aXZlIG51bWJlci4gRS5nLiAwLjUgbWVhbnMgaGFsZiB0aGVcbiAgICAgKiBub3JtYWwgc3BlZWQsIDIgbWVhbnMgZG91YmxlIHNwZWVkIGFuZCBzbyBvbi5cbiAgICAgKi9cbiAgICBzZXRQbGF5YmFja1JhdGU6IGZ1bmN0aW9uIChyYXRlKSB7XG4gICAgICAgIHRoaXMuYmFja2VuZC5zZXRQbGF5YmFja1JhdGUocmF0ZSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgcGxheWJhY2sgcmF0ZS5cbiAgICAgKi9cbiAgICBnZXRQbGF5YmFja1JhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYmFja2VuZC5nZXRQbGF5YmFja1JhdGUoKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogVG9nZ2xlIHRoZSB2b2x1bWUgb24gYW5kIG9mZi4gSXQgbm90IGN1cnJlbmx5IG11dGVkIGl0IHdpbGxcbiAgICAgKiBzYXZlIHRoZSBjdXJyZW50IHZvbHVtZSB2YWx1ZSBhbmQgdHVybiB0aGUgdm9sdW1lIG9mZi5cbiAgICAgKiBJZiBjdXJyZW50bHkgbXV0ZWQgdGhlbiBpdCB3aWxsIHJlc3RvcmUgdGhlIHZvbHVtZSB0byB0aGUgc2F2ZWRcbiAgICAgKiB2YWx1ZSwgYW5kIHRoZW4gcmVzdCB0aGUgc2F2ZWQgdmFsdWUuXG4gICAgICovXG4gICAgdG9nZ2xlTXV0ZTogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnNldE11dGUoIXRoaXMuaXNNdXRlZCk7XG4gICAgfSxcblxuICAgIHNldE11dGU6IGZ1bmN0aW9uIChtdXRlKSB7XG4gICAgICAgIC8vIGlnbm9yZSBhbGwgbXV0aW5nIHJlcXVlc3RzIGlmIHRoZSBhdWRpbyBpcyBhbHJlYWR5IGluIHRoYXQgc3RhdGVcbiAgICAgICAgaWYgKG11dGUgPT09IHRoaXMuaXNNdXRlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG11dGUpIHtcbiAgICAgICAgICAgIC8vIElmIGN1cnJlbnRseSBub3QgbXV0ZWQgdGhlbiBzYXZlIGN1cnJlbnQgdm9sdW1lLFxuICAgICAgICAgICAgLy8gdHVybiBvZmYgdGhlIHZvbHVtZSBhbmQgdXBkYXRlIHRoZSBtdXRlIHByb3BlcnRpZXNcbiAgICAgICAgICAgIHRoaXMuc2F2ZWRWb2x1bWUgPSB0aGlzLmJhY2tlbmQuZ2V0Vm9sdW1lKCk7XG4gICAgICAgICAgICB0aGlzLmJhY2tlbmQuc2V0Vm9sdW1lKDApO1xuICAgICAgICAgICAgdGhpcy5pc011dGVkID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIElmIGN1cnJlbnRseSBtdXRlZCB0aGVuIHJlc3RvcmUgdG8gdGhlIHNhdmVkIHZvbHVtZVxuICAgICAgICAgICAgLy8gYW5kIHVwZGF0ZSB0aGUgbXV0ZSBwcm9wZXJ0aWVzXG4gICAgICAgICAgICB0aGlzLmJhY2tlbmQuc2V0Vm9sdW1lKHRoaXMuc2F2ZWRWb2x1bWUpO1xuICAgICAgICAgICAgdGhpcy5pc011dGVkID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBjdXJyZW50IG11dGUgc3RhdHVzLlxuICAgICAqL1xuICAgIGdldE11dGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNNdXRlZDtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBsaXN0IG9mIGN1cnJlbnQgc2V0IGZpbHRlcnMgYXMgYW4gYXJyYXkuXG4gICAgICpcbiAgICAgKiBGaWx0ZXJzIG11c3QgYmUgc2V0IHdpdGggc2V0RmlsdGVycyBtZXRob2QgZmlyc3RcbiAgICAgKi9cbiAgICBnZXRGaWx0ZXJzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYmFja2VuZC5maWx0ZXJzIHx8IFtdO1xuICAgIH0sXG5cbiAgICB0b2dnbGVTY3JvbGw6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5wYXJhbXMuc2Nyb2xsUGFyZW50ID0gIXRoaXMucGFyYW1zLnNjcm9sbFBhcmVudDtcbiAgICAgICAgdGhpcy5kcmF3QnVmZmVyKCk7XG4gICAgfSxcblxuICAgIHRvZ2dsZUludGVyYWN0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMucGFyYW1zLmludGVyYWN0ID0gIXRoaXMucGFyYW1zLmludGVyYWN0O1xuICAgIH0sXG5cbiAgICBkcmF3QnVmZmVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBub21pbmFsV2lkdGggPSBNYXRoLnJvdW5kKFxuICAgICAgICAgICAgdGhpcy5nZXREdXJhdGlvbigpICogdGhpcy5wYXJhbXMubWluUHhQZXJTZWMgKiB0aGlzLnBhcmFtcy5waXhlbFJhdGlvXG4gICAgICAgICk7XG4gICAgICAgIHZhciBwYXJlbnRXaWR0aCA9IHRoaXMuZHJhd2VyLmdldFdpZHRoKCk7XG4gICAgICAgIHZhciB3aWR0aCA9IG5vbWluYWxXaWR0aDtcbiAgICAgICAgdmFyIHN0YXJ0ID0gdGhpcy5kcmF3ZXIuZ2V0U2Nyb2xsWCgpO1xuICAgICAgICB2YXIgZW5kID0gTWF0aC5taW4oc3RhcnQgKyBwYXJlbnRXaWR0aCwgd2lkdGgpO1xuXG4gICAgICAgIC8vIEZpbGwgY29udGFpbmVyXG4gICAgICAgIGlmICh0aGlzLnBhcmFtcy5maWxsUGFyZW50ICYmICghdGhpcy5wYXJhbXMuc2Nyb2xsUGFyZW50IHx8IG5vbWluYWxXaWR0aCA8IHBhcmVudFdpZHRoKSkge1xuICAgICAgICAgICAgd2lkdGggPSBwYXJlbnRXaWR0aDtcbiAgICAgICAgICAgIHN0YXJ0ID0gMDtcbiAgICAgICAgICAgIGVuZCA9IHdpZHRoO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMucGFyYW1zLnBhcnRpYWxSZW5kZXIpIHtcbiAgICAgICAgICAgIHZhciBuZXdSYW5nZXMgPSB0aGlzLnBlYWtDYWNoZS5hZGRSYW5nZVRvUGVha0NhY2hlKHdpZHRoLCBzdGFydCwgZW5kKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmV3UmFuZ2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIHZhciBwZWFrcyA9IHRoaXMuYmFja2VuZC5nZXRQZWFrcyh3aWR0aCwgbmV3UmFuZ2VzW2ldWzBdLCBuZXdSYW5nZXNbaV1bMV0pO1xuICAgICAgICAgICAgICB0aGlzLmRyYXdlci5kcmF3UGVha3MocGVha3MsIHdpZHRoLCBuZXdSYW5nZXNbaV1bMF0sIG5ld1Jhbmdlc1tpXVsxXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdGFydCA9IDA7XG4gICAgICAgICAgICBlbmQgPSB3aWR0aDtcbiAgICAgICAgICAgIHZhciBwZWFrcyA9IHRoaXMuYmFja2VuZC5nZXRQZWFrcyh3aWR0aCwgc3RhcnQsIGVuZCk7XG4gICAgICAgICAgICB0aGlzLmRyYXdlci5kcmF3UGVha3MocGVha3MsIHdpZHRoLCBzdGFydCwgZW5kKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmZpcmVFdmVudCgncmVkcmF3JywgcGVha3MsIHdpZHRoKTtcbiAgICB9LFxuXG4gICAgem9vbTogZnVuY3Rpb24gKHB4UGVyU2VjKSB7XG4gICAgICAgIHRoaXMucGFyYW1zLm1pblB4UGVyU2VjID0gcHhQZXJTZWM7XG5cbiAgICAgICAgdGhpcy5wYXJhbXMuc2Nyb2xsUGFyZW50ID0gdHJ1ZTtcblxuICAgICAgICB0aGlzLmRyYXdCdWZmZXIoKTtcbiAgICAgICAgdGhpcy5kcmF3ZXIucHJvZ3Jlc3ModGhpcy5iYWNrZW5kLmdldFBsYXllZFBlcmNlbnRzKCkpO1xuXG4gICAgICAgIHRoaXMuZHJhd2VyLnJlY2VudGVyKFxuICAgICAgICAgICAgdGhpcy5nZXRDdXJyZW50VGltZSgpIC8gdGhpcy5nZXREdXJhdGlvbigpXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMuZmlyZUV2ZW50KCd6b29tJywgcHhQZXJTZWMpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBJbnRlcm5hbCBtZXRob2QuXG4gICAgICovXG4gICAgbG9hZEFycmF5QnVmZmVyOiBmdW5jdGlvbiAoYXJyYXlidWZmZXIpIHtcbiAgICAgICAgdGhpcy5kZWNvZGVBcnJheUJ1ZmZlcihhcnJheWJ1ZmZlciwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5pc0Rlc3Ryb3llZCkge1xuICAgICAgICAgICAgICAgIHRoaXMubG9hZERlY29kZWRCdWZmZXIoZGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIERpcmVjdGx5IGxvYWQgYW4gZXh0ZXJuYWxseSBkZWNvZGVkIEF1ZGlvQnVmZmVyLlxuICAgICAqL1xuICAgIGxvYWREZWNvZGVkQnVmZmVyOiBmdW5jdGlvbiAoYnVmZmVyKSB7XG4gICAgICAgIHRoaXMuYmFja2VuZC5sb2FkKGJ1ZmZlcik7XG4gICAgICAgIHRoaXMuZHJhd0J1ZmZlcigpO1xuICAgICAgICB0aGlzLmZpcmVFdmVudCgncmVhZHknKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogTG9hZHMgYXVkaW8gZGF0YSBmcm9tIGEgQmxvYiBvciBGaWxlIG9iamVjdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7QmxvYnxGaWxlfSBibG9iIEF1ZGlvIGRhdGEuXG4gICAgICovXG4gICAgbG9hZEJsb2I6IGZ1bmN0aW9uIChibG9iKSB7XG4gICAgICAgIHZhciBteSA9IHRoaXM7XG4gICAgICAgIC8vIENyZWF0ZSBmaWxlIHJlYWRlclxuICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcbiAgICAgICAgcmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ3Byb2dyZXNzJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIG15Lm9uUHJvZ3Jlc3MoZSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBteS5sb2FkQXJyYXlCdWZmZXIoZS50YXJnZXQucmVzdWx0KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJlYWRlci5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIG15LmZpcmVFdmVudCgnZXJyb3InLCAnRXJyb3IgcmVhZGluZyBmaWxlJyk7XG4gICAgICAgIH0pO1xuICAgICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoYmxvYik7XG4gICAgICAgIHRoaXMuZW1wdHkoKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogTG9hZHMgYXVkaW8gYW5kIHJlLXJlbmRlcnMgdGhlIHdhdmVmb3JtLlxuICAgICAqL1xuICAgIGxvYWQ6IGZ1bmN0aW9uICh1cmwsIHBlYWtzLCBwcmVsb2FkKSB7XG4gICAgICAgIHRoaXMuZW1wdHkoKTtcblxuICAgICAgICBzd2l0Y2ggKHRoaXMucGFyYW1zLmJhY2tlbmQpIHtcbiAgICAgICAgICAgIGNhc2UgJ1dlYkF1ZGlvJzogcmV0dXJuIHRoaXMubG9hZEJ1ZmZlcih1cmwsIHBlYWtzKTtcbiAgICAgICAgICAgIGNhc2UgJ01lZGlhRWxlbWVudCc6IHJldHVybiB0aGlzLmxvYWRNZWRpYUVsZW1lbnQodXJsLCBwZWFrcywgcHJlbG9hZCk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogTG9hZHMgYXVkaW8gdXNpbmcgV2ViIEF1ZGlvIGJ1ZmZlciBiYWNrZW5kLlxuICAgICAqL1xuICAgIGxvYWRCdWZmZXI6IGZ1bmN0aW9uICh1cmwsIHBlYWtzKSB7XG4gICAgICAgIHZhciBsb2FkID0gKGZ1bmN0aW9uIChhY3Rpb24pIHtcbiAgICAgICAgICAgIGlmIChhY3Rpb24pIHtcbiAgICAgICAgICAgICAgICB0aGlzLnRtcEV2ZW50cy5wdXNoKHRoaXMub25jZSgncmVhZHknLCBhY3Rpb24pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEFycmF5QnVmZmVyKHVybCwgdGhpcy5sb2FkQXJyYXlCdWZmZXIuYmluZCh0aGlzKSk7XG4gICAgICAgIH0pLmJpbmQodGhpcyk7XG5cbiAgICAgICAgaWYgKHBlYWtzKSB7XG4gICAgICAgICAgICB0aGlzLmJhY2tlbmQuc2V0UGVha3MocGVha3MpO1xuICAgICAgICAgICAgdGhpcy5kcmF3QnVmZmVyKCk7XG4gICAgICAgICAgICB0aGlzLnRtcEV2ZW50cy5wdXNoKHRoaXMub25jZSgnaW50ZXJhY3Rpb24nLCBsb2FkKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbG9hZCgpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqICBFaXRoZXIgY3JlYXRlIGEgbWVkaWEgZWxlbWVudCwgb3IgbG9hZFxuICAgICAqICBhbiBleGlzdGluZyBtZWRpYSBlbGVtZW50LlxuICAgICAqICBAcGFyYW0gIHtTdHJpbmd8SFRNTEVsZW1lbnR9IHVybE9yRWx0IEVpdGhlciBhIHBhdGggdG8gYSBtZWRpYSBmaWxlLFxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3IgYW4gZXhpc3RpbmcgSFRNTDUgQXVkaW8vVmlkZW9cbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVsZW1lbnRcbiAgICAgKiAgQHBhcmFtICB7QXJyYXl9ICAgICAgICAgICAgW3BlYWtzXSAgICAgQXJyYXkgb2YgcGVha3MuIFJlcXVpcmVkIHRvIGJ5cGFzc1xuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2ViIGF1ZGlvIGRlcGVuZGVuY3lcbiAgICAgKi9cbiAgICBsb2FkTWVkaWFFbGVtZW50OiBmdW5jdGlvbiAodXJsT3JFbHQsIHBlYWtzLCBwcmVsb2FkKSB7XG4gICAgICAgIHZhciB1cmwgPSB1cmxPckVsdDtcblxuICAgICAgICBpZiAodHlwZW9mIHVybE9yRWx0ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdGhpcy5iYWNrZW5kLmxvYWQodXJsLCB0aGlzLm1lZGlhQ29udGFpbmVyLCBwZWFrcywgcHJlbG9hZCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgZWx0ID0gdXJsT3JFbHQ7XG4gICAgICAgICAgICB0aGlzLmJhY2tlbmQubG9hZEVsdChlbHQsIHBlYWtzKTtcblxuICAgICAgICAgICAgLy8gSWYgcGVha3MgYXJlIG5vdCBwcm92aWRlZCxcbiAgICAgICAgICAgIC8vIHVybCA9IGVsZW1lbnQuc3JjIHNvIHdlIGNhbiBnZXQgcGVha3Mgd2l0aCB3ZWIgYXVkaW9cbiAgICAgICAgICAgIHVybCA9IGVsdC5zcmM7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnRtcEV2ZW50cy5wdXNoKFxuICAgICAgICAgICAgdGhpcy5iYWNrZW5kLm9uY2UoJ2NhbnBsYXknLCAoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZHJhd0J1ZmZlcigpO1xuICAgICAgICAgICAgICAgIHRoaXMuZmlyZUV2ZW50KCdyZWFkeScpO1xuICAgICAgICAgICAgfSkuYmluZCh0aGlzKSksXG5cbiAgICAgICAgICAgIHRoaXMuYmFja2VuZC5vbmNlKCdlcnJvcicsIChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5maXJlRXZlbnQoJ2Vycm9yJywgZXJyKTtcbiAgICAgICAgICAgIH0pLmJpbmQodGhpcykpXG4gICAgICAgICk7XG5cbiAgICAgICAgLy8gSWYgbm8gcHJlLWRlY29kZWQgcGVha3MgcHJvdmlkZWQgb3IgcHJlLWRlY29kZWQgcGVha3MgYXJlXG4gICAgICAgIC8vIHByb3ZpZGVkIHdpdGggZm9yY2VEZWNvZGUgZmxhZywgYXR0ZW1wdCB0byBkb3dubG9hZCB0aGVcbiAgICAgICAgLy8gYXVkaW8gZmlsZSBhbmQgZGVjb2RlIGl0IHdpdGggV2ViIEF1ZGlvLlxuICAgICAgICBpZiAocGVha3MpIHsgdGhpcy5iYWNrZW5kLnNldFBlYWtzKHBlYWtzKTsgfVxuXG4gICAgICAgIGlmICgoIXBlYWtzIHx8IHRoaXMucGFyYW1zLmZvcmNlRGVjb2RlKSAmJiB0aGlzLmJhY2tlbmQuc3VwcG9ydHNXZWJBdWRpbygpKSB7XG4gICAgICAgICAgICB0aGlzLmdldEFycmF5QnVmZmVyKHVybCwgKGZ1bmN0aW9uIChhcnJheWJ1ZmZlcikge1xuICAgICAgICAgICAgICAgIHRoaXMuZGVjb2RlQXJyYXlCdWZmZXIoYXJyYXlidWZmZXIsIChmdW5jdGlvbiAoYnVmZmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYmFja2VuZC5idWZmZXIgPSBidWZmZXI7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYmFja2VuZC5zZXRQZWFrcyhudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kcmF3QnVmZmVyKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmlyZUV2ZW50KCd3YXZlZm9ybS1yZWFkeScpO1xuICAgICAgICAgICAgICAgIH0pLmJpbmQodGhpcykpO1xuICAgICAgICAgICAgfSkuYmluZCh0aGlzKSk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgZGVjb2RlQXJyYXlCdWZmZXI6IGZ1bmN0aW9uIChhcnJheWJ1ZmZlciwgY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5hcnJheWJ1ZmZlciA9IGFycmF5YnVmZmVyO1xuXG4gICAgICAgIHRoaXMuYmFja2VuZC5kZWNvZGVBcnJheUJ1ZmZlcihcbiAgICAgICAgICAgIGFycmF5YnVmZmVyLFxuICAgICAgICAgICAgKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgLy8gT25seSB1c2UgdGhlIGRlY29kZWQgZGF0YSBpZiB3ZSBoYXZlbid0IGJlZW4gZGVzdHJveWVkIG9yIGFub3RoZXIgZGVjb2RlIHN0YXJ0ZWQgaW4gdGhlIG1lYW50aW1lXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlzRGVzdHJveWVkICYmIHRoaXMuYXJyYXlidWZmZXIgPT0gYXJyYXlidWZmZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYXJyYXlidWZmZXIgPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLmJpbmQodGhpcyksXG4gICAgICAgICAgICB0aGlzLmZpcmVFdmVudC5iaW5kKHRoaXMsICdlcnJvcicsICdFcnJvciBkZWNvZGluZyBhdWRpb2J1ZmZlcicpXG4gICAgICAgICk7XG4gICAgfSxcblxuICAgIGdldEFycmF5QnVmZmVyOiBmdW5jdGlvbiAodXJsLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgbXkgPSB0aGlzO1xuXG4gICAgICAgIHZhciBhamF4ID0gV2F2ZVN1cmZlci51dGlsLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiB1cmwsXG4gICAgICAgICAgICByZXNwb25zZVR5cGU6ICdhcnJheWJ1ZmZlcidcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5jdXJyZW50QWpheCA9IGFqYXg7XG5cbiAgICAgICAgdGhpcy50bXBFdmVudHMucHVzaChcbiAgICAgICAgICAgIGFqYXgub24oJ3Byb2dyZXNzJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBteS5vblByb2dyZXNzKGUpO1xuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBhamF4Lm9uKCdzdWNjZXNzJywgZnVuY3Rpb24gKGRhdGEsIGUpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhkYXRhKTtcbiAgICAgICAgICAgICAgICBteS5jdXJyZW50QWpheCA9IG51bGw7XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGFqYXgub24oJ2Vycm9yJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBteS5maXJlRXZlbnQoJ2Vycm9yJywgJ1hIUiBlcnJvcjogJyArIGUudGFyZ2V0LnN0YXR1c1RleHQpO1xuICAgICAgICAgICAgICAgIG15LmN1cnJlbnRBamF4ID0gbnVsbDtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICk7XG5cbiAgICAgICAgcmV0dXJuIGFqYXg7XG4gICAgfSxcblxuICAgIG9uUHJvZ3Jlc3M6IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGlmIChlLmxlbmd0aENvbXB1dGFibGUpIHtcbiAgICAgICAgICAgIHZhciBwZXJjZW50Q29tcGxldGUgPSBlLmxvYWRlZCAvIGUudG90YWw7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBBcHByb3hpbWF0ZSBwcm9ncmVzcyB3aXRoIGFuIGFzeW1wdG90aWNcbiAgICAgICAgICAgIC8vIGZ1bmN0aW9uLCBhbmQgYXNzdW1lIGRvd25sb2FkcyBpbiB0aGUgMS0zIE1CIHJhbmdlLlxuICAgICAgICAgICAgcGVyY2VudENvbXBsZXRlID0gZS5sb2FkZWQgLyAoZS5sb2FkZWQgKyAxMDAwMDAwKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmZpcmVFdmVudCgnbG9hZGluZycsIE1hdGgucm91bmQocGVyY2VudENvbXBsZXRlICogMTAwKSwgZS50YXJnZXQpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBFeHBvcnRzIFBDTSBkYXRhIGludG8gYSBKU09OIGFycmF5IGFuZCBvcGVucyBpbiBhIG5ldyB3aW5kb3cuXG4gICAgICovXG4gICAgZXhwb3J0UENNOiBmdW5jdGlvbiAobGVuZ3RoLCBhY2N1cmFjeSwgbm9XaW5kb3cpIHtcbiAgICAgICAgbGVuZ3RoID0gbGVuZ3RoIHx8IDEwMjQ7XG4gICAgICAgIGFjY3VyYWN5ID0gYWNjdXJhY3kgfHwgMTAwMDA7XG4gICAgICAgIG5vV2luZG93ID0gbm9XaW5kb3cgfHwgZmFsc2U7XG4gICAgICAgIHZhciBwZWFrcyA9IHRoaXMuYmFja2VuZC5nZXRQZWFrcyhsZW5ndGgsIGFjY3VyYWN5KTtcbiAgICAgICAgdmFyIGFyciA9IFtdLm1hcC5jYWxsKHBlYWtzLCBmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWwgKiBhY2N1cmFjeSkgLyBhY2N1cmFjeTtcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBqc29uID0gSlNPTi5zdHJpbmdpZnkoYXJyKTtcbiAgICAgICAgaWYgKCFub1dpbmRvdykge1xuICAgICAgICAgICAgd2luZG93Lm9wZW4oJ2RhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04LCcgK1xuICAgICAgICAgICAgICAgIGVuY29kZVVSSUNvbXBvbmVudChqc29uKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFNhdmUgd2F2ZWZvcm0gaW1hZ2UgYXMgZGF0YSBVUkkuXG4gICAgICpcbiAgICAgKiBUaGUgZGVmYXVsdCBmb3JtYXQgaXMgJ2ltYWdlL3BuZycuIE90aGVyIHN1cHBvcnRlZCB0eXBlcyBhcmVcbiAgICAgKiAnaW1hZ2UvanBlZycgYW5kICdpbWFnZS93ZWJwJy5cbiAgICAgKi9cbiAgICBleHBvcnRJbWFnZTogZnVuY3Rpb24oZm9ybWF0LCBxdWFsaXR5KSB7XG4gICAgICAgIGlmICghZm9ybWF0KSB7XG4gICAgICAgICAgICBmb3JtYXQgPSAnaW1hZ2UvcG5nJztcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXF1YWxpdHkpIHtcbiAgICAgICAgICAgIHF1YWxpdHkgPSAxO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuZHJhd2VyLmdldEltYWdlKGZvcm1hdCwgcXVhbGl0eSk7XG4gICAgfSxcblxuICAgIGNhbmNlbEFqYXg6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuY3VycmVudEFqYXgpIHtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudEFqYXgueGhyLmFib3J0KCk7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRBamF4ID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBjbGVhclRtcEV2ZW50czogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnRtcEV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7IGUudW4oKTsgfSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIERpc3BsYXkgZW1wdHkgd2F2ZWZvcm0uXG4gICAgICovXG4gICAgZW1wdHk6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmJhY2tlbmQuaXNQYXVzZWQoKSkge1xuICAgICAgICAgICAgdGhpcy5zdG9wKCk7XG4gICAgICAgICAgICB0aGlzLmJhY2tlbmQuZGlzY29ubmVjdFNvdXJjZSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2FuY2VsQWpheCgpO1xuICAgICAgICB0aGlzLmNsZWFyVG1wRXZlbnRzKCk7XG4gICAgICAgIHRoaXMuZHJhd2VyLnByb2dyZXNzKDApO1xuICAgICAgICB0aGlzLmRyYXdlci5zZXRXaWR0aCgwKTtcbiAgICAgICAgdGhpcy5kcmF3ZXIuZHJhd1BlYWtzKHsgbGVuZ3RoOiB0aGlzLmRyYXdlci5nZXRXaWR0aCgpIH0sIDApO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgZXZlbnRzLCBlbGVtZW50cyBhbmQgZGlzY29ubmVjdCBXZWJBdWRpbyBub2Rlcy5cbiAgICAgKi9cbiAgICBkZXN0cm95OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuZmlyZUV2ZW50KCdkZXN0cm95Jyk7XG4gICAgICAgIHRoaXMuY2FuY2VsQWpheCgpO1xuICAgICAgICB0aGlzLmNsZWFyVG1wRXZlbnRzKCk7XG4gICAgICAgIHRoaXMudW5BbGwoKTtcbiAgICAgICAgdGhpcy5iYWNrZW5kLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5kcmF3ZXIuZGVzdHJveSgpO1xuICAgICAgICB0aGlzLmlzRGVzdHJveWVkID0gdHJ1ZTtcbiAgICB9XG59O1xuXG5XYXZlU3VyZmVyLmNyZWF0ZSA9IGZ1bmN0aW9uIChwYXJhbXMpIHtcbiAgICB2YXIgd2F2ZXN1cmZlciA9IE9iamVjdC5jcmVhdGUoV2F2ZVN1cmZlcik7XG4gICAgd2F2ZXN1cmZlci5pbml0KHBhcmFtcyk7XG4gICAgcmV0dXJuIHdhdmVzdXJmZXI7XG59O1xuXG5XYXZlU3VyZmVyLnV0aWwgPSB7XG4gICAgZXh0ZW5kOiBmdW5jdGlvbiAoZGVzdCkge1xuICAgICAgICB2YXIgc291cmNlcyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG4gICAgICAgIHNvdXJjZXMuZm9yRWFjaChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICAgICAgICBPYmplY3Qua2V5cyhzb3VyY2UpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgICAgIGRlc3Rba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGVzdDtcbiAgICB9LFxuXG4gICAgZGVib3VuY2U6IGZ1bmN0aW9uIChmdW5jLCB3YWl0LCBpbW1lZGlhdGUpIHtcbiAgICAgICAgdmFyIGFyZ3MsIGNvbnRleHQsIHRpbWVvdXQ7XG4gICAgICAgIHZhciBsYXRlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGltZW91dCA9IG51bGw7XG4gICAgICAgICAgICBpZiAoIWltbWVkaWF0ZSkge1xuICAgICAgICAgICAgICAgIGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNvbnRleHQgPSB0aGlzO1xuICAgICAgICAgICAgYXJncyA9IGFyZ3VtZW50cztcbiAgICAgICAgICAgIHZhciBjYWxsTm93ID0gaW1tZWRpYXRlICYmICF0aW1lb3V0O1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgICAgICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQpO1xuICAgICAgICAgICAgaWYgKCF0aW1lb3V0KSB7XG4gICAgICAgICAgICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNhbGxOb3cpIHtcbiAgICAgICAgICAgICAgICBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0sXG5cbiAgICBtaW46IGZ1bmN0aW9uICh2YWx1ZXMpIHtcbiAgICAgICAgdmFyIG1pbiA9ICtJbmZpbml0eTtcbiAgICAgICAgZm9yICh2YXIgaSBpbiB2YWx1ZXMpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZXNbaV0gPCBtaW4pIHtcbiAgICAgICAgICAgICAgICBtaW4gPSB2YWx1ZXNbaV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbWluO1xuICAgIH0sXG5cbiAgICBtYXg6IGZ1bmN0aW9uICh2YWx1ZXMpIHtcbiAgICAgICAgdmFyIG1heCA9IC1JbmZpbml0eTtcbiAgICAgICAgZm9yICh2YXIgaSBpbiB2YWx1ZXMpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZXNbaV0gPiBtYXgpIHtcbiAgICAgICAgICAgICAgICBtYXggPSB2YWx1ZXNbaV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbWF4O1xuICAgIH0sXG5cbiAgICBnZXRJZDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gJ3dhdmVzdXJmZXJfJyArIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzIpLnN1YnN0cmluZygyKTtcbiAgICB9LFxuXG4gICAgYWpheDogZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGFqYXggPSBPYmplY3QuY3JlYXRlKFdhdmVTdXJmZXIuT2JzZXJ2ZXIpO1xuICAgICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgICAgIHZhciBmaXJlZDEwMCA9IGZhbHNlO1xuXG4gICAgICAgIHhoci5vcGVuKG9wdGlvbnMubWV0aG9kIHx8ICdHRVQnLCBvcHRpb25zLnVybCwgdHJ1ZSk7XG4gICAgICAgIHhoci5yZXNwb25zZVR5cGUgPSBvcHRpb25zLnJlc3BvbnNlVHlwZSB8fCAnanNvbic7XG5cbiAgICAgICAgeGhyLmFkZEV2ZW50TGlzdGVuZXIoJ3Byb2dyZXNzJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGFqYXguZmlyZUV2ZW50KCdwcm9ncmVzcycsIGUpO1xuICAgICAgICAgICAgaWYgKGUubGVuZ3RoQ29tcHV0YWJsZSAmJiBlLmxvYWRlZCA9PSBlLnRvdGFsKSB7XG4gICAgICAgICAgICAgICAgZmlyZWQxMDAgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICB4aHIuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBpZiAoIWZpcmVkMTAwKSB7XG4gICAgICAgICAgICAgICAgYWpheC5maXJlRXZlbnQoJ3Byb2dyZXNzJywgZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhamF4LmZpcmVFdmVudCgnbG9hZCcsIGUpO1xuXG4gICAgICAgICAgICBpZiAoMjAwID09IHhoci5zdGF0dXMgfHwgMjA2ID09IHhoci5zdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBhamF4LmZpcmVFdmVudCgnc3VjY2VzcycsIHhoci5yZXNwb25zZSwgZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGFqYXguZmlyZUV2ZW50KCdlcnJvcicsIGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICB4aHIuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgYWpheC5maXJlRXZlbnQoJ2Vycm9yJywgZSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHhoci5zZW5kKCk7XG4gICAgICAgIGFqYXgueGhyID0geGhyO1xuICAgICAgICByZXR1cm4gYWpheDtcbiAgICB9XG59O1xuXG4vKiBPYnNlcnZlciAqL1xuV2F2ZVN1cmZlci5PYnNlcnZlciA9IHtcbiAgICAvKipcbiAgICAgKiBBdHRhY2ggYSBoYW5kbGVyIGZ1bmN0aW9uIGZvciBhbiBldmVudC5cbiAgICAgKi9cbiAgICBvbjogZnVuY3Rpb24gKGV2ZW50LCBmbikge1xuICAgICAgICBpZiAoIXRoaXMuaGFuZGxlcnMpIHsgdGhpcy5oYW5kbGVycyA9IHt9OyB9XG5cbiAgICAgICAgdmFyIGhhbmRsZXJzID0gdGhpcy5oYW5kbGVyc1tldmVudF07XG4gICAgICAgIGlmICghaGFuZGxlcnMpIHtcbiAgICAgICAgICAgIGhhbmRsZXJzID0gdGhpcy5oYW5kbGVyc1tldmVudF0gPSBbXTtcbiAgICAgICAgfVxuICAgICAgICBoYW5kbGVycy5wdXNoKGZuKTtcblxuICAgICAgICAvLyBSZXR1cm4gYW4gZXZlbnQgZGVzY3JpcHRvclxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmFtZTogZXZlbnQsXG4gICAgICAgICAgICBjYWxsYmFjazogZm4sXG4gICAgICAgICAgICB1bjogdGhpcy51bi5iaW5kKHRoaXMsIGV2ZW50LCBmbilcbiAgICAgICAgfTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIGFuIGV2ZW50IGhhbmRsZXIuXG4gICAgICovXG4gICAgdW46IGZ1bmN0aW9uIChldmVudCwgZm4pIHtcbiAgICAgICAgaWYgKCF0aGlzLmhhbmRsZXJzKSB7IHJldHVybjsgfVxuXG4gICAgICAgIHZhciBoYW5kbGVycyA9IHRoaXMuaGFuZGxlcnNbZXZlbnRdO1xuICAgICAgICBpZiAoaGFuZGxlcnMpIHtcbiAgICAgICAgICAgIGlmIChmbikge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSBoYW5kbGVycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaGFuZGxlcnNbaV0gPT0gZm4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZXJzLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlcnMubGVuZ3RoID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmUgYWxsIGV2ZW50IGhhbmRsZXJzLlxuICAgICAqL1xuICAgIHVuQWxsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlcnMgPSBudWxsO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBBdHRhY2ggYSBoYW5kbGVyIHRvIGFuIGV2ZW50LiBUaGUgaGFuZGxlciBpcyBleGVjdXRlZCBhdCBtb3N0IG9uY2UgcGVyXG4gICAgICogZXZlbnQgdHlwZS5cbiAgICAgKi9cbiAgICBvbmNlOiBmdW5jdGlvbiAoZXZlbnQsIGhhbmRsZXIpIHtcbiAgICAgICAgdmFyIG15ID0gdGhpcztcbiAgICAgICAgdmFyIGZuID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaGFuZGxlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgbXkudW4oZXZlbnQsIGZuKTtcbiAgICAgICAgICAgIH0sIDApO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdGhpcy5vbihldmVudCwgZm4pO1xuICAgIH0sXG5cbiAgICBmaXJlRXZlbnQ6IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoIXRoaXMuaGFuZGxlcnMpIHsgcmV0dXJuOyB9XG4gICAgICAgIHZhciBoYW5kbGVycyA9IHRoaXMuaGFuZGxlcnNbZXZlbnRdO1xuICAgICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG4gICAgICAgIGhhbmRsZXJzICYmIGhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGZuKSB7XG4gICAgICAgICAgICBmbi5hcHBseShudWxsLCBhcmdzKTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuLyogTWFrZSB0aGUgbWFpbiBXYXZlU3VyZmVyIG9iamVjdCBhbiBvYnNlcnZlciAqL1xuV2F2ZVN1cmZlci51dGlsLmV4dGVuZChXYXZlU3VyZmVyLCBXYXZlU3VyZmVyLk9ic2VydmVyKTtcblxuJ3VzZSBzdHJpY3QnO1xuXG5XYXZlU3VyZmVyLldlYkF1ZGlvID0ge1xuICAgIHNjcmlwdEJ1ZmZlclNpemU6IDI1NixcbiAgICBQTEFZSU5HX1NUQVRFOiAwLFxuICAgIFBBVVNFRF9TVEFURTogMSxcbiAgICBGSU5JU0hFRF9TVEFURTogMixcblxuICAgIHN1cHBvcnRzV2ViQXVkaW86IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICEhKHdpbmRvdy5BdWRpb0NvbnRleHQgfHwgd2luZG93LndlYmtpdEF1ZGlvQ29udGV4dCk7XG4gICAgfSxcblxuICAgIGdldEF1ZGlvQ29udGV4dDogZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIVdhdmVTdXJmZXIuV2ViQXVkaW8uYXVkaW9Db250ZXh0KSB7XG4gICAgICAgICAgICBXYXZlU3VyZmVyLldlYkF1ZGlvLmF1ZGlvQ29udGV4dCA9IG5ldyAoXG4gICAgICAgICAgICAgICAgd2luZG93LkF1ZGlvQ29udGV4dCB8fCB3aW5kb3cud2Via2l0QXVkaW9Db250ZXh0XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBXYXZlU3VyZmVyLldlYkF1ZGlvLmF1ZGlvQ29udGV4dDtcbiAgICB9LFxuXG4gICAgZ2V0T2ZmbGluZUF1ZGlvQ29udGV4dDogZnVuY3Rpb24gKHNhbXBsZVJhdGUpIHtcbiAgICAgICAgaWYgKCFXYXZlU3VyZmVyLldlYkF1ZGlvLm9mZmxpbmVBdWRpb0NvbnRleHQpIHtcbiAgICAgICAgICAgIFdhdmVTdXJmZXIuV2ViQXVkaW8ub2ZmbGluZUF1ZGlvQ29udGV4dCA9IG5ldyAoXG4gICAgICAgICAgICAgICAgd2luZG93Lk9mZmxpbmVBdWRpb0NvbnRleHQgfHwgd2luZG93LndlYmtpdE9mZmxpbmVBdWRpb0NvbnRleHRcbiAgICAgICAgICAgICkoMSwgMiwgc2FtcGxlUmF0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFdhdmVTdXJmZXIuV2ViQXVkaW8ub2ZmbGluZUF1ZGlvQ29udGV4dDtcbiAgICB9LFxuXG4gICAgaW5pdDogZnVuY3Rpb24gKHBhcmFtcykge1xuICAgICAgICB0aGlzLnBhcmFtcyA9IHBhcmFtcztcbiAgICAgICAgdGhpcy5hYyA9IHBhcmFtcy5hdWRpb0NvbnRleHQgfHwgdGhpcy5nZXRBdWRpb0NvbnRleHQoKTtcblxuICAgICAgICB0aGlzLmxhc3RQbGF5ID0gdGhpcy5hYy5jdXJyZW50VGltZTtcbiAgICAgICAgdGhpcy5zdGFydFBvc2l0aW9uID0gMDtcbiAgICAgICAgdGhpcy5zY2hlZHVsZWRQYXVzZSA9IG51bGw7XG5cbiAgICAgICAgdGhpcy5zdGF0ZXMgPSBbXG4gICAgICAgICAgICBPYmplY3QuY3JlYXRlKFdhdmVTdXJmZXIuV2ViQXVkaW8uc3RhdGUucGxheWluZyksXG4gICAgICAgICAgICBPYmplY3QuY3JlYXRlKFdhdmVTdXJmZXIuV2ViQXVkaW8uc3RhdGUucGF1c2VkKSxcbiAgICAgICAgICAgIE9iamVjdC5jcmVhdGUoV2F2ZVN1cmZlci5XZWJBdWRpby5zdGF0ZS5maW5pc2hlZClcbiAgICAgICAgXTtcblxuICAgICAgICB0aGlzLmNyZWF0ZVZvbHVtZU5vZGUoKTtcbiAgICAgICAgdGhpcy5jcmVhdGVTY3JpcHROb2RlKCk7XG4gICAgICAgIHRoaXMuY3JlYXRlQW5hbHlzZXJOb2RlKCk7XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh0aGlzLlBBVVNFRF9TVEFURSk7XG4gICAgICAgIHRoaXMuc2V0UGxheWJhY2tSYXRlKHRoaXMucGFyYW1zLmF1ZGlvUmF0ZSk7XG4gICAgICAgIHRoaXMuc2V0TGVuZ3RoKDApO1xuICAgIH0sXG5cbiAgICBkaXNjb25uZWN0RmlsdGVyczogZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5maWx0ZXJzKSB7XG4gICAgICAgICAgICB0aGlzLmZpbHRlcnMuZm9yRWFjaChmdW5jdGlvbiAoZmlsdGVyKSB7XG4gICAgICAgICAgICAgICAgZmlsdGVyICYmIGZpbHRlci5kaXNjb25uZWN0KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuZmlsdGVycyA9IG51bGw7XG4gICAgICAgICAgICAvLyBSZWNvbm5lY3QgZGlyZWN0IHBhdGhcbiAgICAgICAgICAgIHRoaXMuYW5hbHlzZXIuY29ubmVjdCh0aGlzLmdhaW5Ob2RlKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBzZXRTdGF0ZTogZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlICE9PSB0aGlzLnN0YXRlc1tzdGF0ZV0pIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSB0aGlzLnN0YXRlc1tzdGF0ZV07XG4gICAgICAgICAgICB0aGlzLnN0YXRlLmluaXQuY2FsbCh0aGlzKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICAvLyBVbnBhY2tlZCBmaWx0ZXJzXG4gICAgc2V0RmlsdGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuc2V0RmlsdGVycyhbXS5zbGljZS5jYWxsKGFyZ3VtZW50cykpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBmaWx0ZXJzIFBhY2tlZCBpbHRlcnMgYXJyYXlcbiAgICAgKi9cbiAgICBzZXRGaWx0ZXJzOiBmdW5jdGlvbiAoZmlsdGVycykge1xuICAgICAgICAvLyBSZW1vdmUgZXhpc3RpbmcgZmlsdGVyc1xuICAgICAgICB0aGlzLmRpc2Nvbm5lY3RGaWx0ZXJzKCk7XG5cbiAgICAgICAgLy8gSW5zZXJ0IGZpbHRlcnMgaWYgZmlsdGVyIGFycmF5IG5vdCBlbXB0eVxuICAgICAgICBpZiAoZmlsdGVycyAmJiBmaWx0ZXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5maWx0ZXJzID0gZmlsdGVycztcblxuICAgICAgICAgICAgLy8gRGlzY29ubmVjdCBkaXJlY3QgcGF0aCBiZWZvcmUgaW5zZXJ0aW5nIGZpbHRlcnNcbiAgICAgICAgICAgIHRoaXMuYW5hbHlzZXIuZGlzY29ubmVjdCgpO1xuXG4gICAgICAgICAgICAvLyBDb25uZWN0IGVhY2ggZmlsdGVyIGluIHR1cm5cbiAgICAgICAgICAgIGZpbHRlcnMucmVkdWNlKGZ1bmN0aW9uIChwcmV2LCBjdXJyKSB7XG4gICAgICAgICAgICAgICAgcHJldi5jb25uZWN0KGN1cnIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBjdXJyO1xuICAgICAgICAgICAgfSwgdGhpcy5hbmFseXNlcikuY29ubmVjdCh0aGlzLmdhaW5Ob2RlKTtcbiAgICAgICAgfVxuXG4gICAgfSxcblxuICAgIGNyZWF0ZVNjcmlwdE5vZGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuYWMuY3JlYXRlU2NyaXB0UHJvY2Vzc29yKSB7XG4gICAgICAgICAgICB0aGlzLnNjcmlwdE5vZGUgPSB0aGlzLmFjLmNyZWF0ZVNjcmlwdFByb2Nlc3Nvcih0aGlzLnNjcmlwdEJ1ZmZlclNpemUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zY3JpcHROb2RlID0gdGhpcy5hYy5jcmVhdGVKYXZhU2NyaXB0Tm9kZSh0aGlzLnNjcmlwdEJ1ZmZlclNpemUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zY3JpcHROb2RlLmNvbm5lY3QodGhpcy5hYy5kZXN0aW5hdGlvbik7XG4gICAgfSxcblxuICAgIGFkZE9uQXVkaW9Qcm9jZXNzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBteSA9IHRoaXM7XG5cbiAgICAgICAgdGhpcy5zY3JpcHROb2RlLm9uYXVkaW9wcm9jZXNzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHRpbWUgPSBteS5nZXRDdXJyZW50VGltZSgpO1xuXG4gICAgICAgICAgICBpZiAodGltZSA+PSBteS5nZXREdXJhdGlvbigpKSB7XG4gICAgICAgICAgICAgICAgbXkuc2V0U3RhdGUobXkuRklOSVNIRURfU1RBVEUpO1xuICAgICAgICAgICAgICAgIG15LmZpcmVFdmVudCgncGF1c2UnKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGltZSA+PSBteS5zY2hlZHVsZWRQYXVzZSkge1xuICAgICAgICAgICAgICAgIG15LnBhdXNlKCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKG15LnN0YXRlID09PSBteS5zdGF0ZXNbbXkuUExBWUlOR19TVEFURV0pIHtcbiAgICAgICAgICAgICAgICBteS5maXJlRXZlbnQoJ2F1ZGlvcHJvY2VzcycsIHRpbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0sXG5cbiAgICByZW1vdmVPbkF1ZGlvUHJvY2VzczogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnNjcmlwdE5vZGUub25hdWRpb3Byb2Nlc3MgPSBudWxsO1xuICAgIH0sXG5cbiAgICBjcmVhdGVBbmFseXNlck5vZGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5hbmFseXNlciA9IHRoaXMuYWMuY3JlYXRlQW5hbHlzZXIoKTtcbiAgICAgICAgdGhpcy5hbmFseXNlci5jb25uZWN0KHRoaXMuZ2Fpbk5vZGUpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgdGhlIGdhaW4gbm9kZSBuZWVkZWQgdG8gY29udHJvbCB0aGUgcGxheWJhY2sgdm9sdW1lLlxuICAgICAqL1xuICAgIGNyZWF0ZVZvbHVtZU5vZGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gQ3JlYXRlIGdhaW4gbm9kZSB1c2luZyB0aGUgQXVkaW9Db250ZXh0XG4gICAgICAgIGlmICh0aGlzLmFjLmNyZWF0ZUdhaW4pIHtcbiAgICAgICAgICAgIHRoaXMuZ2Fpbk5vZGUgPSB0aGlzLmFjLmNyZWF0ZUdhaW4oKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZ2Fpbk5vZGUgPSB0aGlzLmFjLmNyZWF0ZUdhaW5Ob2RlKCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQWRkIHRoZSBnYWluIG5vZGUgdG8gdGhlIGdyYXBoXG4gICAgICAgIHRoaXMuZ2Fpbk5vZGUuY29ubmVjdCh0aGlzLmFjLmRlc3RpbmF0aW9uKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBnYWluIHRvIGEgbmV3IHZhbHVlLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IG5ld0dhaW4gVGhlIG5ldyBnYWluLCBhIGZsb2F0aW5nIHBvaW50IHZhbHVlXG4gICAgICogYmV0d2VlbiAwIGFuZCAxLiAwIGJlaW5nIG5vIGdhaW4gYW5kIDEgYmVpbmcgbWF4aW11bSBnYWluLlxuICAgICAqL1xuICAgIHNldFZvbHVtZTogZnVuY3Rpb24gKG5ld0dhaW4pIHtcbiAgICAgICAgdGhpcy5nYWluTm9kZS5nYWluLnZhbHVlID0gbmV3R2FpbjtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBjdXJyZW50IGdhaW4uXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7TnVtYmVyfSBUaGUgY3VycmVudCBnYWluLCBhIGZsb2F0aW5nIHBvaW50IHZhbHVlXG4gICAgICogYmV0d2VlbiAwIGFuZCAxLiAwIGJlaW5nIG5vIGdhaW4gYW5kIDEgYmVpbmcgbWF4aW11bSBnYWluLlxuICAgICAqL1xuICAgIGdldFZvbHVtZTogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nYWluTm9kZS5nYWluLnZhbHVlO1xuICAgIH0sXG5cbiAgICBkZWNvZGVBcnJheUJ1ZmZlcjogZnVuY3Rpb24gKGFycmF5YnVmZmVyLCBjYWxsYmFjaywgZXJyYmFjaykge1xuICAgICAgICBpZiAoIXRoaXMub2ZmbGluZUFjKSB7XG4gICAgICAgICAgICB0aGlzLm9mZmxpbmVBYyA9IHRoaXMuZ2V0T2ZmbGluZUF1ZGlvQ29udGV4dCh0aGlzLmFjID8gdGhpcy5hYy5zYW1wbGVSYXRlIDogNDQxMDApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMub2ZmbGluZUFjLmRlY29kZUF1ZGlvRGF0YShhcnJheWJ1ZmZlciwgKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICBjYWxsYmFjayhkYXRhKTtcbiAgICAgICAgfSkuYmluZCh0aGlzKSwgZXJyYmFjayk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFNldCBwcmUtZGVjb2RlZCBwZWFrcy5cbiAgICAgKi9cbiAgICBzZXRQZWFrczogZnVuY3Rpb24gKHBlYWtzKSB7XG4gICAgICAgIHRoaXMucGVha3MgPSBwZWFrcztcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogU2V0IHRoZSByZW5kZXJlZCBsZW5ndGggKGRpZmZlcmVudCBmcm9tIHRoZSBsZW5ndGggb2YgdGhlIGF1ZGlvKS5cbiAgICAgKi9cbiAgICBzZXRMZW5ndGg6IGZ1bmN0aW9uIChsZW5ndGgpIHtcbiAgICAgICAgLy8gTm8gcmVzaXplLCB3ZSBjYW4gcHJlc2VydmUgdGhlIGNhY2hlZCBwZWFrcy5cbiAgICAgICAgaWYgKHRoaXMubWVyZ2VkUGVha3MgJiYgbGVuZ3RoID09ICgoMiAqIHRoaXMubWVyZ2VkUGVha3MubGVuZ3RoIC0gMSkgKyAyKSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc3BsaXRQZWFrcyA9IFtdO1xuICAgICAgICB0aGlzLm1lcmdlZFBlYWtzID0gW107XG4gICAgICAgIC8vIFNldCB0aGUgbGFzdCBlbGVtZW50IG9mIHRoZSBzcGFyc2UgYXJyYXkgc28gdGhlIHBlYWsgYXJyYXlzIGFyZVxuICAgICAgICAvLyBhcHByb3ByaWF0ZWx5IHNpemVkIGZvciBvdGhlciBjYWxjdWxhdGlvbnMuXG4gICAgICAgIHZhciBjaGFubmVscyA9IHRoaXMuYnVmZmVyID8gdGhpcy5idWZmZXIubnVtYmVyT2ZDaGFubmVscyA6IDE7XG4gICAgICAgIGZvciAodmFyIGMgPSAwOyBjIDwgY2hhbm5lbHM7IGMrKykge1xuICAgICAgICAgIHRoaXMuc3BsaXRQZWFrc1tjXSA9IFtdO1xuICAgICAgICAgIHRoaXMuc3BsaXRQZWFrc1tjXVsyICogKGxlbmd0aCAtIDEpXSA9IDA7XG4gICAgICAgICAgdGhpcy5zcGxpdFBlYWtzW2NdWzIgKiAobGVuZ3RoIC0gMSkgKyAxXSA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5tZXJnZWRQZWFrc1syICogKGxlbmd0aCAtIDEpXSA9IDA7XG4gICAgICAgIHRoaXMubWVyZ2VkUGVha3NbMiAqIChsZW5ndGggLSAxKSArIDFdID0gMDtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogQ29tcHV0ZSB0aGUgbWF4IGFuZCBtaW4gdmFsdWUgb2YgdGhlIHdhdmVmb3JtIHdoZW4gYnJva2VuIGludG9cbiAgICAgKiA8bGVuZ3RoPiBzdWJyYW5nZXMuXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IGxlbmd0aCBIb3cgbWFueSBzdWJyYW5nZXMgdG8gYnJlYWsgdGhlIHdhdmVmb3JtIGludG8uXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IGZpcnN0IEZpcnN0IHNhbXBsZSBpbiB0aGUgcmVxdWlyZWQgcmFuZ2UuXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IGxhc3QgTGFzdCBzYW1wbGUgaW4gdGhlIHJlcXVpcmVkIHJhbmdlLlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gQXJyYXkgb2YgMio8bGVuZ3RoPiBwZWFrcyBvciBhcnJheSBvZiBhcnJheXNcbiAgICAgKiBvZiBwZWFrcyBjb25zaXN0aW5nIG9mIChtYXgsIG1pbikgdmFsdWVzIGZvciBlYWNoIHN1YnJhbmdlLlxuICAgICAqL1xuICAgIGdldFBlYWtzOiBmdW5jdGlvbiAobGVuZ3RoLCBmaXJzdCwgbGFzdCkge1xuICAgICAgICBpZiAodGhpcy5wZWFrcykgeyByZXR1cm4gdGhpcy5wZWFrczsgfVxuXG4gICAgICAgIHRoaXMuc2V0TGVuZ3RoKGxlbmd0aCk7XG5cbiAgICAgICAgdmFyIHNhbXBsZVNpemUgPSB0aGlzLmJ1ZmZlci5sZW5ndGggLyBsZW5ndGg7XG4gICAgICAgIHZhciBzYW1wbGVTdGVwID0gfn4oc2FtcGxlU2l6ZSAvIDEwKSB8fCAxO1xuICAgICAgICB2YXIgY2hhbm5lbHMgPSB0aGlzLmJ1ZmZlci5udW1iZXJPZkNoYW5uZWxzO1xuXG4gICAgICAgIGZvciAodmFyIGMgPSAwOyBjIDwgY2hhbm5lbHM7IGMrKykge1xuICAgICAgICAgICAgdmFyIHBlYWtzID0gdGhpcy5zcGxpdFBlYWtzW2NdO1xuICAgICAgICAgICAgdmFyIGNoYW4gPSB0aGlzLmJ1ZmZlci5nZXRDaGFubmVsRGF0YShjKTtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IGZpcnN0OyBpIDw9IGxhc3Q7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IH5+KGkgKiBzYW1wbGVTaXplKTtcbiAgICAgICAgICAgICAgICB2YXIgZW5kID0gfn4oc3RhcnQgKyBzYW1wbGVTaXplKTtcbiAgICAgICAgICAgICAgICB2YXIgbWluID0gMDtcbiAgICAgICAgICAgICAgICB2YXIgbWF4ID0gMDtcblxuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSBzdGFydDsgaiA8IGVuZDsgaiArPSBzYW1wbGVTdGVwKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9IGNoYW5bal07XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlID4gbWF4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXggPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA8IG1pbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWluID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBwZWFrc1syICogaV0gPSBtYXg7XG4gICAgICAgICAgICAgICAgcGVha3NbMiAqIGkgKyAxXSA9IG1pbjtcblxuICAgICAgICAgICAgICAgIGlmIChjID09IDAgfHwgbWF4ID4gdGhpcy5tZXJnZWRQZWFrc1syICogaV0pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXJnZWRQZWFrc1syICogaV0gPSBtYXg7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGMgPT0gMCB8fCBtaW4gPCB0aGlzLm1lcmdlZFBlYWtzWzIgKiBpICsgMV0pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXJnZWRQZWFrc1syICogaSArIDFdID0gbWluO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLnBhcmFtcy5zcGxpdENoYW5uZWxzID8gdGhpcy5zcGxpdFBlYWtzIDogdGhpcy5tZXJnZWRQZWFrcztcbiAgICB9LFxuXG4gICAgZ2V0UGxheWVkUGVyY2VudHM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuZ2V0UGxheWVkUGVyY2VudHMuY2FsbCh0aGlzKTtcbiAgICB9LFxuXG4gICAgZGlzY29ubmVjdFNvdXJjZTogZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5zb3VyY2UpIHtcbiAgICAgICAgICAgIHRoaXMuc291cmNlLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBkZXN0cm95OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5pc1BhdXNlZCgpKSB7XG4gICAgICAgICAgICB0aGlzLnBhdXNlKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy51bkFsbCgpO1xuICAgICAgICB0aGlzLmJ1ZmZlciA9IG51bGw7XG4gICAgICAgIHRoaXMuZGlzY29ubmVjdEZpbHRlcnMoKTtcbiAgICAgICAgdGhpcy5kaXNjb25uZWN0U291cmNlKCk7XG4gICAgICAgIHRoaXMuZ2Fpbk5vZGUuZGlzY29ubmVjdCgpO1xuICAgICAgICB0aGlzLnNjcmlwdE5vZGUuZGlzY29ubmVjdCgpO1xuICAgICAgICB0aGlzLmFuYWx5c2VyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgLy8gY2xvc2UgdGhlIGF1ZGlvQ29udGV4dCBpZiBjbG9zZUF1ZGlvQ29udGV4dCBvcHRpb24gaXMgc2V0IHRvIHRydWVcbiAgICAgICAgaWYgKHRoaXMucGFyYW1zLmNsb3NlQXVkaW9Db250ZXh0KSB7XG4gICAgICAgICAgICAvLyBjaGVjayBpZiBicm93c2VyIHN1cHBvcnRzIEF1ZGlvQ29udGV4dC5jbG9zZSgpXG4gICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMuYWMuY2xvc2UgPT09ICdmdW5jdGlvbicgJiYgdGhpcy5hYy5zdGF0ZSAhPSAnY2xvc2VkJykge1xuICAgICAgICAgICAgICAgIHRoaXMuYWMuY2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGNsZWFyIHRoZSByZWZlcmVuY2UgdG8gdGhlIGF1ZGlvY29udGV4dFxuICAgICAgICAgICAgdGhpcy5hYyA9IG51bGw7XG4gICAgICAgICAgICAvLyBjbGVhciB0aGUgYWN0dWFsIGF1ZGlvY29udGV4dCwgZWl0aGVyIHBhc3NlZCBhcyBwYXJhbSBvciB0aGVcbiAgICAgICAgICAgIC8vIGdsb2JhbCBzaW5nbGV0b25cbiAgICAgICAgICAgIGlmICghdGhpcy5wYXJhbXMuYXVkaW9Db250ZXh0KSB7XG4gICAgICAgICAgICAgICAgV2F2ZVN1cmZlci5XZWJBdWRpby5hdWRpb0NvbnRleHQgPSBudWxsO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmFtcy5hdWRpb0NvbnRleHQgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gY2xlYXIgdGhlIG9mZmxpbmVBdWRpb0NvbnRleHRcbiAgICAgICAgICAgIFdhdmVTdXJmZXIuV2ViQXVkaW8ub2ZmbGluZUF1ZGlvQ29udGV4dCA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgbG9hZDogZnVuY3Rpb24gKGJ1ZmZlcikge1xuICAgICAgICB0aGlzLnN0YXJ0UG9zaXRpb24gPSAwO1xuICAgICAgICB0aGlzLmxhc3RQbGF5ID0gdGhpcy5hYy5jdXJyZW50VGltZTtcbiAgICAgICAgdGhpcy5idWZmZXIgPSBidWZmZXI7XG4gICAgICAgIHRoaXMuY3JlYXRlU291cmNlKCk7XG4gICAgfSxcblxuICAgIGNyZWF0ZVNvdXJjZTogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmRpc2Nvbm5lY3RTb3VyY2UoKTtcbiAgICAgICAgdGhpcy5zb3VyY2UgPSB0aGlzLmFjLmNyZWF0ZUJ1ZmZlclNvdXJjZSgpO1xuXG4gICAgICAgIC8vYWRqdXN0IGZvciBvbGQgYnJvd3NlcnMuXG4gICAgICAgIHRoaXMuc291cmNlLnN0YXJ0ID0gdGhpcy5zb3VyY2Uuc3RhcnQgfHwgdGhpcy5zb3VyY2Uubm90ZUdyYWluT247XG4gICAgICAgIHRoaXMuc291cmNlLnN0b3AgPSB0aGlzLnNvdXJjZS5zdG9wIHx8IHRoaXMuc291cmNlLm5vdGVPZmY7XG5cbiAgICAgICAgdGhpcy5zb3VyY2UucGxheWJhY2tSYXRlLnZhbHVlID0gdGhpcy5wbGF5YmFja1JhdGU7XG4gICAgICAgIHRoaXMuc291cmNlLmJ1ZmZlciA9IHRoaXMuYnVmZmVyO1xuICAgICAgICB0aGlzLnNvdXJjZS5jb25uZWN0KHRoaXMuYW5hbHlzZXIpO1xuICAgIH0sXG5cbiAgICBpc1BhdXNlZDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZSAhPT0gdGhpcy5zdGF0ZXNbdGhpcy5QTEFZSU5HX1NUQVRFXTtcbiAgICB9LFxuXG4gICAgZ2V0RHVyYXRpb246IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmJ1ZmZlcikge1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyLmR1cmF0aW9uO1xuICAgIH0sXG5cbiAgICBzZWVrVG86IGZ1bmN0aW9uIChzdGFydCwgZW5kKSB7XG4gICAgICAgIGlmICghdGhpcy5idWZmZXIpIHsgcmV0dXJuOyB9XG5cbiAgICAgICAgdGhpcy5zY2hlZHVsZWRQYXVzZSA9IG51bGw7XG5cbiAgICAgICAgaWYgKHN0YXJ0ID09IG51bGwpIHtcbiAgICAgICAgICAgIHN0YXJ0ID0gdGhpcy5nZXRDdXJyZW50VGltZSgpO1xuICAgICAgICAgICAgaWYgKHN0YXJ0ID49IHRoaXMuZ2V0RHVyYXRpb24oKSkge1xuICAgICAgICAgICAgICAgIHN0YXJ0ID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoZW5kID09IG51bGwpIHtcbiAgICAgICAgICAgIGVuZCA9IHRoaXMuZ2V0RHVyYXRpb24oKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc3RhcnRQb3NpdGlvbiA9IHN0YXJ0O1xuICAgICAgICB0aGlzLmxhc3RQbGF5ID0gdGhpcy5hYy5jdXJyZW50VGltZTtcblxuICAgICAgICBpZiAodGhpcy5zdGF0ZSA9PT0gdGhpcy5zdGF0ZXNbdGhpcy5GSU5JU0hFRF9TVEFURV0pIHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUodGhpcy5QQVVTRURfU1RBVEUpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHsgc3RhcnQ6IHN0YXJ0LCBlbmQ6IGVuZCB9O1xuICAgIH0sXG5cbiAgICBnZXRQbGF5ZWRUaW1lOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5hYy5jdXJyZW50VGltZSAtIHRoaXMubGFzdFBsYXkpICogdGhpcy5wbGF5YmFja1JhdGU7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFBsYXlzIHRoZSBsb2FkZWQgYXVkaW8gcmVnaW9uLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IHN0YXJ0IFN0YXJ0IG9mZnNldCBpbiBzZWNvbmRzLFxuICAgICAqIHJlbGF0aXZlIHRvIHRoZSBiZWdpbm5pbmcgb2YgYSBjbGlwLlxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBlbmQgV2hlbiB0byBzdG9wXG4gICAgICogcmVsYXRpdmUgdG8gdGhlIGJlZ2lubmluZyBvZiBhIGNsaXAuXG4gICAgICovXG4gICAgcGxheTogZnVuY3Rpb24gKHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgaWYgKCF0aGlzLmJ1ZmZlcikgeyByZXR1cm47IH1cblxuICAgICAgICAvLyBuZWVkIHRvIHJlLWNyZWF0ZSBzb3VyY2Ugb24gZWFjaCBwbGF5YmFja1xuICAgICAgICB0aGlzLmNyZWF0ZVNvdXJjZSgpO1xuXG4gICAgICAgIHZhciBhZGp1c3RlZFRpbWUgPSB0aGlzLnNlZWtUbyhzdGFydCwgZW5kKTtcblxuICAgICAgICBzdGFydCA9IGFkanVzdGVkVGltZS5zdGFydDtcbiAgICAgICAgZW5kID0gYWRqdXN0ZWRUaW1lLmVuZDtcblxuICAgICAgICB0aGlzLnNjaGVkdWxlZFBhdXNlID0gZW5kO1xuXG4gICAgICAgIHRoaXMuc291cmNlLnN0YXJ0KDAsIHN0YXJ0LCBlbmQgLSBzdGFydCk7XG5cbiAgICAgICAgaWYgKHRoaXMuYWMuc3RhdGUgPT0gJ3N1c3BlbmRlZCcpIHtcbiAgICAgICAgICB0aGlzLmFjLnJlc3VtZSAmJiB0aGlzLmFjLnJlc3VtZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh0aGlzLlBMQVlJTkdfU1RBVEUpO1xuXG4gICAgICAgIHRoaXMuZmlyZUV2ZW50KCdwbGF5Jyk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFBhdXNlcyB0aGUgbG9hZGVkIGF1ZGlvLlxuICAgICAqL1xuICAgIHBhdXNlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuc2NoZWR1bGVkUGF1c2UgPSBudWxsO1xuXG4gICAgICAgIHRoaXMuc3RhcnRQb3NpdGlvbiArPSB0aGlzLmdldFBsYXllZFRpbWUoKTtcbiAgICAgICAgdGhpcy5zb3VyY2UgJiYgdGhpcy5zb3VyY2Uuc3RvcCgwKTtcblxuICAgICAgICB0aGlzLnNldFN0YXRlKHRoaXMuUEFVU0VEX1NUQVRFKTtcblxuICAgICAgICB0aGlzLmZpcmVFdmVudCgncGF1c2UnKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgKiAgIFJldHVybnMgdGhlIGN1cnJlbnQgdGltZSBpbiBzZWNvbmRzIHJlbGF0aXZlIHRvIHRoZSBhdWRpb2NsaXAncyBkdXJhdGlvbi5cbiAgICAqL1xuICAgIGdldEN1cnJlbnRUaW1lOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLmdldEN1cnJlbnRUaW1lLmNhbGwodGhpcyk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICogICBSZXR1cm5zIHRoZSBjdXJyZW50IHBsYXliYWNrIHJhdGUuXG4gICAgKi9cbiAgICBnZXRQbGF5YmFja1JhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGxheWJhY2tSYXRlO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGF1ZGlvIHNvdXJjZSBwbGF5YmFjayByYXRlLlxuICAgICAqL1xuICAgIHNldFBsYXliYWNrUmF0ZTogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIHZhbHVlID0gdmFsdWUgfHwgMTtcbiAgICAgICAgaWYgKHRoaXMuaXNQYXVzZWQoKSkge1xuICAgICAgICAgICAgdGhpcy5wbGF5YmFja1JhdGUgPSB2YWx1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucGF1c2UoKTtcbiAgICAgICAgICAgIHRoaXMucGxheWJhY2tSYXRlID0gdmFsdWU7XG4gICAgICAgICAgICB0aGlzLnBsYXkoKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5cbldhdmVTdXJmZXIuV2ViQXVkaW8uc3RhdGUgPSB7fTtcblxuV2F2ZVN1cmZlci5XZWJBdWRpby5zdGF0ZS5wbGF5aW5nID0ge1xuICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5hZGRPbkF1ZGlvUHJvY2VzcygpO1xuICAgIH0sXG4gICAgZ2V0UGxheWVkUGVyY2VudHM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGR1cmF0aW9uID0gdGhpcy5nZXREdXJhdGlvbigpO1xuICAgICAgICByZXR1cm4gKHRoaXMuZ2V0Q3VycmVudFRpbWUoKSAvIGR1cmF0aW9uKSB8fCAwO1xuICAgIH0sXG4gICAgZ2V0Q3VycmVudFRpbWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhcnRQb3NpdGlvbiArIHRoaXMuZ2V0UGxheWVkVGltZSgpO1xuICAgIH1cbn07XG5cbldhdmVTdXJmZXIuV2ViQXVkaW8uc3RhdGUucGF1c2VkID0ge1xuICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5yZW1vdmVPbkF1ZGlvUHJvY2VzcygpO1xuICAgIH0sXG4gICAgZ2V0UGxheWVkUGVyY2VudHM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGR1cmF0aW9uID0gdGhpcy5nZXREdXJhdGlvbigpO1xuICAgICAgICByZXR1cm4gKHRoaXMuZ2V0Q3VycmVudFRpbWUoKSAvIGR1cmF0aW9uKSB8fCAwO1xuICAgIH0sXG4gICAgZ2V0Q3VycmVudFRpbWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhcnRQb3NpdGlvbjtcbiAgICB9XG59O1xuXG5XYXZlU3VyZmVyLldlYkF1ZGlvLnN0YXRlLmZpbmlzaGVkID0ge1xuICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5yZW1vdmVPbkF1ZGlvUHJvY2VzcygpO1xuICAgICAgICB0aGlzLmZpcmVFdmVudCgnZmluaXNoJyk7XG4gICAgfSxcbiAgICBnZXRQbGF5ZWRQZXJjZW50czogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gMTtcbiAgICB9LFxuICAgIGdldEN1cnJlbnRUaW1lOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldER1cmF0aW9uKCk7XG4gICAgfVxufTtcblxuV2F2ZVN1cmZlci51dGlsLmV4dGVuZChXYXZlU3VyZmVyLldlYkF1ZGlvLCBXYXZlU3VyZmVyLk9ic2VydmVyKTtcblxuJ3VzZSBzdHJpY3QnO1xuXG5XYXZlU3VyZmVyLk1lZGlhRWxlbWVudCA9IE9iamVjdC5jcmVhdGUoV2F2ZVN1cmZlci5XZWJBdWRpbyk7XG5cbldhdmVTdXJmZXIudXRpbC5leHRlbmQoV2F2ZVN1cmZlci5NZWRpYUVsZW1lbnQsIHtcbiAgICBpbml0OiBmdW5jdGlvbiAocGFyYW1zKSB7XG4gICAgICAgIHRoaXMucGFyYW1zID0gcGFyYW1zO1xuXG4gICAgICAgIC8vIER1bW15IG1lZGlhIHRvIGNhdGNoIGVycm9yc1xuICAgICAgICB0aGlzLm1lZGlhID0ge1xuICAgICAgICAgICAgY3VycmVudFRpbWU6IDAsXG4gICAgICAgICAgICBkdXJhdGlvbjogMCxcbiAgICAgICAgICAgIHBhdXNlZDogdHJ1ZSxcbiAgICAgICAgICAgIHBsYXliYWNrUmF0ZTogMSxcbiAgICAgICAgICAgIHBsYXk6IGZ1bmN0aW9uICgpIHt9LFxuICAgICAgICAgICAgcGF1c2U6IGZ1bmN0aW9uICgpIHt9XG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5tZWRpYVR5cGUgPSBwYXJhbXMubWVkaWFUeXBlLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIHRoaXMuZWxlbWVudFBvc2l0aW9uID0gcGFyYW1zLmVsZW1lbnRQb3NpdGlvbjtcbiAgICAgICAgdGhpcy5zZXRQbGF5YmFja1JhdGUodGhpcy5wYXJhbXMuYXVkaW9SYXRlKTtcbiAgICAgICAgdGhpcy5jcmVhdGVUaW1lcigpO1xuICAgIH0sXG5cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIHRpbWVyIHRvIHByb3ZpZGUgYSBtb3JlIHByZWNpc2UgYGF1ZGlvcHJvY2VzcycgZXZlbnQuXG4gICAgICovXG4gICAgY3JlYXRlVGltZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG15ID0gdGhpcztcbiAgICAgICAgdmFyIHBsYXlpbmcgPSBmYWxzZTtcblxuICAgICAgICB2YXIgb25BdWRpb1Byb2Nlc3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAobXkuaXNQYXVzZWQoKSkgeyByZXR1cm47IH1cblxuICAgICAgICAgICAgbXkuZmlyZUV2ZW50KCdhdWRpb3Byb2Nlc3MnLCBteS5nZXRDdXJyZW50VGltZSgpKTtcblxuICAgICAgICAgICAgLy8gQ2FsbCBhZ2FpbiBpbiB0aGUgbmV4dCBmcmFtZVxuICAgICAgICAgICAgdmFyIHJlcXVlc3RBbmltYXRpb25GcmFtZSA9IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHwgd2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZTtcbiAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShvbkF1ZGlvUHJvY2Vzcyk7XG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5vbigncGxheScsIG9uQXVkaW9Qcm9jZXNzKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogIENyZWF0ZSBtZWRpYSBlbGVtZW50IHdpdGggdXJsIGFzIGl0cyBzb3VyY2UsXG4gICAgICogIGFuZCBhcHBlbmQgdG8gY29udGFpbmVyIGVsZW1lbnQuXG4gICAgICogIEBwYXJhbSAge1N0cmluZ30gICAgICAgIHVybCAgICAgICAgIHBhdGggdG8gbWVkaWEgZmlsZVxuICAgICAqICBAcGFyYW0gIHtIVE1MRWxlbWVudH0gICBjb250YWluZXIgICBIVE1MIGVsZW1lbnRcbiAgICAgKiAgQHBhcmFtICB7QXJyYXl9ICAgICAgICAgcGVha3MgICAgICAgYXJyYXkgb2YgcGVhayBkYXRhXG4gICAgICogIEBwYXJhbSAge1N0cmluZ30gICAgICAgIHByZWxvYWQgICAgIEhUTUwgNSBwcmVsb2FkIGF0dHJpYnV0ZSB2YWx1ZVxuICAgICAqL1xuICAgIGxvYWQ6IGZ1bmN0aW9uICh1cmwsIGNvbnRhaW5lciwgcGVha3MsIHByZWxvYWQpIHtcbiAgICAgICAgdmFyIG15ID0gdGhpcztcblxuICAgICAgICB2YXIgbWVkaWEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRoaXMubWVkaWFUeXBlKTtcbiAgICAgICAgbWVkaWEuY29udHJvbHMgPSB0aGlzLnBhcmFtcy5tZWRpYUNvbnRyb2xzO1xuICAgICAgICBtZWRpYS5hdXRvcGxheSA9IHRoaXMucGFyYW1zLmF1dG9wbGF5IHx8IGZhbHNlO1xuICAgICAgICBtZWRpYS5wcmVsb2FkID0gcHJlbG9hZCA9PSBudWxsID8gJ2F1dG8nIDogcHJlbG9hZDtcbiAgICAgICAgbWVkaWEuc3JjID0gdXJsO1xuICAgICAgICBtZWRpYS5zdHlsZS53aWR0aCA9ICcxMDAlJztcblxuICAgICAgICB2YXIgcHJldk1lZGlhID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IodGhpcy5tZWRpYVR5cGUpO1xuICAgICAgICBpZiAocHJldk1lZGlhKSB7XG4gICAgICAgICAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQocHJldk1lZGlhKTtcbiAgICAgICAgfVxuICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQobWVkaWEpO1xuXG4gICAgICAgIHRoaXMuX2xvYWQobWVkaWEsIHBlYWtzKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogIExvYWQgZXhpc3RpbmcgbWVkaWEgZWxlbWVudC5cbiAgICAgKiAgQHBhcmFtICB7TWVkaWFFbGVtZW50fSAgZWx0ICAgICBIVE1MNSBBdWRpbyBvciBWaWRlbyBlbGVtZW50XG4gICAgICogIEBwYXJhbSAge0FycmF5fSAgICAgICAgIHBlYWtzICAgYXJyYXkgb2YgcGVhayBkYXRhXG4gICAgICovXG4gICAgbG9hZEVsdDogZnVuY3Rpb24gKGVsdCwgcGVha3MpIHtcbiAgICAgICAgdmFyIG15ID0gdGhpcztcblxuICAgICAgICB2YXIgbWVkaWEgPSBlbHQ7XG4gICAgICAgIG1lZGlhLmNvbnRyb2xzID0gdGhpcy5wYXJhbXMubWVkaWFDb250cm9scztcbiAgICAgICAgbWVkaWEuYXV0b3BsYXkgPSB0aGlzLnBhcmFtcy5hdXRvcGxheSB8fCBmYWxzZTtcblxuICAgICAgICB0aGlzLl9sb2FkKG1lZGlhLCBwZWFrcyk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqICBQcml2YXRlIG1ldGhvZCBjYWxsZWQgYnkgYm90aCBsb2FkIChmcm9tIHVybClcbiAgICAgKiAgYW5kIGxvYWRFbHQgKGV4aXN0aW5nIG1lZGlhIGVsZW1lbnQpLlxuICAgICAqICBAcGFyYW0gIHtNZWRpYUVsZW1lbnR9ICBtZWRpYSAgICAgSFRNTDUgQXVkaW8gb3IgVmlkZW8gZWxlbWVudFxuICAgICAqICBAcGFyYW0gIHtBcnJheX0gICAgICAgICBwZWFrcyAgIGFycmF5IG9mIHBlYWsgZGF0YVxuICAgICAqICBAcHJpdmF0ZVxuICAgICAqL1xuICAgIF9sb2FkOiBmdW5jdGlvbiAobWVkaWEsIHBlYWtzKSB7XG4gICAgICAgIHZhciBteSA9IHRoaXM7XG5cbiAgICAgICAgLy8gbG9hZCBtdXN0IGJlIGNhbGxlZCBtYW51YWxseSBvbiBpT1MsIG90aGVyd2lzZSBwZWFrcyB3b24ndCBkcmF3XG4gICAgICAgIC8vIHVudGlsIGEgdXNlciBpbnRlcmFjdGlvbiB0cmlnZ2VycyBsb2FkIC0tPiAncmVhZHknIGV2ZW50XG4gICAgICAgIGlmICh0eXBlb2YgbWVkaWEubG9hZCA9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBtZWRpYS5sb2FkKCk7XG4gICAgICAgIH1cblxuICAgICAgICBtZWRpYS5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIG15LmZpcmVFdmVudCgnZXJyb3InLCAnRXJyb3IgbG9hZGluZyBtZWRpYSBlbGVtZW50Jyk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIG1lZGlhLmFkZEV2ZW50TGlzdGVuZXIoJ2NhbnBsYXknLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBteS5maXJlRXZlbnQoJ2NhbnBsYXknKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbWVkaWEuYWRkRXZlbnRMaXN0ZW5lcignZW5kZWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBteS5maXJlRXZlbnQoJ2ZpbmlzaCcpO1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLm1lZGlhID0gbWVkaWE7XG4gICAgICAgIHRoaXMucGVha3MgPSBwZWFrcztcbiAgICAgICAgdGhpcy5vblBsYXlFbmQgPSBudWxsO1xuICAgICAgICB0aGlzLmJ1ZmZlciA9IG51bGw7XG4gICAgICAgIHRoaXMuc2V0UGxheWJhY2tSYXRlKHRoaXMucGxheWJhY2tSYXRlKTtcbiAgICB9LFxuXG4gICAgaXNQYXVzZWQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLm1lZGlhIHx8IHRoaXMubWVkaWEucGF1c2VkO1xuICAgIH0sXG5cbiAgICBnZXREdXJhdGlvbjogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZHVyYXRpb24gPSAodGhpcy5idWZmZXIgfHwgdGhpcy5tZWRpYSkuZHVyYXRpb247XG4gICAgICAgIGlmIChkdXJhdGlvbiA+PSBJbmZpbml0eSkgeyAvLyBzdHJlYW1pbmcgYXVkaW9cbiAgICAgICAgICAgIGR1cmF0aW9uID0gdGhpcy5tZWRpYS5zZWVrYWJsZS5lbmQoMCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGR1cmF0aW9uO1xuICAgIH0sXG5cbiAgICBnZXRDdXJyZW50VGltZTogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tZWRpYSAmJiB0aGlzLm1lZGlhLmN1cnJlbnRUaW1lO1xuICAgIH0sXG5cbiAgICBnZXRQbGF5ZWRQZXJjZW50czogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gKHRoaXMuZ2V0Q3VycmVudFRpbWUoKSAvIHRoaXMuZ2V0RHVyYXRpb24oKSkgfHwgMDtcbiAgICB9LFxuXG4gICAgZ2V0UGxheWJhY2tSYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBsYXliYWNrUmF0ZSB8fCB0aGlzLm1lZGlhLnBsYXliYWNrUmF0ZTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBhdWRpbyBzb3VyY2UgcGxheWJhY2sgcmF0ZS5cbiAgICAgKi9cbiAgICBzZXRQbGF5YmFja1JhdGU6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICB0aGlzLnBsYXliYWNrUmF0ZSA9IHZhbHVlIHx8IDE7XG4gICAgICAgIHRoaXMubWVkaWEucGxheWJhY2tSYXRlID0gdGhpcy5wbGF5YmFja1JhdGU7XG4gICAgfSxcblxuICAgIHNlZWtUbzogZnVuY3Rpb24gKHN0YXJ0KSB7XG4gICAgICAgIGlmIChzdGFydCAhPSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLm1lZGlhLmN1cnJlbnRUaW1lID0gc3RhcnQ7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jbGVhclBsYXlFbmQoKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogUGxheXMgdGhlIGxvYWRlZCBhdWRpbyByZWdpb24uXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gc3RhcnQgU3RhcnQgb2Zmc2V0IGluIHNlY29uZHMsXG4gICAgICogcmVsYXRpdmUgdG8gdGhlIGJlZ2lubmluZyBvZiBhIGNsaXAuXG4gICAgICogQHBhcmFtIHtOdW1iZXJ9IGVuZCBFbmQgb2Zmc2V0IGluIHNlY29uZHMsXG4gICAgICogcmVsYXRpdmUgdG8gdGhlIGJlZ2lubmluZyBvZiBhIGNsaXAuXG4gICAgICovXG4gICAgcGxheTogZnVuY3Rpb24gKHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgdGhpcy5zZWVrVG8oc3RhcnQpO1xuICAgICAgICB0aGlzLm1lZGlhLnBsYXkoKTtcbiAgICAgICAgZW5kICYmIHRoaXMuc2V0UGxheUVuZChlbmQpO1xuICAgICAgICB0aGlzLmZpcmVFdmVudCgncGxheScpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBQYXVzZXMgdGhlIGxvYWRlZCBhdWRpby5cbiAgICAgKi9cbiAgICBwYXVzZTogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLm1lZGlhICYmIHRoaXMubWVkaWEucGF1c2UoKTtcbiAgICAgICAgdGhpcy5jbGVhclBsYXlFbmQoKTtcbiAgICAgICAgdGhpcy5maXJlRXZlbnQoJ3BhdXNlJyk7XG4gICAgfSxcblxuICAgIHNldFBsYXlFbmQ6IGZ1bmN0aW9uIChlbmQpIHtcbiAgICAgICAgdmFyIG15ID0gdGhpcztcbiAgICAgICAgdGhpcy5vblBsYXlFbmQgPSBmdW5jdGlvbiAodGltZSkge1xuICAgICAgICAgICAgaWYgKHRpbWUgPj0gZW5kKSB7XG4gICAgICAgICAgICAgICAgbXkucGF1c2UoKTtcbiAgICAgICAgICAgICAgICBteS5zZWVrVG8oZW5kKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5vbignYXVkaW9wcm9jZXNzJywgdGhpcy5vblBsYXlFbmQpO1xuICAgIH0sXG5cbiAgICBjbGVhclBsYXlFbmQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMub25QbGF5RW5kKSB7XG4gICAgICAgICAgICB0aGlzLnVuKCdhdWRpb3Byb2Nlc3MnLCB0aGlzLm9uUGxheUVuZCk7XG4gICAgICAgICAgICB0aGlzLm9uUGxheUVuZCA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgZ2V0UGVha3M6IGZ1bmN0aW9uIChsZW5ndGgsIHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgaWYgKHRoaXMuYnVmZmVyKSB7XG4gICAgICAgICAgICByZXR1cm4gV2F2ZVN1cmZlci5XZWJBdWRpby5nZXRQZWFrcy5jYWxsKHRoaXMsIGxlbmd0aCwgc3RhcnQsIGVuZCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucGVha3MgfHwgW107XG4gICAgfSxcblxuICAgIGdldFZvbHVtZTogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tZWRpYS52b2x1bWU7XG4gICAgfSxcblxuICAgIHNldFZvbHVtZTogZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICB0aGlzLm1lZGlhLnZvbHVtZSA9IHZhbDtcbiAgICB9LFxuXG4gICAgZGVzdHJveTogZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnBhdXNlKCk7XG4gICAgICAgIHRoaXMudW5BbGwoKTtcbiAgICAgICAgdGhpcy5tZWRpYSAmJiB0aGlzLm1lZGlhLnBhcmVudE5vZGUgJiYgdGhpcy5tZWRpYS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMubWVkaWEpO1xuICAgICAgICB0aGlzLm1lZGlhID0gbnVsbDtcbiAgICB9XG59KTtcblxuLy9Gb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHlcbldhdmVTdXJmZXIuQXVkaW9FbGVtZW50ID0gV2F2ZVN1cmZlci5NZWRpYUVsZW1lbnQ7XG5cbid1c2Ugc3RyaWN0JztcblxuV2F2ZVN1cmZlci5EcmF3ZXIgPSB7XG4gICAgaW5pdDogZnVuY3Rpb24gKGNvbnRhaW5lciwgcGFyYW1zKSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xuICAgICAgICB0aGlzLnBhcmFtcyA9IHBhcmFtcztcblxuICAgICAgICB0aGlzLndpZHRoID0gMDtcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBwYXJhbXMuaGVpZ2h0ICogdGhpcy5wYXJhbXMucGl4ZWxSYXRpbztcblxuICAgICAgICB0aGlzLmxhc3RQb3MgPSAwO1xuXG4gICAgICAgIHRoaXMuaW5pdERyYXdlcihwYXJhbXMpO1xuICAgICAgICB0aGlzLmNyZWF0ZVdyYXBwZXIoKTtcbiAgICAgICAgdGhpcy5jcmVhdGVFbGVtZW50cygpO1xuICAgIH0sXG5cbiAgICBjcmVhdGVXcmFwcGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMud3JhcHBlciA9IHRoaXMuY29udGFpbmVyLmFwcGVuZENoaWxkKFxuICAgICAgICAgICAgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnd2F2ZScpXG4gICAgICAgICk7XG5cbiAgICAgICAgdGhpcy5zdHlsZSh0aGlzLndyYXBwZXIsIHtcbiAgICAgICAgICAgIGRpc3BsYXk6ICdibG9jaycsXG4gICAgICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJyxcbiAgICAgICAgICAgIHVzZXJTZWxlY3Q6ICdub25lJyxcbiAgICAgICAgICAgIHdlYmtpdFVzZXJTZWxlY3Q6ICdub25lJyxcbiAgICAgICAgICAgIGhlaWdodDogdGhpcy5wYXJhbXMuaGVpZ2h0ICsgJ3B4J1xuICAgICAgICB9KTtcblxuICAgICAgICBpZiAodGhpcy5wYXJhbXMuZmlsbFBhcmVudCB8fCB0aGlzLnBhcmFtcy5zY3JvbGxQYXJlbnQpIHtcbiAgICAgICAgICAgIHRoaXMuc3R5bGUodGhpcy53cmFwcGVyLCB7XG4gICAgICAgICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgICAgICAgICBvdmVyZmxvd1g6IHRoaXMucGFyYW1zLmhpZGVTY3JvbGxiYXIgPyAnaGlkZGVuJyA6ICdhdXRvJyxcbiAgICAgICAgICAgICAgICBvdmVyZmxvd1k6ICdoaWRkZW4nXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc2V0dXBXcmFwcGVyRXZlbnRzKCk7XG4gICAgfSxcblxuICAgIGhhbmRsZUV2ZW50OiBmdW5jdGlvbiAoZSwgbm9QcmV2ZW50KSB7XG4gICAgICAgICFub1ByZXZlbnQgJiYgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIHZhciBjbGllbnRYID0gZS50YXJnZXRUb3VjaGVzID8gZS50YXJnZXRUb3VjaGVzWzBdLmNsaWVudFggOiBlLmNsaWVudFg7XG4gICAgICAgIHZhciBiYm94ID0gdGhpcy53cmFwcGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG4gICAgICAgIHZhciBub21pbmFsV2lkdGggPSB0aGlzLndpZHRoO1xuICAgICAgICB2YXIgcGFyZW50V2lkdGggPSB0aGlzLmdldFdpZHRoKCk7XG5cbiAgICAgICAgdmFyIHByb2dyZXNzO1xuXG4gICAgICAgIGlmICghdGhpcy5wYXJhbXMuZmlsbFBhcmVudCAmJiBub21pbmFsV2lkdGggPCBwYXJlbnRXaWR0aCkge1xuICAgICAgICAgICAgcHJvZ3Jlc3MgPSAoKGNsaWVudFggLSBiYm94LmxlZnQpICogdGhpcy5wYXJhbXMucGl4ZWxSYXRpbyAvIG5vbWluYWxXaWR0aCkgfHwgMDtcblxuICAgICAgICAgICAgaWYgKHByb2dyZXNzID4gMSkge1xuICAgICAgICAgICAgICAgIHByb2dyZXNzID0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByb2dyZXNzID0gKChjbGllbnRYIC0gYmJveC5sZWZ0ICsgdGhpcy53cmFwcGVyLnNjcm9sbExlZnQpIC8gdGhpcy53cmFwcGVyLnNjcm9sbFdpZHRoKSB8fCAwO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHByb2dyZXNzO1xuICAgIH0sXG5cbiAgICBzZXR1cFdyYXBwZXJFdmVudHM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG15ID0gdGhpcztcblxuICAgICAgICB0aGlzLndyYXBwZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgdmFyIHNjcm9sbGJhckhlaWdodCA9IG15LndyYXBwZXIub2Zmc2V0SGVpZ2h0IC0gbXkud3JhcHBlci5jbGllbnRIZWlnaHQ7XG4gICAgICAgICAgICBpZiAoc2Nyb2xsYmFySGVpZ2h0ICE9IDApIHtcbiAgICAgICAgICAgICAgICAvLyBzY3JvbGxiYXIgaXMgdmlzaWJsZS4gIENoZWNrIGlmIGNsaWNrIHdhcyBvbiBpdFxuICAgICAgICAgICAgICAgIHZhciBiYm94ID0gbXkud3JhcHBlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgICAgICBpZiAoZS5jbGllbnRZID49IGJib3guYm90dG9tIC0gc2Nyb2xsYmFySGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGlnbm9yZSBtb3VzZWRvd24gYXMgaXQgd2FzIG9uIHRoZSBzY3JvbGxiYXJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKG15LnBhcmFtcy5pbnRlcmFjdCkge1xuICAgICAgICAgICAgICAgIG15LmZpcmVFdmVudCgnY2xpY2snLCBlLCBteS5oYW5kbGVFdmVudChlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMud3JhcHBlci5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgbXkuZmlyZUV2ZW50KCdzY3JvbGwnLCBlKTtcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIGRyYXdQZWFrczogZnVuY3Rpb24gKHBlYWtzLCBsZW5ndGgsIHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgdGhpcy5zZXRXaWR0aChsZW5ndGgpO1xuXG4gICAgICAgIHRoaXMucGFyYW1zLmJhcldpZHRoID9cbiAgICAgICAgICAgIHRoaXMuZHJhd0JhcnMocGVha3MsIDAsIHN0YXJ0LCBlbmQpIDpcbiAgICAgICAgICAgIHRoaXMuZHJhd1dhdmUocGVha3MsIDAsIHN0YXJ0LCBlbmQpO1xuICAgIH0sXG5cbiAgICBzdHlsZTogZnVuY3Rpb24gKGVsLCBzdHlsZXMpIHtcbiAgICAgICAgT2JqZWN0LmtleXMoc3R5bGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wKSB7XG4gICAgICAgICAgICBpZiAoZWwuc3R5bGVbcHJvcF0gIT09IHN0eWxlc1twcm9wXSkge1xuICAgICAgICAgICAgICAgIGVsLnN0eWxlW3Byb3BdID0gc3R5bGVzW3Byb3BdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGVsO1xuICAgIH0sXG5cbiAgICByZXNldFNjcm9sbDogZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy53cmFwcGVyICE9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLndyYXBwZXIuc2Nyb2xsTGVmdCA9IDA7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgcmVjZW50ZXI6IGZ1bmN0aW9uIChwZXJjZW50KSB7XG4gICAgICAgIHZhciBwb3NpdGlvbiA9IHRoaXMud3JhcHBlci5zY3JvbGxXaWR0aCAqIHBlcmNlbnQ7XG4gICAgICAgIHRoaXMucmVjZW50ZXJPblBvc2l0aW9uKHBvc2l0aW9uLCB0cnVlKTtcbiAgICB9LFxuXG4gICAgcmVjZW50ZXJPblBvc2l0aW9uOiBmdW5jdGlvbiAocG9zaXRpb24sIGltbWVkaWF0ZSkge1xuICAgICAgICB2YXIgc2Nyb2xsTGVmdCA9IHRoaXMud3JhcHBlci5zY3JvbGxMZWZ0O1xuICAgICAgICB2YXIgaGFsZiA9IH5+KHRoaXMud3JhcHBlci5jbGllbnRXaWR0aCAvIDIpO1xuICAgICAgICB2YXIgdGFyZ2V0ID0gcG9zaXRpb24gLSBoYWxmO1xuICAgICAgICB2YXIgb2Zmc2V0ID0gdGFyZ2V0IC0gc2Nyb2xsTGVmdDtcbiAgICAgICAgdmFyIG1heFNjcm9sbCA9IHRoaXMud3JhcHBlci5zY3JvbGxXaWR0aCAtIHRoaXMud3JhcHBlci5jbGllbnRXaWR0aDtcblxuICAgICAgICBpZiAobWF4U2Nyb2xsID09IDApIHtcbiAgICAgICAgICAgIC8vIG5vIG5lZWQgdG8gY29udGludWUgaWYgc2Nyb2xsYmFyIGlzIG5vdCB0aGVyZVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaWYgdGhlIGN1cnNvciBpcyBjdXJyZW50bHkgdmlzaWJsZS4uLlxuICAgICAgICBpZiAoIWltbWVkaWF0ZSAmJiAtaGFsZiA8PSBvZmZzZXQgJiYgb2Zmc2V0IDwgaGFsZikge1xuICAgICAgICAgICAgLy8gd2UnbGwgbGltaXQgdGhlIFwicmUtY2VudGVyXCIgcmF0ZS5cbiAgICAgICAgICAgIHZhciByYXRlID0gNTtcbiAgICAgICAgICAgIG9mZnNldCA9IE1hdGgubWF4KC1yYXRlLCBNYXRoLm1pbihyYXRlLCBvZmZzZXQpKTtcbiAgICAgICAgICAgIHRhcmdldCA9IHNjcm9sbExlZnQgKyBvZmZzZXQ7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBsaW1pdCB0YXJnZXQgdG8gdmFsaWQgcmFuZ2UgKDAgdG8gbWF4U2Nyb2xsKVxuICAgICAgICB0YXJnZXQgPSBNYXRoLm1heCgwLCBNYXRoLm1pbihtYXhTY3JvbGwsIHRhcmdldCkpO1xuICAgICAgICAvLyBubyB1c2UgYXR0ZW1wdGluZyB0byBzY3JvbGwgaWYgd2UncmUgbm90IG1vdmluZ1xuICAgICAgICBpZiAodGFyZ2V0ICE9IHNjcm9sbExlZnQpIHtcbiAgICAgICAgICAgIHRoaXMud3JhcHBlci5zY3JvbGxMZWZ0ID0gdGFyZ2V0O1xuICAgICAgICB9XG5cbiAgICB9LFxuXG4gICAgZ2V0U2Nyb2xsWDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRoaXMud3JhcHBlci5zY3JvbGxMZWZ0ICogdGhpcy5wYXJhbXMucGl4ZWxSYXRpbyk7XG4gICAgfSxcblxuICAgIGdldFdpZHRoOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRoaXMuY29udGFpbmVyLmNsaWVudFdpZHRoICogdGhpcy5wYXJhbXMucGl4ZWxSYXRpbyk7XG4gICAgfSxcblxuICAgIHNldFdpZHRoOiBmdW5jdGlvbiAod2lkdGgpIHtcbiAgICAgICAgaWYgKHRoaXMud2lkdGggPT0gd2lkdGgpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLndpZHRoID0gd2lkdGg7XG5cbiAgICAgICAgaWYgKHRoaXMucGFyYW1zLmZpbGxQYXJlbnQgfHwgdGhpcy5wYXJhbXMuc2Nyb2xsUGFyZW50KSB7XG4gICAgICAgICAgICB0aGlzLnN0eWxlKHRoaXMud3JhcHBlciwge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAnJ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnN0eWxlKHRoaXMud3JhcHBlciwge1xuICAgICAgICAgICAgICAgIHdpZHRoOiB+fih0aGlzLndpZHRoIC8gdGhpcy5wYXJhbXMucGl4ZWxSYXRpbykgKyAncHgnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudXBkYXRlU2l6ZSgpO1xuICAgIH0sXG5cbiAgICBzZXRIZWlnaHQ6IGZ1bmN0aW9uIChoZWlnaHQpIHtcbiAgICAgICAgaWYgKGhlaWdodCA9PSB0aGlzLmhlaWdodCkgeyByZXR1cm47IH1cbiAgICAgICAgdGhpcy5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgICAgIHRoaXMuc3R5bGUodGhpcy53cmFwcGVyLCB7XG4gICAgICAgICAgICBoZWlnaHQ6IH5+KHRoaXMuaGVpZ2h0IC8gdGhpcy5wYXJhbXMucGl4ZWxSYXRpbykgKyAncHgnXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnVwZGF0ZVNpemUoKTtcbiAgICB9LFxuXG4gICAgcHJvZ3Jlc3M6IGZ1bmN0aW9uIChwcm9ncmVzcykge1xuICAgICAgICB2YXIgbWluUHhEZWx0YSA9IDEgLyB0aGlzLnBhcmFtcy5waXhlbFJhdGlvO1xuICAgICAgICB2YXIgcG9zID0gTWF0aC5yb3VuZChwcm9ncmVzcyAqIHRoaXMud2lkdGgpICogbWluUHhEZWx0YTtcblxuICAgICAgICBpZiAocG9zIDwgdGhpcy5sYXN0UG9zIHx8IHBvcyAtIHRoaXMubGFzdFBvcyA+PSBtaW5QeERlbHRhKSB7XG4gICAgICAgICAgICB0aGlzLmxhc3RQb3MgPSBwb3M7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLnBhcmFtcy5zY3JvbGxQYXJlbnQgJiYgdGhpcy5wYXJhbXMuYXV0b0NlbnRlcikge1xuICAgICAgICAgICAgICAgIHZhciBuZXdQb3MgPSB+fih0aGlzLndyYXBwZXIuc2Nyb2xsV2lkdGggKiBwcm9ncmVzcyk7XG4gICAgICAgICAgICAgICAgdGhpcy5yZWNlbnRlck9uUG9zaXRpb24obmV3UG9zKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy51cGRhdGVQcm9ncmVzcyhwb3MpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIGRlc3Ryb3k6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy51bkFsbCgpO1xuICAgICAgICBpZiAodGhpcy53cmFwcGVyKSB7XG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5yZW1vdmVDaGlsZCh0aGlzLndyYXBwZXIpO1xuICAgICAgICAgICAgdGhpcy53cmFwcGVyID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICAvKiBSZW5kZXJlci1zcGVjaWZpYyBtZXRob2RzICovXG4gICAgaW5pdERyYXdlcjogZnVuY3Rpb24gKCkge30sXG5cbiAgICBjcmVhdGVFbGVtZW50czogZnVuY3Rpb24gKCkge30sXG5cbiAgICB1cGRhdGVTaXplOiBmdW5jdGlvbiAoKSB7fSxcblxuICAgIGRyYXdXYXZlOiBmdW5jdGlvbiAocGVha3MsIG1heCkge30sXG5cbiAgICBjbGVhcldhdmU6IGZ1bmN0aW9uICgpIHt9LFxuXG4gICAgdXBkYXRlUHJvZ3Jlc3M6IGZ1bmN0aW9uIChwb3NpdGlvbikge31cbn07XG5cbldhdmVTdXJmZXIudXRpbC5leHRlbmQoV2F2ZVN1cmZlci5EcmF3ZXIsIFdhdmVTdXJmZXIuT2JzZXJ2ZXIpO1xuXG4ndXNlIHN0cmljdCc7XG5cbldhdmVTdXJmZXIuRHJhd2VyLkNhbnZhcyA9IE9iamVjdC5jcmVhdGUoV2F2ZVN1cmZlci5EcmF3ZXIpO1xuXG5XYXZlU3VyZmVyLnV0aWwuZXh0ZW5kKFdhdmVTdXJmZXIuRHJhd2VyLkNhbnZhcywge1xuICAgIGNyZWF0ZUVsZW1lbnRzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB3YXZlQ2FudmFzID0gdGhpcy53cmFwcGVyLmFwcGVuZENoaWxkKFxuICAgICAgICAgICAgdGhpcy5zdHlsZShkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKSwge1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgICAgICAgIHpJbmRleDogMSxcbiAgICAgICAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgICAgICAgICBib3R0b206IDBcbiAgICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMud2F2ZUNjID0gd2F2ZUNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuXG4gICAgICAgIHRoaXMucHJvZ3Jlc3NXYXZlID0gdGhpcy53cmFwcGVyLmFwcGVuZENoaWxkKFxuICAgICAgICAgICAgdGhpcy5zdHlsZShkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd3YXZlJyksIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICAgICAgICB6SW5kZXg6IDIsXG4gICAgICAgICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgICAgICAgYm90dG9tOiAwLFxuICAgICAgICAgICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAgICAgICAgICAgICB3aWR0aDogJzAnLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdub25lJyxcbiAgICAgICAgICAgICAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICAgICAgICAgICAgICBib3JkZXJSaWdodFN0eWxlOiAnc29saWQnLFxuICAgICAgICAgICAgICAgIGJvcmRlclJpZ2h0V2lkdGg6IHRoaXMucGFyYW1zLmN1cnNvcldpZHRoICsgJ3B4JyxcbiAgICAgICAgICAgICAgICBib3JkZXJSaWdodENvbG9yOiB0aGlzLnBhcmFtcy5jdXJzb3JDb2xvclxuICAgICAgICAgICAgfSlcbiAgICAgICAgKTtcblxuICAgICAgICBpZiAodGhpcy5wYXJhbXMud2F2ZUNvbG9yICE9IHRoaXMucGFyYW1zLnByb2dyZXNzQ29sb3IpIHtcbiAgICAgICAgICAgIHZhciBwcm9ncmVzc0NhbnZhcyA9IHRoaXMucHJvZ3Jlc3NXYXZlLmFwcGVuZENoaWxkKFxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgdGhpcy5wcm9ncmVzc0NjID0gcHJvZ3Jlc3NDYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICB1cGRhdGVTaXplOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB3aWR0aCA9IE1hdGgucm91bmQodGhpcy53aWR0aCAvIHRoaXMucGFyYW1zLnBpeGVsUmF0aW8pO1xuXG4gICAgICAgIHRoaXMud2F2ZUNjLmNhbnZhcy53aWR0aCA9IHRoaXMud2lkdGg7XG4gICAgICAgIHRoaXMud2F2ZUNjLmNhbnZhcy5oZWlnaHQgPSB0aGlzLmhlaWdodDtcbiAgICAgICAgdGhpcy5zdHlsZSh0aGlzLndhdmVDYy5jYW52YXMsIHsgd2lkdGg6IHdpZHRoICsgJ3B4J30pO1xuXG4gICAgICAgIHRoaXMuc3R5bGUodGhpcy5wcm9ncmVzc1dhdmUsIHsgZGlzcGxheTogJ2Jsb2NrJ30pO1xuXG4gICAgICAgIGlmICh0aGlzLnByb2dyZXNzQ2MpIHtcbiAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3NDYy5jYW52YXMud2lkdGggPSB0aGlzLndpZHRoO1xuICAgICAgICAgICAgdGhpcy5wcm9ncmVzc0NjLmNhbnZhcy5oZWlnaHQgPSB0aGlzLmhlaWdodDtcbiAgICAgICAgICAgIHRoaXMuc3R5bGUodGhpcy5wcm9ncmVzc0NjLmNhbnZhcywgeyB3aWR0aDogd2lkdGggKyAncHgnfSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmNsZWFyV2F2ZSgpO1xuICAgIH0sXG5cbiAgICBjbGVhcldhdmU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy53YXZlQ2MuY2xlYXJSZWN0KDAsIDAsIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KTtcbiAgICAgICAgaWYgKHRoaXMucHJvZ3Jlc3NDYykge1xuICAgICAgICAgICAgdGhpcy5wcm9ncmVzc0NjLmNsZWFyUmVjdCgwLCAwLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgZHJhd0JhcnM6IGZ1bmN0aW9uIChwZWFrcywgY2hhbm5lbEluZGV4LCBzdGFydCwgZW5kKSB7XG4gICAgICAgIHZhciBteSA9IHRoaXM7XG4gICAgICAgIC8vIFNwbGl0IGNoYW5uZWxzXG4gICAgICAgIGlmIChwZWFrc1swXSBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgICAgICAgICB2YXIgY2hhbm5lbHMgPSBwZWFrcztcbiAgICAgICAgICAgIGlmICh0aGlzLnBhcmFtcy5zcGxpdENoYW5uZWxzKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRIZWlnaHQoY2hhbm5lbHMubGVuZ3RoICogdGhpcy5wYXJhbXMuaGVpZ2h0ICogdGhpcy5wYXJhbXMucGl4ZWxSYXRpbyk7XG4gICAgICAgICAgICAgICAgY2hhbm5lbHMuZm9yRWFjaChmdW5jdGlvbihjaGFubmVsUGVha3MsIGkpIHtcbiAgICAgICAgICAgICAgICAgICAgbXkuZHJhd0JhcnMoY2hhbm5lbFBlYWtzLCBpLCBzdGFydCwgZW5kKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHBlYWtzID0gY2hhbm5lbHNbMF07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBCYXIgd2F2ZSBkcmF3cyB0aGUgYm90dG9tIG9ubHkgYXMgYSByZWZsZWN0aW9uIG9mIHRoZSB0b3AsXG4gICAgICAgIC8vIHNvIHdlIGRvbid0IG5lZWQgbmVnYXRpdmUgdmFsdWVzXG4gICAgICAgIHZhciBoYXNNaW5WYWxzID0gW10uc29tZS5jYWxsKHBlYWtzLCBmdW5jdGlvbiAodmFsKSB7IHJldHVybiB2YWwgPCAwOyB9KTtcbiAgICAgICAgLy8gU2tpcCBldmVyeSBvdGhlciB2YWx1ZSBpZiB0aGVyZSBhcmUgbmVnYXRpdmVzLlxuICAgICAgICB2YXIgcGVha0luZGV4U2NhbGUgPSAxO1xuICAgICAgICBpZiAoaGFzTWluVmFscykge1xuICAgICAgICAgICAgcGVha0luZGV4U2NhbGUgPSAyO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQSBoYWxmLXBpeGVsIG9mZnNldCBtYWtlcyBsaW5lcyBjcmlzcFxuICAgICAgICB2YXIgJCA9IDAuNSAvIHRoaXMucGFyYW1zLnBpeGVsUmF0aW87XG4gICAgICAgIHZhciB3aWR0aCA9IHRoaXMud2lkdGg7XG4gICAgICAgIHZhciBoZWlnaHQgPSB0aGlzLnBhcmFtcy5oZWlnaHQgKiB0aGlzLnBhcmFtcy5waXhlbFJhdGlvO1xuICAgICAgICB2YXIgb2Zmc2V0WSA9IGhlaWdodCAqIGNoYW5uZWxJbmRleCB8fCAwO1xuICAgICAgICB2YXIgaGFsZkggPSBoZWlnaHQgLyAyO1xuICAgICAgICB2YXIgbGVuZ3RoID0gcGVha3MubGVuZ3RoIC8gcGVha0luZGV4U2NhbGU7XG4gICAgICAgIHZhciBiYXIgPSB0aGlzLnBhcmFtcy5iYXJXaWR0aCAqIHRoaXMucGFyYW1zLnBpeGVsUmF0aW87XG4gICAgICAgIHZhciBnYXAgPSBNYXRoLm1heCh0aGlzLnBhcmFtcy5waXhlbFJhdGlvLCB+fihiYXIgLyAyKSk7XG4gICAgICAgIHZhciBzdGVwID0gYmFyICsgZ2FwO1xuXG4gICAgICAgIHZhciBhYnNtYXggPSAxIC8gdGhpcy5wYXJhbXMuYmFySGVpZ2h0O1xuICAgICAgICBpZiAodGhpcy5wYXJhbXMubm9ybWFsaXplKSB7XG4gICAgICAgICAgICB2YXIgbWF4ID0gV2F2ZVN1cmZlci51dGlsLm1heChwZWFrcyk7XG4gICAgICAgICAgICB2YXIgbWluID0gV2F2ZVN1cmZlci51dGlsLm1pbihwZWFrcyk7XG4gICAgICAgICAgICBhYnNtYXggPSAtbWluID4gbWF4ID8gLW1pbiA6IG1heDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBzY2FsZSA9IGxlbmd0aCAvIHdpZHRoO1xuXG4gICAgICAgIHRoaXMud2F2ZUNjLmZpbGxTdHlsZSA9IHRoaXMucGFyYW1zLndhdmVDb2xvcjtcbiAgICAgICAgaWYgKHRoaXMucHJvZ3Jlc3NDYykge1xuICAgICAgICAgICAgdGhpcy5wcm9ncmVzc0NjLmZpbGxTdHlsZSA9IHRoaXMucGFyYW1zLnByb2dyZXNzQ29sb3I7XG4gICAgICAgIH1cblxuICAgICAgICBbIHRoaXMud2F2ZUNjLCB0aGlzLnByb2dyZXNzQ2MgXS5mb3JFYWNoKGZ1bmN0aW9uIChjYykge1xuICAgICAgICAgICAgaWYgKCFjYykgeyByZXR1cm47IH1cblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IChzdGFydCAvIHNjYWxlKTsgaSA8IChlbmQgLyBzY2FsZSk7IGkgKz0gc3RlcCkge1xuICAgICAgICAgICAgICAgIHZhciBwZWFrID0gcGVha3NbTWF0aC5mbG9vcihpICogc2NhbGUgKiBwZWFrSW5kZXhTY2FsZSldIHx8IDA7XG4gICAgICAgICAgICAgICAgdmFyIGggPSBNYXRoLnJvdW5kKHBlYWsgLyBhYnNtYXggKiBoYWxmSCk7XG4gICAgICAgICAgICAgICAgY2MuZmlsbFJlY3QoaSArICQsIGhhbGZIIC0gaCArIG9mZnNldFksIGJhciArICQsIGggKiAyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgdGhpcyk7XG4gICAgfSxcblxuICAgIGRyYXdXYXZlOiBmdW5jdGlvbiAocGVha3MsIGNoYW5uZWxJbmRleCwgc3RhcnQsIGVuZCkge1xuICAgICAgICB2YXIgbXkgPSB0aGlzO1xuICAgICAgICAvLyBTcGxpdCBjaGFubmVsc1xuICAgICAgICBpZiAocGVha3NbMF0gaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICAgICAgdmFyIGNoYW5uZWxzID0gcGVha3M7XG4gICAgICAgICAgICBpZiAodGhpcy5wYXJhbXMuc3BsaXRDaGFubmVscykge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0SGVpZ2h0KGNoYW5uZWxzLmxlbmd0aCAqIHRoaXMucGFyYW1zLmhlaWdodCAqIHRoaXMucGFyYW1zLnBpeGVsUmF0aW8pO1xuICAgICAgICAgICAgICAgIGNoYW5uZWxzLmZvckVhY2goZnVuY3Rpb24oY2hhbm5lbFBlYWtzLCBpKSB7XG4gICAgICAgICAgICAgICAgICAgIG15LmRyYXdXYXZlKGNoYW5uZWxQZWFrcywgaSwgc3RhcnQsIGVuZCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBwZWFrcyA9IGNoYW5uZWxzWzBdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gU3VwcG9ydCBhcnJheXMgd2l0aG91dCBuZWdhdGl2ZSBwZWFrc1xuICAgICAgICB2YXIgaGFzTWluVmFsdWVzID0gW10uc29tZS5jYWxsKHBlYWtzLCBmdW5jdGlvbiAodmFsKSB7IHJldHVybiB2YWwgPCAwOyB9KTtcbiAgICAgICAgaWYgKCFoYXNNaW5WYWx1ZXMpIHtcbiAgICAgICAgICAgIHZhciByZWZsZWN0ZWRQZWFrcyA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHBlYWtzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgcmVmbGVjdGVkUGVha3NbMiAqIGldID0gcGVha3NbaV07XG4gICAgICAgICAgICAgICAgcmVmbGVjdGVkUGVha3NbMiAqIGkgKyAxXSA9IC1wZWFrc1tpXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBlYWtzID0gcmVmbGVjdGVkUGVha3M7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBBIGhhbGYtcGl4ZWwgb2Zmc2V0IG1ha2VzIGxpbmVzIGNyaXNwXG4gICAgICAgIHZhciAkID0gMC41IC8gdGhpcy5wYXJhbXMucGl4ZWxSYXRpbztcbiAgICAgICAgdmFyIGhlaWdodCA9IHRoaXMucGFyYW1zLmhlaWdodCAqIHRoaXMucGFyYW1zLnBpeGVsUmF0aW87XG4gICAgICAgIHZhciBvZmZzZXRZID0gaGVpZ2h0ICogY2hhbm5lbEluZGV4IHx8IDA7XG4gICAgICAgIHZhciBoYWxmSCA9IGhlaWdodCAvIDI7XG4gICAgICAgIHZhciBsZW5ndGggPSB+fihwZWFrcy5sZW5ndGggLyAyKTtcblxuICAgICAgICB2YXIgc2NhbGUgPSAxO1xuICAgICAgICBpZiAodGhpcy5wYXJhbXMuZmlsbFBhcmVudCAmJiB0aGlzLndpZHRoICE9IGxlbmd0aCkge1xuICAgICAgICAgICAgc2NhbGUgPSB0aGlzLndpZHRoIC8gbGVuZ3RoO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGFic21heCA9IDEgLyB0aGlzLnBhcmFtcy5iYXJIZWlnaHQ7XG4gICAgICAgIGlmICh0aGlzLnBhcmFtcy5ub3JtYWxpemUpIHtcbiAgICAgICAgICAgIHZhciBtYXggPSBXYXZlU3VyZmVyLnV0aWwubWF4KHBlYWtzKTtcbiAgICAgICAgICAgIHZhciBtaW4gPSBXYXZlU3VyZmVyLnV0aWwubWluKHBlYWtzKTtcbiAgICAgICAgICAgIGFic21heCA9IC1taW4gPiBtYXggPyAtbWluIDogbWF4O1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy53YXZlQ2MuZmlsbFN0eWxlID0gdGhpcy5wYXJhbXMud2F2ZUNvbG9yO1xuICAgICAgICBpZiAodGhpcy5wcm9ncmVzc0NjKSB7XG4gICAgICAgICAgICB0aGlzLnByb2dyZXNzQ2MuZmlsbFN0eWxlID0gdGhpcy5wYXJhbXMucHJvZ3Jlc3NDb2xvcjtcbiAgICAgICAgfVxuXG4gICAgICAgIFsgdGhpcy53YXZlQ2MsIHRoaXMucHJvZ3Jlc3NDYyBdLmZvckVhY2goZnVuY3Rpb24gKGNjKSB7XG4gICAgICAgICAgICBpZiAoIWNjKSB7IHJldHVybjsgfVxuXG4gICAgICAgICAgICBjYy5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgIGNjLm1vdmVUbyhzdGFydCAqIHNjYWxlICsgJCwgaGFsZkggKyBvZmZzZXRZKTtcblxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgaCA9IE1hdGgucm91bmQocGVha3NbMiAqIGldIC8gYWJzbWF4ICogaGFsZkgpO1xuICAgICAgICAgICAgICAgIGNjLmxpbmVUbyhpICogc2NhbGUgKyAkLCBoYWxmSCAtIGggKyBvZmZzZXRZKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gRHJhdyB0aGUgYm90dG9tIGVkZ2UgZ29pbmcgYmFja3dhcmRzLCB0byBtYWtlIGEgc2luZ2xlXG4gICAgICAgICAgICAvLyBjbG9zZWQgaHVsbCB0byBmaWxsLlxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IGVuZCAtIDE7IGkgPj0gc3RhcnQ7IGktLSkge1xuICAgICAgICAgICAgICAgIHZhciBoID0gTWF0aC5yb3VuZChwZWFrc1syICogaSArIDFdIC8gYWJzbWF4ICogaGFsZkgpO1xuICAgICAgICAgICAgICAgIGNjLmxpbmVUbyhpICogc2NhbGUgKyAkLCBoYWxmSCAtIGggKyBvZmZzZXRZKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY2MuY2xvc2VQYXRoKCk7XG4gICAgICAgICAgICBjYy5maWxsKCk7XG5cbiAgICAgICAgICAgIC8vIEFsd2F5cyBkcmF3IGEgbWVkaWFuIGxpbmVcbiAgICAgICAgICAgIGNjLmZpbGxSZWN0KDAsIGhhbGZIICsgb2Zmc2V0WSAtICQsIHRoaXMud2lkdGgsICQpO1xuICAgICAgICB9LCB0aGlzKTtcbiAgICB9LFxuXG4gICAgdXBkYXRlUHJvZ3Jlc3M6IGZ1bmN0aW9uIChwb3MpIHtcbiAgICAgICAgdGhpcy5zdHlsZSh0aGlzLnByb2dyZXNzV2F2ZSwgeyB3aWR0aDogcG9zICsgJ3B4JyB9KTtcbiAgICB9LFxuXG4gICAgZ2V0SW1hZ2U6IGZ1bmN0aW9uKHR5cGUsIHF1YWxpdHkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMud2F2ZUNjLmNhbnZhcy50b0RhdGFVUkwodHlwZSwgcXVhbGl0eSk7XG4gICAgfVxufSk7XG5cbid1c2Ugc3RyaWN0JztcblxuV2F2ZVN1cmZlci5EcmF3ZXIuTXVsdGlDYW52YXMgPSBPYmplY3QuY3JlYXRlKFdhdmVTdXJmZXIuRHJhd2VyKTtcblxuV2F2ZVN1cmZlci51dGlsLmV4dGVuZChXYXZlU3VyZmVyLkRyYXdlci5NdWx0aUNhbnZhcywge1xuXG4gICAgaW5pdERyYXdlcjogZnVuY3Rpb24gKHBhcmFtcykge1xuICAgICAgICB0aGlzLm1heENhbnZhc1dpZHRoID0gcGFyYW1zLm1heENhbnZhc1dpZHRoICE9IG51bGwgPyBwYXJhbXMubWF4Q2FudmFzV2lkdGggOiA0MDAwO1xuICAgICAgICB0aGlzLm1heENhbnZhc0VsZW1lbnRXaWR0aCA9IE1hdGgucm91bmQodGhpcy5tYXhDYW52YXNXaWR0aCAvIHRoaXMucGFyYW1zLnBpeGVsUmF0aW8pO1xuXG4gICAgICAgIGlmICh0aGlzLm1heENhbnZhc1dpZHRoIDw9IDEpIHtcbiAgICAgICAgICAgIHRocm93ICdtYXhDYW52YXNXaWR0aCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiAxLic7XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5tYXhDYW52YXNXaWR0aCAlIDIgPT0gMSkge1xuICAgICAgICAgICAgdGhyb3cgJ21heENhbnZhc1dpZHRoIG11c3QgYmUgYW4gZXZlbiBudW1iZXIuJztcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuaGFzUHJvZ3Jlc3NDYW52YXMgPSB0aGlzLnBhcmFtcy53YXZlQ29sb3IgIT0gdGhpcy5wYXJhbXMucHJvZ3Jlc3NDb2xvcjtcbiAgICAgICAgdGhpcy5oYWxmUGl4ZWwgPSAwLjUgLyB0aGlzLnBhcmFtcy5waXhlbFJhdGlvO1xuICAgICAgICB0aGlzLmNhbnZhc2VzID0gW107XG4gICAgfSxcblxuICAgIGNyZWF0ZUVsZW1lbnRzOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMucHJvZ3Jlc3NXYXZlID0gdGhpcy53cmFwcGVyLmFwcGVuZENoaWxkKFxuICAgICAgICAgICAgdGhpcy5zdHlsZShkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd3YXZlJyksIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICAgICAgICB6SW5kZXg6IDIsXG4gICAgICAgICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICAgICAgICB0b3A6IDAsXG4gICAgICAgICAgICAgICAgYm90dG9tOiAwLFxuICAgICAgICAgICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAgICAgICAgICAgICB3aWR0aDogJzAnLFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6ICdub25lJyxcbiAgICAgICAgICAgICAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICAgICAgICAgICAgICBib3JkZXJSaWdodFN0eWxlOiAnc29saWQnLFxuICAgICAgICAgICAgICAgIGJvcmRlclJpZ2h0V2lkdGg6IHRoaXMucGFyYW1zLmN1cnNvcldpZHRoICsgJ3B4JyxcbiAgICAgICAgICAgICAgICBib3JkZXJSaWdodENvbG9yOiB0aGlzLnBhcmFtcy5jdXJzb3JDb2xvclxuICAgICAgICAgICAgfSlcbiAgICAgICAgKTtcblxuICAgICAgICB0aGlzLmFkZENhbnZhcygpO1xuICAgIH0sXG5cbiAgICB1cGRhdGVTaXplOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0b3RhbFdpZHRoID0gTWF0aC5yb3VuZCh0aGlzLndpZHRoIC8gdGhpcy5wYXJhbXMucGl4ZWxSYXRpbyksXG4gICAgICAgICAgICByZXF1aXJlZENhbnZhc2VzID0gTWF0aC5jZWlsKHRvdGFsV2lkdGggLyB0aGlzLm1heENhbnZhc0VsZW1lbnRXaWR0aCk7XG5cbiAgICAgICAgd2hpbGUgKHRoaXMuY2FudmFzZXMubGVuZ3RoIDwgcmVxdWlyZWRDYW52YXNlcykge1xuICAgICAgICAgICAgdGhpcy5hZGRDYW52YXMoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHdoaWxlICh0aGlzLmNhbnZhc2VzLmxlbmd0aCA+IHJlcXVpcmVkQ2FudmFzZXMpIHtcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlQ2FudmFzKCk7XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBpIGluIHRoaXMuY2FudmFzZXMpIHtcbiAgICAgICAgICAgIC8vIEFkZCBzb21lIG92ZXJsYXAgdG8gcHJldmVudCB2ZXJ0aWNhbCB3aGl0ZSBzdHJpcGVzLCBrZWVwIHRoZSB3aWR0aCBldmVuIGZvciBzaW1wbGljaXR5LlxuICAgICAgICAgICAgdmFyIGNhbnZhc1dpZHRoID0gdGhpcy5tYXhDYW52YXNXaWR0aCArIDIgKiBNYXRoLmNlaWwodGhpcy5wYXJhbXMucGl4ZWxSYXRpbyAvIDIpO1xuXG4gICAgICAgICAgICBpZiAoaSA9PSB0aGlzLmNhbnZhc2VzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICAgICAgICBjYW52YXNXaWR0aCA9IHRoaXMud2lkdGggLSAodGhpcy5tYXhDYW52YXNXaWR0aCAqICh0aGlzLmNhbnZhc2VzLmxlbmd0aCAtIDEpKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy51cGRhdGVEaW1lbnNpb25zKHRoaXMuY2FudmFzZXNbaV0sIGNhbnZhc1dpZHRoLCB0aGlzLmhlaWdodCk7XG4gICAgICAgICAgICB0aGlzLmNsZWFyV2F2ZUZvckVudHJ5KHRoaXMuY2FudmFzZXNbaV0pO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIGFkZENhbnZhczogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZW50cnkgPSB7fSxcbiAgICAgICAgICAgIGxlZnRPZmZzZXQgPSB0aGlzLm1heENhbnZhc0VsZW1lbnRXaWR0aCAqIHRoaXMuY2FudmFzZXMubGVuZ3RoO1xuXG4gICAgICAgIGVudHJ5LndhdmUgPSB0aGlzLndyYXBwZXIuYXBwZW5kQ2hpbGQoXG4gICAgICAgICAgICB0aGlzLnN0eWxlKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpLCB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgICAgICAgICAgekluZGV4OiAxLFxuICAgICAgICAgICAgICAgIGxlZnQ6IGxlZnRPZmZzZXQgKyAncHgnLFxuICAgICAgICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgICAgICAgICBib3R0b206IDBcbiAgICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgICAgIGVudHJ5LndhdmVDdHggPSBlbnRyeS53YXZlLmdldENvbnRleHQoJzJkJyk7XG5cbiAgICAgICAgaWYgKHRoaXMuaGFzUHJvZ3Jlc3NDYW52YXMpIHtcbiAgICAgICAgICAgIGVudHJ5LnByb2dyZXNzID0gdGhpcy5wcm9ncmVzc1dhdmUuYXBwZW5kQ2hpbGQoXG4gICAgICAgICAgICAgICAgdGhpcy5zdHlsZShkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKSwge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogbGVmdE9mZnNldCArICdweCcsXG4gICAgICAgICAgICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAwXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBlbnRyeS5wcm9ncmVzc0N0eCA9IGVudHJ5LnByb2dyZXNzLmdldENvbnRleHQoJzJkJyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmNhbnZhc2VzLnB1c2goZW50cnkpO1xuICAgIH0sXG5cbiAgICByZW1vdmVDYW52YXM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGxhc3RFbnRyeSA9IHRoaXMuY2FudmFzZXMucG9wKCk7XG4gICAgICAgIGxhc3RFbnRyeS53YXZlLnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQobGFzdEVudHJ5LndhdmUpO1xuICAgICAgICBpZiAodGhpcy5oYXNQcm9ncmVzc0NhbnZhcykge1xuICAgICAgICAgICAgbGFzdEVudHJ5LnByb2dyZXNzLnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQobGFzdEVudHJ5LnByb2dyZXNzKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICB1cGRhdGVEaW1lbnNpb25zOiBmdW5jdGlvbiAoZW50cnksIHdpZHRoLCBoZWlnaHQpIHtcbiAgICAgICAgdmFyIGVsZW1lbnRXaWR0aCA9IE1hdGgucm91bmQod2lkdGggLyB0aGlzLnBhcmFtcy5waXhlbFJhdGlvKSxcbiAgICAgICAgICAgIHRvdGFsV2lkdGggPSBNYXRoLnJvdW5kKHRoaXMud2lkdGggLyB0aGlzLnBhcmFtcy5waXhlbFJhdGlvKTtcblxuICAgICAgICAvLyBXaGVyZSB0aGUgY2FudmFzIHN0YXJ0cyBhbmQgZW5kcyBpbiB0aGUgd2F2ZWZvcm0sIHJlcHJlc2VudGVkIGFzIGEgZGVjaW1hbCBiZXR3ZWVuIDAgYW5kIDEuXG4gICAgICAgIGVudHJ5LnN0YXJ0ID0gKGVudHJ5LndhdmVDdHguY2FudmFzLm9mZnNldExlZnQgLyB0b3RhbFdpZHRoKSB8fCAwO1xuICAgICAgICBlbnRyeS5lbmQgPSBlbnRyeS5zdGFydCArIGVsZW1lbnRXaWR0aCAvIHRvdGFsV2lkdGg7XG5cbiAgICAgICAgZW50cnkud2F2ZUN0eC5jYW52YXMud2lkdGggPSB3aWR0aDtcbiAgICAgICAgZW50cnkud2F2ZUN0eC5jYW52YXMuaGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgICB0aGlzLnN0eWxlKGVudHJ5LndhdmVDdHguY2FudmFzLCB7IHdpZHRoOiBlbGVtZW50V2lkdGggKyAncHgnfSk7XG5cbiAgICAgICAgdGhpcy5zdHlsZSh0aGlzLnByb2dyZXNzV2F2ZSwgeyBkaXNwbGF5OiAnYmxvY2snfSk7XG5cbiAgICAgICAgaWYgKHRoaXMuaGFzUHJvZ3Jlc3NDYW52YXMpIHtcbiAgICAgICAgICAgIGVudHJ5LnByb2dyZXNzQ3R4LmNhbnZhcy53aWR0aCA9IHdpZHRoO1xuICAgICAgICAgICAgZW50cnkucHJvZ3Jlc3NDdHguY2FudmFzLmhlaWdodCA9IGhlaWdodDtcbiAgICAgICAgICAgIHRoaXMuc3R5bGUoZW50cnkucHJvZ3Jlc3NDdHguY2FudmFzLCB7IHdpZHRoOiBlbGVtZW50V2lkdGggKyAncHgnfSk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgY2xlYXJXYXZlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZvciAodmFyIGkgaW4gdGhpcy5jYW52YXNlcykge1xuICAgICAgICAgICAgdGhpcy5jbGVhcldhdmVGb3JFbnRyeSh0aGlzLmNhbnZhc2VzW2ldKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBjbGVhcldhdmVGb3JFbnRyeTogZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgICAgIGVudHJ5LndhdmVDdHguY2xlYXJSZWN0KDAsIDAsIGVudHJ5LndhdmVDdHguY2FudmFzLndpZHRoLCBlbnRyeS53YXZlQ3R4LmNhbnZhcy5oZWlnaHQpO1xuICAgICAgICBpZiAodGhpcy5oYXNQcm9ncmVzc0NhbnZhcykge1xuICAgICAgICAgICAgZW50cnkucHJvZ3Jlc3NDdHguY2xlYXJSZWN0KDAsIDAsIGVudHJ5LnByb2dyZXNzQ3R4LmNhbnZhcy53aWR0aCwgZW50cnkucHJvZ3Jlc3NDdHguY2FudmFzLmhlaWdodCk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgZHJhd0JhcnM6IGZ1bmN0aW9uIChwZWFrcywgY2hhbm5lbEluZGV4LCBzdGFydCwgZW5kKSB7XG4gICAgICAgIHZhciBteSA9IHRoaXM7XG4gICAgICAgIC8vIFNwbGl0IGNoYW5uZWxzXG4gICAgICAgIGlmIChwZWFrc1swXSBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgICAgICAgICB2YXIgY2hhbm5lbHMgPSBwZWFrcztcbiAgICAgICAgICAgIGlmICh0aGlzLnBhcmFtcy5zcGxpdENoYW5uZWxzKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRIZWlnaHQoY2hhbm5lbHMubGVuZ3RoICogdGhpcy5wYXJhbXMuaGVpZ2h0ICogdGhpcy5wYXJhbXMucGl4ZWxSYXRpbyk7XG4gICAgICAgICAgICAgICAgY2hhbm5lbHMuZm9yRWFjaChmdW5jdGlvbihjaGFubmVsUGVha3MsIGkpIHtcbiAgICAgICAgICAgICAgICAgICAgbXkuZHJhd0JhcnMoY2hhbm5lbFBlYWtzLCBpLCBzdGFydCwgZW5kKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHBlYWtzID0gY2hhbm5lbHNbMF07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBCYXIgd2F2ZSBkcmF3cyB0aGUgYm90dG9tIG9ubHkgYXMgYSByZWZsZWN0aW9uIG9mIHRoZSB0b3AsXG4gICAgICAgIC8vIHNvIHdlIGRvbid0IG5lZWQgbmVnYXRpdmUgdmFsdWVzXG4gICAgICAgIHZhciBoYXNNaW5WYWxzID0gW10uc29tZS5jYWxsKHBlYWtzLCBmdW5jdGlvbiAodmFsKSB7IHJldHVybiB2YWwgPCAwOyB9KTtcbiAgICAgICAgLy8gU2tpcCBldmVyeSBvdGhlciB2YWx1ZSBpZiB0aGVyZSBhcmUgbmVnYXRpdmVzLlxuICAgICAgICB2YXIgcGVha0luZGV4U2NhbGUgPSAxO1xuICAgICAgICBpZiAoaGFzTWluVmFscykge1xuICAgICAgICAgICAgcGVha0luZGV4U2NhbGUgPSAyO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQSBoYWxmLXBpeGVsIG9mZnNldCBtYWtlcyBsaW5lcyBjcmlzcFxuICAgICAgICB2YXIgd2lkdGggPSB0aGlzLndpZHRoO1xuICAgICAgICB2YXIgaGVpZ2h0ID0gdGhpcy5wYXJhbXMuaGVpZ2h0ICogdGhpcy5wYXJhbXMucGl4ZWxSYXRpbztcbiAgICAgICAgdmFyIG9mZnNldFkgPSBoZWlnaHQgKiBjaGFubmVsSW5kZXggfHwgMDtcbiAgICAgICAgdmFyIGhhbGZIID0gaGVpZ2h0IC8gMjtcbiAgICAgICAgdmFyIGxlbmd0aCA9IHBlYWtzLmxlbmd0aCAvIHBlYWtJbmRleFNjYWxlO1xuICAgICAgICB2YXIgYmFyID0gdGhpcy5wYXJhbXMuYmFyV2lkdGggKiB0aGlzLnBhcmFtcy5waXhlbFJhdGlvO1xuICAgICAgICB2YXIgZ2FwID0gTWF0aC5tYXgodGhpcy5wYXJhbXMucGl4ZWxSYXRpbywgfn4oYmFyIC8gMikpO1xuICAgICAgICB2YXIgc3RlcCA9IGJhciArIGdhcDtcblxuICAgICAgICB2YXIgYWJzbWF4ID0gMSAvIHRoaXMucGFyYW1zLmJhckhlaWdodDtcbiAgICAgICAgaWYgKHRoaXMucGFyYW1zLm5vcm1hbGl6ZSkge1xuICAgICAgICAgICAgdmFyIG1heCA9IFdhdmVTdXJmZXIudXRpbC5tYXgocGVha3MpO1xuICAgICAgICAgICAgdmFyIG1pbiA9IFdhdmVTdXJmZXIudXRpbC5taW4ocGVha3MpO1xuICAgICAgICAgICAgYWJzbWF4ID0gLW1pbiA+IG1heCA/IC1taW4gOiBtYXg7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgc2NhbGUgPSBsZW5ndGggLyB3aWR0aDtcblxuICAgICAgICBmb3IgKHZhciBpID0gKHN0YXJ0IC8gc2NhbGUpOyBpIDwgKGVuZCAvIHNjYWxlKTsgaSArPSBzdGVwKSB7XG4gICAgICAgICAgICB2YXIgcGVhayA9IHBlYWtzW01hdGguZmxvb3IoaSAqIHNjYWxlICogcGVha0luZGV4U2NhbGUpXSB8fCAwO1xuICAgICAgICAgICAgdmFyIGggPSBNYXRoLnJvdW5kKHBlYWsgLyBhYnNtYXggKiBoYWxmSCk7XG4gICAgICAgICAgICB0aGlzLmZpbGxSZWN0KGkgKyB0aGlzLmhhbGZQaXhlbCwgaGFsZkggLSBoICsgb2Zmc2V0WSwgYmFyICsgdGhpcy5oYWxmUGl4ZWwsIGggKiAyKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBkcmF3V2F2ZTogZnVuY3Rpb24gKHBlYWtzLCBjaGFubmVsSW5kZXgsIHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgdmFyIG15ID0gdGhpcztcbiAgICAgICAgLy8gU3BsaXQgY2hhbm5lbHNcbiAgICAgICAgaWYgKHBlYWtzWzBdIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgICAgICAgIHZhciBjaGFubmVscyA9IHBlYWtzO1xuICAgICAgICAgICAgaWYgKHRoaXMucGFyYW1zLnNwbGl0Q2hhbm5lbHMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldEhlaWdodChjaGFubmVscy5sZW5ndGggKiB0aGlzLnBhcmFtcy5oZWlnaHQgKiB0aGlzLnBhcmFtcy5waXhlbFJhdGlvKTtcbiAgICAgICAgICAgICAgICBjaGFubmVscy5mb3JFYWNoKGZ1bmN0aW9uKGNoYW5uZWxQZWFrcywgaSkge1xuICAgICAgICAgICAgICAgICAgICBteS5kcmF3V2F2ZShjaGFubmVsUGVha3MsIGksIHN0YXJ0LCBlbmQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcGVha3MgPSBjaGFubmVsc1swXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFN1cHBvcnQgYXJyYXlzIHdpdGhvdXQgbmVnYXRpdmUgcGVha3NcbiAgICAgICAgdmFyIGhhc01pblZhbHVlcyA9IFtdLnNvbWUuY2FsbChwZWFrcywgZnVuY3Rpb24gKHZhbCkgeyByZXR1cm4gdmFsIDwgMDsgfSk7XG4gICAgICAgIGlmICghaGFzTWluVmFsdWVzKSB7XG4gICAgICAgICAgICB2YXIgcmVmbGVjdGVkUGVha3MgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBwZWFrcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgICAgIHJlZmxlY3RlZFBlYWtzWzIgKiBpXSA9IHBlYWtzW2ldO1xuICAgICAgICAgICAgICAgIHJlZmxlY3RlZFBlYWtzWzIgKiBpICsgMV0gPSAtcGVha3NbaV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwZWFrcyA9IHJlZmxlY3RlZFBlYWtzO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQSBoYWxmLXBpeGVsIG9mZnNldCBtYWtlcyBsaW5lcyBjcmlzcFxuICAgICAgICB2YXIgaGVpZ2h0ID0gdGhpcy5wYXJhbXMuaGVpZ2h0ICogdGhpcy5wYXJhbXMucGl4ZWxSYXRpbztcbiAgICAgICAgdmFyIG9mZnNldFkgPSBoZWlnaHQgKiBjaGFubmVsSW5kZXggfHwgMDtcbiAgICAgICAgdmFyIGhhbGZIID0gaGVpZ2h0IC8gMjtcblxuICAgICAgICB2YXIgYWJzbWF4ID0gMSAvIHRoaXMucGFyYW1zLmJhckhlaWdodDtcbiAgICAgICAgaWYgKHRoaXMucGFyYW1zLm5vcm1hbGl6ZSkge1xuICAgICAgICAgICAgdmFyIG1heCA9IFdhdmVTdXJmZXIudXRpbC5tYXgocGVha3MpO1xuICAgICAgICAgICAgdmFyIG1pbiA9IFdhdmVTdXJmZXIudXRpbC5taW4ocGVha3MpO1xuICAgICAgICAgICAgYWJzbWF4ID0gLW1pbiA+IG1heCA/IC1taW4gOiBtYXg7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmRyYXdMaW5lKHBlYWtzLCBhYnNtYXgsIGhhbGZILCBvZmZzZXRZLCBzdGFydCwgZW5kKTtcblxuICAgICAgICAvLyBBbHdheXMgZHJhdyBhIG1lZGlhbiBsaW5lXG4gICAgICAgIHRoaXMuZmlsbFJlY3QoMCwgaGFsZkggKyBvZmZzZXRZIC0gdGhpcy5oYWxmUGl4ZWwsIHRoaXMud2lkdGgsIHRoaXMuaGFsZlBpeGVsKTtcbiAgICB9LFxuXG4gICAgZHJhd0xpbmU6IGZ1bmN0aW9uIChwZWFrcywgYWJzbWF4LCBoYWxmSCwgb2Zmc2V0WSwgc3RhcnQsIGVuZCkge1xuICAgICAgICBmb3IgKHZhciBpbmRleCBpbiB0aGlzLmNhbnZhc2VzKSB7XG4gICAgICAgICAgICB2YXIgZW50cnkgPSB0aGlzLmNhbnZhc2VzW2luZGV4XTtcblxuICAgICAgICAgICAgdGhpcy5zZXRGaWxsU3R5bGVzKGVudHJ5KTtcblxuICAgICAgICAgICAgdGhpcy5kcmF3TGluZVRvQ29udGV4dChlbnRyeSwgZW50cnkud2F2ZUN0eCwgcGVha3MsIGFic21heCwgaGFsZkgsIG9mZnNldFksIHN0YXJ0LCBlbmQpO1xuICAgICAgICAgICAgdGhpcy5kcmF3TGluZVRvQ29udGV4dChlbnRyeSwgZW50cnkucHJvZ3Jlc3NDdHgsIHBlYWtzLCBhYnNtYXgsIGhhbGZILCBvZmZzZXRZLCBzdGFydCwgZW5kKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBkcmF3TGluZVRvQ29udGV4dDogZnVuY3Rpb24gKGVudHJ5LCBjdHgsIHBlYWtzLCBhYnNtYXgsIGhhbGZILCBvZmZzZXRZLCBzdGFydCwgZW5kKSB7XG4gICAgICAgIGlmICghY3R4KSB7IHJldHVybjsgfVxuXG4gICAgICAgIHZhciBsZW5ndGggPSBwZWFrcy5sZW5ndGggLyAyO1xuXG4gICAgICAgIHZhciBzY2FsZSA9IDE7XG4gICAgICAgIGlmICh0aGlzLnBhcmFtcy5maWxsUGFyZW50ICYmIHRoaXMud2lkdGggIT0gbGVuZ3RoKSB7XG4gICAgICAgICAgICBzY2FsZSA9IHRoaXMud2lkdGggLyBsZW5ndGg7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgZmlyc3QgPSBNYXRoLnJvdW5kKGxlbmd0aCAqIGVudHJ5LnN0YXJ0KSxcbiAgICAgICAgICAgIGxhc3QgPSBNYXRoLnJvdW5kKGxlbmd0aCAqIGVudHJ5LmVuZCk7XG4gICAgICAgIGlmIChmaXJzdCA+IGVuZCB8fCBsYXN0IDwgc3RhcnQpIHsgcmV0dXJuOyB9XG4gICAgICAgIHZhciBjYW52YXNTdGFydCA9IE1hdGgubWF4KGZpcnN0LCBzdGFydCk7XG4gICAgICAgIHZhciBjYW52YXNFbmQgPSBNYXRoLm1pbihsYXN0LCBlbmQpO1xuXG4gICAgICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICAgICAgY3R4Lm1vdmVUbygoY2FudmFzU3RhcnQgLSBmaXJzdCkgKiBzY2FsZSArIHRoaXMuaGFsZlBpeGVsLCBoYWxmSCArIG9mZnNldFkpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSBjYW52YXNTdGFydDsgaSA8IGNhbnZhc0VuZDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgcGVhayA9IHBlYWtzWzIgKiBpXSB8fCAwO1xuICAgICAgICAgICAgdmFyIGggPSBNYXRoLnJvdW5kKHBlYWsgLyBhYnNtYXggKiBoYWxmSCk7XG4gICAgICAgICAgICBjdHgubGluZVRvKChpIC0gZmlyc3QpICogc2NhbGUgKyB0aGlzLmhhbGZQaXhlbCwgaGFsZkggLSBoICsgb2Zmc2V0WSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBEcmF3IHRoZSBib3R0b20gZWRnZSBnb2luZyBiYWNrd2FyZHMsIHRvIG1ha2UgYSBzaW5nbGVcbiAgICAgICAgLy8gY2xvc2VkIGh1bGwgdG8gZmlsbC5cbiAgICAgICAgZm9yICh2YXIgaSA9IGNhbnZhc0VuZCAtIDE7IGkgPj0gY2FudmFzU3RhcnQ7IGktLSkge1xuICAgICAgICAgICAgdmFyIHBlYWsgPSBwZWFrc1syICogaSArIDFdIHx8IDA7XG4gICAgICAgICAgICB2YXIgaCA9IE1hdGgucm91bmQocGVhayAvIGFic21heCAqIGhhbGZIKTtcbiAgICAgICAgICAgIGN0eC5saW5lVG8oKGkgLSBmaXJzdCkgKiBzY2FsZSArIHRoaXMuaGFsZlBpeGVsLCBoYWxmSCAtIGggKyBvZmZzZXRZKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcbiAgICAgICAgY3R4LmZpbGwoKTtcbiAgICB9LFxuXG4gICAgZmlsbFJlY3Q6IGZ1bmN0aW9uICh4LCB5LCB3aWR0aCwgaGVpZ2h0KSB7XG4gICAgICAgIHZhciBzdGFydENhbnZhcyA9IE1hdGguZmxvb3IoeCAvIHRoaXMubWF4Q2FudmFzV2lkdGgpO1xuICAgICAgICB2YXIgZW5kQ2FudmFzID0gTWF0aC5taW4oTWF0aC5jZWlsKCh4ICsgd2lkdGgpIC8gdGhpcy5tYXhDYW52YXNXaWR0aCkgKyAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jYW52YXNlcy5sZW5ndGgpO1xuICAgICAgICBmb3IgKHZhciBpID0gc3RhcnRDYW52YXM7IGkgPCBlbmRDYW52YXM7IGkrKykge1xuICAgICAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy5jYW52YXNlc1tpXSxcbiAgICAgICAgICAgICAgICBsZWZ0T2Zmc2V0ID0gaSAqIHRoaXMubWF4Q2FudmFzV2lkdGg7XG5cbiAgICAgICAgICAgIHZhciBpbnRlcnNlY3Rpb24gPSB7XG4gICAgICAgICAgICAgICAgeDE6IE1hdGgubWF4KHgsIGkgKiB0aGlzLm1heENhbnZhc1dpZHRoKSxcbiAgICAgICAgICAgICAgICB5MTogeSxcbiAgICAgICAgICAgICAgICB4MjogTWF0aC5taW4oeCArIHdpZHRoLCBpICogdGhpcy5tYXhDYW52YXNXaWR0aCArIGVudHJ5LndhdmVDdHguY2FudmFzLndpZHRoKSxcbiAgICAgICAgICAgICAgICB5MjogeSArIGhlaWdodFxuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgaWYgKGludGVyc2VjdGlvbi54MSA8IGludGVyc2VjdGlvbi54Mikge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0RmlsbFN0eWxlcyhlbnRyeSk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLmZpbGxSZWN0VG9Db250ZXh0KGVudHJ5LndhdmVDdHgsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbnRlcnNlY3Rpb24ueDEgLSBsZWZ0T2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJzZWN0aW9uLnkxLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJzZWN0aW9uLngyIC0gaW50ZXJzZWN0aW9uLngxLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJzZWN0aW9uLnkyIC0gaW50ZXJzZWN0aW9uLnkxKTtcblxuICAgICAgICAgICAgICAgIHRoaXMuZmlsbFJlY3RUb0NvbnRleHQoZW50cnkucHJvZ3Jlc3NDdHgsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbnRlcnNlY3Rpb24ueDEgLSBsZWZ0T2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJzZWN0aW9uLnkxLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJzZWN0aW9uLngyIC0gaW50ZXJzZWN0aW9uLngxLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJzZWN0aW9uLnkyIC0gaW50ZXJzZWN0aW9uLnkxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBmaWxsUmVjdFRvQ29udGV4dDogZnVuY3Rpb24gKGN0eCwgeCwgeSwgd2lkdGgsIGhlaWdodCkge1xuICAgICAgICBpZiAoIWN0eCkgeyByZXR1cm47IH1cbiAgICAgICAgY3R4LmZpbGxSZWN0KHgsIHksIHdpZHRoLCBoZWlnaHQpO1xuICAgIH0sXG5cbiAgICBzZXRGaWxsU3R5bGVzOiBmdW5jdGlvbiAoZW50cnkpIHtcbiAgICAgICAgZW50cnkud2F2ZUN0eC5maWxsU3R5bGUgPSB0aGlzLnBhcmFtcy53YXZlQ29sb3I7XG4gICAgICAgIGlmICh0aGlzLmhhc1Byb2dyZXNzQ2FudmFzKSB7XG4gICAgICAgICAgICBlbnRyeS5wcm9ncmVzc0N0eC5maWxsU3R5bGUgPSB0aGlzLnBhcmFtcy5wcm9ncmVzc0NvbG9yO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIHVwZGF0ZVByb2dyZXNzOiBmdW5jdGlvbiAocG9zKSB7XG4gICAgICAgIHRoaXMuc3R5bGUodGhpcy5wcm9ncmVzc1dhdmUsIHsgd2lkdGg6IHBvcyArICdweCcgfSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIENvbWJpbmUgYWxsIGF2YWlsYWJsZSBjYW52YXNzZXMgdG9nZXRoZXIuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gdHlwZSAtIGFuIG9wdGlvbmFsIHZhbHVlIG9mIGEgZm9ybWF0IHR5cGUuIERlZmF1bHQgaXMgaW1hZ2UvcG5nLlxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBxdWFsaXR5IC0gYW4gb3B0aW9uYWwgdmFsdWUgYmV0d2VlbiAwIGFuZCAxLiBEZWZhdWx0IGlzIDAuOTIuXG4gICAgICpcbiAgICAgKi9cbiAgICBnZXRJbWFnZTogZnVuY3Rpb24odHlwZSwgcXVhbGl0eSkge1xuICAgICAgICB2YXIgYXZhaWxhYmxlQ2FudmFzID0gW107XG4gICAgICAgIHRoaXMuY2FudmFzZXMuZm9yRWFjaChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICAgICAgICAgIGF2YWlsYWJsZUNhbnZhcy5wdXNoKGVudHJ5LndhdmUudG9EYXRhVVJMKHR5cGUsIHF1YWxpdHkpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBhdmFpbGFibGVDYW52YXMubGVuZ3RoID4gMSA/IGF2YWlsYWJsZUNhbnZhcyA6IGF2YWlsYWJsZUNhbnZhc1swXTtcbiAgICB9XG59KTtcblxuJ3VzZSBzdHJpY3QnO1xuXG5XYXZlU3VyZmVyLkRyYXdlci5TcGxpdFdhdmVQb2ludFBsb3QgPSBPYmplY3QuY3JlYXRlKFdhdmVTdXJmZXIuRHJhd2VyLkNhbnZhcyk7XG5cbldhdmVTdXJmZXIudXRpbC5leHRlbmQoV2F2ZVN1cmZlci5EcmF3ZXIuU3BsaXRXYXZlUG9pbnRQbG90LCB7XG5cbiAgICBkZWZhdWx0UGxvdFBhcmFtczoge1xuICAgICAgICBwbG90Tm9ybWFsaXplVG86ICd3aG9sZScsXG4gICAgICAgIHBsb3RUaW1lU3RhcnQ6IDAsXG4gICAgICAgIHBsb3RNaW46IDAsXG4gICAgICAgIHBsb3RNYXg6IDEsXG4gICAgICAgIHBsb3RDb2xvciAgICAgOiAnI2Y2MycsXG4gICAgICAgIHBsb3RQcm9ncmVzc0NvbG9yIDogJyNGMDAnLFxuICAgICAgICBwbG90UG9pbnRIZWlnaHQ6IDIsXG4gICAgICAgIHBsb3RQb2ludFdpZHRoOiAyLFxuICAgICAgICBwbG90U2VwYXJhdG9yOiB0cnVlLFxuICAgICAgICBwbG90U2VwYXJhdG9yQ29sb3I6ICdibGFjaycsXG4gICAgICAgIHBsb3RSYW5nZURpc3BsYXk6IGZhbHNlLFxuICAgICAgICBwbG90UmFuZ2VVbml0czogJycsXG4gICAgICAgIHBsb3RSYW5nZVByZWNpc2lvbjogNCxcbiAgICAgICAgcGxvdFJhbmdlSWdub3JlT3V0bGllcnM6IGZhbHNlLFxuICAgICAgICBwbG90UmFuZ2VGb250U2l6ZTogMTIsXG4gICAgICAgIHBsb3RSYW5nZUZvbnRUeXBlOiAnQXJpZWwnLFxuICAgICAgICB3YXZlRHJhd01lZGlhbkxpbmU6IHRydWUsXG4gICAgICAgIHBsb3RGaWxlRGVsaW1pdGVyOiAgJ1xcdCdcbiAgICB9LFxuXG4gICAgLy9vYmplY3QgdmFyaWFibGVzIHRoYXQgZ2V0IG1hbmlwdWxhdGVkIGJ5IHZhcmlvdXMgb2JqZWN0IGZ1bmN0aW9uc1xuICAgIHBsb3RUaW1lU3RhcnQ6IDAsICAvL3RoZSBzdGFydCB0aW1lIG9mIG91ciB3YXZlIGFjY29yZGluZyB0byBwbG90IGRhdGFcbiAgICBwbG90VGltZUVuZDogLTEsICAgLy90aGUgZW5kIG9mIG91ciB3YXZlIGFjY29yZGluZyB0byBwbG90IGRhdGFcbiAgICBwbG90QXJyYXlMb2FkZWQ6IGZhbHNlLFxuICAgIHBsb3RBcnJheTogW10sICAgICAvL2FycmF5IG9mIHBsb3QgZGF0YSBvYmplY3RzIGNvbnRhaW5pbmcgdGltZSBhbmQgcGxvdCB2YWx1ZVxuICAgIHBsb3RQb2ludHM6IFtdLCAgICAgICAgLy9jYWxjdWxhdGVkIGF2ZXJhZ2UgcGxvdCBwb2ludHMgY29ycmVzcG9uZGluZyB0byB2YWx1ZSBvZiBvdXIgd2F2ZVxuICAgIHBsb3RNaW46IDAsXG4gICAgcGxvdE1heDogMSxcblxuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemVzIHRoZSBwbG90IGFycmF5LiBJZiBwYXJhbXMucGxvdEZpbGVVcmwgaXMgcHJvdmlkZWQgYW4gYWpheCBjYWxsIHdpbGwgYmVcbiAgICAgKiBleGVjdXRlZCBhbmQgZHJhd2luZyBvZiB0aGUgd2F2ZSBpcyBkZWxheWVkIHVudGlsIHBsb3QgaW5mbyBpcyByZXRyaWV2ZWRcbiAgICAgKiBAcGFyYW0gcGFyYW1zXG4gICAgICovXG4gICAgaW5pdERyYXdlcjogZnVuY3Rpb24gKHBhcmFtcykge1xuICAgICAgICB2YXIgbXkgPSB0aGlzO1xuXG4gICAgICAgIC8vc2V0IGRlZmF1bHRzIGlmIG5vdCBwYXNzZWQgaW5cbiAgICAgICAgZm9yKHZhciBwYXJhbU5hbWUgaW4gdGhpcy5kZWZhdWx0UGxvdFBhcmFtcykge1xuICAgICAgICAgICAgaWYodGhpcy5wYXJhbXNbcGFyYW1OYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXNbcGFyYW1OYW1lXSA9IHRoaXMuZGVmYXVsdFBsb3RQYXJhbXNbcGFyYW1OYW1lXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vc2V0IHRoZSBwbG90VGltZVN0YXJ0XG4gICAgICAgIHRoaXMucGxvdFRpbWVTdGFydCA9IHRoaXMucGFyYW1zLnBsb3RUaW1lU3RhcnQ7XG5cbiAgICAgICAgLy9jaGVjayB0byBzZWUgaWYgcGxvdFRpbWVFbmRcbiAgICAgICAgaWYodGhpcy5wYXJhbXMucGxvdFRpbWVFbmQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5wbG90VGltZUVuZCA9IHRoaXMucGFyYW1zLnBsb3RUaW1lRW5kO1xuICAgICAgICB9XG5cbiAgICAgICAgLy9zZXQgdGhlIHBsb3QgYXJyYXlcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocGFyYW1zLnBsb3RBcnJheSkpIHtcbiAgICAgICAgICAgIHRoaXMucGxvdEFycmF5ID0gcGFyYW1zLnBsb3RBcnJheTtcbiAgICAgICAgICAgIHRoaXMucGxvdEFycmF5TG9hZGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICAvL05lZWQgdG8gbG9hZCB0aGUgcGxvdCBhcnJheSBmcm9tIGFqYXggd2l0aCBvdXIgY2FsbGJhY2tcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgb25QbG90QXJyYXlMb2FkZWQgPSBmdW5jdGlvbiAocGxvdEFycmF5KSB7XG4gICAgICAgICAgICAgICAgbXkucGxvdEFycmF5ID0gcGxvdEFycmF5O1xuICAgICAgICAgICAgICAgIG15LnBsb3RBcnJheUxvYWRlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgbXkuZmlyZUV2ZW50KCdwbG90X2FycmF5X2xvYWRlZCcpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMubG9hZFBsb3RBcnJheUZyb21GaWxlKHBhcmFtcy5wbG90RmlsZVVybCwgb25QbG90QXJyYXlMb2FkZWQsIHRoaXMucGFyYW1zLnBsb3RGaWxlRGVsaW1pdGVyKTtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBEcmF3IHRoZSBwZWFrcyAtIHRoaXMgb3ZlcnJpZGVzIHRoZSBkcmF3ZXIuanMgZnVuY3Rpb24gYW5kIGRvZXMgdGhlIGZvbGxvd2luZyBhZGRpdGlvbmFsIHN0ZXBzXG4gICAgICogLSBlbnN1cmVzIHRoYXQgdGhlIHBsb3RBcnJheSBoYXMgYWxyZWFkeSBiZWVuIGxvYWRlZCwgaWYgbm90IGl0IGxvYWRzIHZpYSBhamF4XG4gICAgICogLSBtb3ZlcyB0aGUgd2F2ZSBmb3JtIHRvIHdoZXJlIGNoYW5uZWwgMSB3b3VsZCBub3JtYWxseSBiZVxuICAgICAqIEBwYXJhbSBwZWFrc1xuICAgICAqIEBwYXJhbSBsZW5ndGhcbiAgICAgKiBAcGFyYW0gc3RhcnRcbiAgICAgKiBAcGFyYW0gZW5kXG4gICAgICovXG4gICAgZHJhd1BlYWtzOiBmdW5jdGlvbiAocGVha3MsIGxlbmd0aCwgc3RhcnQsIGVuZCkge1xuICAgICAgICAvL21ha2Ugc3VyZSB0aGF0IHRoZSBwbG90IGFycmF5IGlzIGFscmVhZHkgbG9hZGVkXG4gICAgICAgIGlmICh0aGlzLnBsb3RBcnJheUxvYWRlZCA9PSB0cnVlKSB7XG5cbiAgICAgICAgICAgIHRoaXMuc2V0V2lkdGgobGVuZ3RoKTtcblxuICAgICAgICAgICAgLy9mYWtlIHRoYXQgd2UgYXJlIHNwbGl0dGluZyBjaGFubmVsc1xuICAgICAgICAgICAgdGhpcy5zcGxpdENoYW5uZWxzID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMucGFyYW1zLmhlaWdodCA9IHRoaXMucGFyYW1zLmhlaWdodC8yO1xuICAgICAgICAgICAgaWYgKHBlYWtzWzBdIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgICAgICAgICAgIHBlYWtzID0gcGVha3NbMF07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMucGFyYW1zLmJhcldpZHRoID9cbiAgICAgICAgICAgICAgICB0aGlzLmRyYXdCYXJzKHBlYWtzLCAxLCBzdGFydCwgZW5kKSA6XG4gICAgICAgICAgICAgICAgdGhpcy5kcmF3V2F2ZShwZWFrcywgMSwgc3RhcnQsIGVuZCk7XG5cbiAgICAgICAgICAgIC8vc2V0IHRoZSBoZWlnaHQgYmFjayB0byB0aGUgb3JpZ2luYWxcbiAgICAgICAgICAgIHRoaXMucGFyYW1zLmhlaWdodCA9IHRoaXMucGFyYW1zLmhlaWdodCoyO1xuXG4gICAgICAgICAgICB0aGlzLmNhbGN1bGF0ZVBsb3RzKCk7XG4gICAgICAgICAgICB0aGlzLmRyYXdQbG90cygpO1xuXG4gICAgICAgIH1cbiAgICAgICAgLy9vdGhlcndpc2Ugd2FpdCBmb3IgdGhlIHBsb3QgYXJyYXkgdG8gYmUgbG9hZGVkIGFuZCB0aGVuIGRyYXcgYWdhaW5cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgbXkgPSB0aGlzO1xuICAgICAgICAgICAgbXkub24oJ3Bsb3QtYXJyYXktbG9hZGVkJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIG15LmRyYXdQZWFrcyhwZWFrcywgbGVuZ3RoLCBzdGFydCwgZW5kKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSxcblxuXG5cblxuICAgIC8qKlxuICAgICAqIExvb3AgdGhyb3VnaCB0aGUgY2FsY3VsYXRlZCBwbG90IHZhbHVlcyBhbmQgYWN0dWFsbHkgZHJhdyB0aGVtXG4gICAgICovXG4gICAgZHJhd1Bsb3RzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGhlaWdodCA9IHRoaXMucGFyYW1zLmhlaWdodCAqIHRoaXMucGFyYW1zLnBpeGVsUmF0aW8gLyAyO1xuXG4gICAgICAgIHZhciAkID0gMC41IC8gdGhpcy5wYXJhbXMucGl4ZWxSYXRpbztcblxuICAgICAgICB0aGlzLndhdmVDYy5maWxsU3R5bGUgPSB0aGlzLnBhcmFtcy5wbG90Q29sb3I7XG4gICAgICAgIGlmKHRoaXMucHJvZ3Jlc3NDYykge1xuICAgICAgICAgICAgdGhpcy5wcm9ncmVzc0NjLmZpbGxTdHlsZSA9IHRoaXMucGFyYW1zLnBsb3RQcm9ncmVzc0NvbG9yO1xuICAgICAgICB9XG4gICAgICAgIGZvcih2YXIgaSBpbiB0aGlzLnBsb3RQb2ludHMpIHtcbiAgICAgICAgICAgIHZhciB4ID0gcGFyc2VJbnQoaSk7XG4gICAgICAgICAgICB2YXIgeSA9IGhlaWdodCAtIHRoaXMucGFyYW1zLnBsb3RQb2ludEhlaWdodCAtICh0aGlzLnBsb3RQb2ludHNbaV0gKiAoaGVpZ2h0IC0gdGhpcy5wYXJhbXMucGxvdFBvaW50SGVpZ2h0KSk7XG4gICAgICAgICAgICB2YXIgcG9pbnRIZWlnaHQgPSB0aGlzLnBhcmFtcy5wbG90UG9pbnRIZWlnaHQ7XG5cbiAgICAgICAgICAgIHRoaXMud2F2ZUNjLmZpbGxSZWN0KHgsIHksIHRoaXMucGFyYW1zLnBsb3RQb2ludFdpZHRoLCBwb2ludEhlaWdodCk7XG5cbiAgICAgICAgICAgIGlmKHRoaXMucHJvZ3Jlc3NDYykge1xuICAgICAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3NDYy5maWxsUmVjdCh4LCB5LCB0aGlzLnBhcmFtcy5wbG90UG9pbnRXaWR0aCwgcG9pbnRIZWlnaHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy9kcmF3IGxpbmUgdG8gc2VwYXJhdGUgdGhlIHR3byB3YXZlc1xuICAgICAgICBpZih0aGlzLnBhcmFtcy5wbG90U2VwYXJhdG9yKSB7XG4gICAgICAgICAgICB0aGlzLndhdmVDYy5maWxsU3R5bGUgPSB0aGlzLnBhcmFtcy5wbG90U2VwYXJhdG9yQ29sb3I7XG4gICAgICAgICAgICB0aGlzLndhdmVDYy5maWxsUmVjdCgwLCBoZWlnaHQsIHRoaXMud2lkdGgsICQpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYodGhpcy5wYXJhbXMucGxvdFJhbmdlRGlzcGxheSkge1xuICAgICAgICAgICAgdGhpcy5kaXNwbGF5UGxvdFJhbmdlKCk7XG4gICAgICAgIH1cbiAgICB9LFxuXG5cbiAgICAvKipcbiAgICAgKiBEaXNwbGF5IHRoZSByYW5nZSBmb3IgdGhlIHBsb3QgZ3JhcGhcbiAgICAgKi9cbiAgICBkaXNwbGF5UGxvdFJhbmdlOiBmdW5jdGlvbigpXG4gICAge1xuICAgICAgICB2YXIgZm9udFNpemUgPSB0aGlzLnBhcmFtcy5wbG90UmFuZ2VGb250U2l6ZSAqIHRoaXMucGFyYW1zLnBpeGVsUmF0aW87XG4gICAgICAgIHZhciBtYXhSYW5nZSA9IHRoaXMucGxvdE1heC50b1ByZWNpc2lvbih0aGlzLnBhcmFtcy5wbG90UmFuZ2VQcmVjaXNpb24pICsgJyAnICsgdGhpcy5wYXJhbXMucGxvdFJhbmdlVW5pdHM7XG4gICAgICAgIHZhciBtaW5SYW5nZSA9IHRoaXMucGxvdE1pbi50b1ByZWNpc2lvbih0aGlzLnBhcmFtcy5wbG90UmFuZ2VQcmVjaXNpb24pICsgJyAnICsgdGhpcy5wYXJhbXMucGxvdFJhbmdlVW5pdHM7XG4gICAgICAgIHRoaXMud2F2ZUNjLmZvbnQgPSBmb250U2l6ZS50b1N0cmluZygpICsgJ3B4ICcgKyB0aGlzLnBhcmFtcy5wbG90UmFuZ2VGb250VHlwZTtcbiAgICAgICAgdGhpcy53YXZlQ2MuZmlsbFRleHQobWF4UmFuZ2UsIDMsIGZvbnRTaXplKTtcbiAgICAgICAgdGhpcy53YXZlQ2MuZmlsbFRleHQobWluUmFuZ2UsIDMsIHRoaXMuaGVpZ2h0LzIpO1xuXG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBUaGlzIGZ1bmN0aW9uIGxvb3BzIHRocm91Z2ggdGhlIHBsb3RBcnJheSBhbmQgY29udmVydHMgaXQgdG8gdGhlIHBsb3QgcG9pbnRzXG4gICAgICogdG8gYmUgZHJhd24gb24gdGhlIGNhbnZhcyBrZXllZCBieSB0aGVpciBwb3NpdGlvblxuICAgICAqL1xuICAgIGNhbGN1bGF0ZVBsb3RzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgLy9yZXNldCBwbG90cyBhcnJheVxuICAgICAgICB0aGlzLnBsb3RQb2ludHMgPSB7fTtcblxuICAgICAgICAvL21ha2Ugc3VyZSB3ZSBoYXZlIG91ciBwbG90VGltZUVuZFxuICAgICAgICB0aGlzLmNhbGN1bGF0ZVBsb3RUaW1lRW5kKCk7XG5cbiAgICAgICAgdmFyIHBvaW50c0ZvckF2ZXJhZ2UgPSBbXTtcbiAgICAgICAgdmFyIHByZXZpb3VzV2F2ZUluZGV4ID0gLTE7XG4gICAgICAgIHZhciBtYXhQbG90ID0gMDtcbiAgICAgICAgdmFyIG1pblBsb3QgPSA5OTk5OTk5OTk5OTk5OTtcbiAgICAgICAgdmFyIG1heFNlZ21lbnRQbG90ID0gMDtcbiAgICAgICAgdmFyIG1pblNlZ21lbnRQbG90ID0gOTk5OTk5OTk5OTk5OTk7XG4gICAgICAgIHZhciBkdXJhdGlvbiA9IHRoaXMucGxvdFRpbWVFbmQgLSB0aGlzLnBsb3RUaW1lU3RhcnQ7XG5cbiAgICAgICAgLy9sb29wIHRocm91Z2ggb3VyIHBsb3RBcnJheSBhbmQgbWFwIHZhbHVlcyB0byB3YXZlIGluZGV4ZXMgYW5kIHRha2UgdGhlIGF2ZXJhZ2UgdmFsdWVzIGZvciBlYWNoIHdhdmUgaW5kZXhcbiAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IHRoaXMucGxvdEFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgZGF0YVBvaW50ID0gdGhpcy5wbG90QXJyYXlbaV07XG4gICAgICAgICAgICBpZihkYXRhUG9pbnQudmFsdWUgPiBtYXhQbG90KSB7bWF4UGxvdCA9IGRhdGFQb2ludC52YWx1ZTt9XG4gICAgICAgICAgICBpZihkYXRhUG9pbnQudmFsdWUgPCBtaW5QbG90KSB7bWluUGxvdCA9IGRhdGFQb2ludC52YWx1ZTt9XG5cbiAgICAgICAgICAgIC8vbWFrZSBzdXJlIHdlIGFyZSBpbiB0aGUgc3BlY2lmaWVkIHJhbmdlXG4gICAgICAgICAgICBpZihkYXRhUG9pbnQudGltZSA+PSB0aGlzLnBsb3RUaW1lU3RhcnQgJiYgZGF0YVBvaW50LnRpbWUgPD0gdGhpcy5wbG90VGltZUVuZCkge1xuICAgICAgICAgICAgICAgIC8vZ2V0IHRoZSB3YXZlIGluZGV4IGNvcnJlc3BvbmRpbmcgdG8gdGhlIGRhdGEgcG9pbnRcbiAgICAgICAgICAgICAgICB2YXIgd2F2ZUluZGV4ID0gTWF0aC5yb3VuZCh0aGlzLndpZHRoICogKGRhdGFQb2ludC50aW1lIC0gdGhpcy5wbG90VGltZVN0YXJ0KSAvIGR1cmF0aW9uKTtcblxuICAgICAgICAgICAgICAgIHBvaW50c0ZvckF2ZXJhZ2UucHVzaChkYXRhUG9pbnQudmFsdWUpO1xuXG4gICAgICAgICAgICAgICAgLy9pZiB3ZSBoYXZlIG1vdmVkIG9uIHRvIGEgbmV3IHBvc2l0aW9uIGluIG91ciB3YXZlIHJlY29yZCBhdmVyYWdlIGFuZCByZXNldCBwcmV2aW91c1dhdmVJbmRleFxuICAgICAgICAgICAgICAgIGlmKHdhdmVJbmRleCAhPT0gcHJldmlvdXNXYXZlSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYocG9pbnRzRm9yQXZlcmFnZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL2dldCB0aGUgYXZlcmFnZSBwbG90IGZvciB0aGlzIHBvaW50XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYXZnUGxvdCA9IHRoaXMuYXZnKHBvaW50c0ZvckF2ZXJhZ2UpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvL2NoZWNrIGZvciBtaW4gbWF4XG4gICAgICAgICAgICAgICAgICAgICAgICBpZihhdmdQbG90ID4gbWF4U2VnbWVudFBsb3QpIHttYXhTZWdtZW50UGxvdCA9IGF2Z1Bsb3Q7fVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYoYXZnUGxvdCA8IG1pblNlZ21lbnRQbG90KSB7bWluU2VnbWVudFBsb3QgPSBhdmdQbG90O31cblxuICAgICAgICAgICAgICAgICAgICAgICAgLy9hZGQgcGxvdCB0byB0aGUgcG9zaXRpb25cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGxvdFBvaW50c1twcmV2aW91c1dhdmVJbmRleF0gPSBhdmdQbG90O1xuICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRzRm9yQXZlcmFnZSA9IFtdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHByZXZpb3VzV2F2ZUluZGV4ID0gd2F2ZUluZGV4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy9ub3JtYWxpemUgdGhlIHBsb3RzIHBvaW50c1xuICAgICAgICBpZih0aGlzLnBhcmFtcy5wbG90Tm9ybWFsaXplVG8gPT0gJ3dob2xlJykge1xuICAgICAgICAgICAgdGhpcy5wbG90TWluID0gbWluUGxvdDtcbiAgICAgICAgICAgIHRoaXMucGxvdE1heCA9IG1heFBsb3Q7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZih0aGlzLnBhcmFtcy5wbG90Tm9ybWFsaXplVG8gPT0gJ3ZhbHVlcycpIHtcbiAgICAgICAgICAgIHRoaXMucGxvdE1pbiA9IHRoaXMucGFyYW1zLnBsb3RNaW47XG4gICAgICAgICAgICB0aGlzLnBsb3RNYXggPSB0aGlzLnBhcmFtcy5wbG90TWF4O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5wbG90TWluID0gbWluU2VnbWVudFBsb3Q7XG4gICAgICAgICAgICB0aGlzLnBsb3RNYXggPSBtYXhTZWdtZW50UGxvdDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm5vcm1hbGl6ZVZhbHVlcygpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byB0YWtlIGFsbCBvZiB0aGUgcGxvdHMgaW4gdGhpcy5wbG90cyBhbmQgbm9ybWFsaXplIHRoZW0gZnJvbSAwIHRvIG9uZVxuICAgICAqIGRlcGVuZGluZyBvbiB0aGlzLnBsb3RNaW4gYW5kIHRoaXMucGxvdE1heCB2YWx1ZXNcbiAgICAgKi9cbiAgICBub3JtYWxpemVWYWx1ZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgbm9ybWFsaXplZFZhbHVlcyA9IHt9O1xuXG4gICAgICAgIC8vY2hlY2sgdG8gbWFrZSBzdXJlIHdlIHNob3VsZCBiZSBub3JtYWxpemluZ1xuICAgICAgICBpZih0aGlzLnBhcmFtcy5wbG90Tm9ybWFsaXplVG8gPT09ICdub25lJykge3JldHVybjt9XG5cbiAgICAgICAgZm9yKHZhciBpIGluIHRoaXMucGxvdFBvaW50cykge1xuICAgICAgICAgICAgLy9nZXQgdGhlIG5vcm1hbGl6ZWQgdmFsdWUgYmV0d2VlbiAwIGFuZCAxXG4gICAgICAgICAgICB2YXIgbm9ybWFsaXplZFZhbHVlID0gKHRoaXMucGxvdFBvaW50c1tpXSAtIHRoaXMucGxvdE1pbikgLyAodGhpcy5wbG90TWF4IC0gdGhpcy5wbG90TWluKTtcblxuICAgICAgICAgICAgLy9jaGVjayBpZiB0aGUgdmFsdWUgaXMgYWJvdmUgb3VyIHNwZWNpZmllZCByYW5nZSBtYXhcbiAgICAgICAgICAgIGlmKG5vcm1hbGl6ZWRWYWx1ZSA+IDEpIHtcbiAgICAgICAgICAgICAgICBpZighdGhpcy5wYXJhbXMucGxvdFJhbmdlSWdub3JlT3V0bGllcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgbm9ybWFsaXplZFZhbHVlc1tpXSA9IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy9jaGVjayBpZiBodGUgdmFsdWUgaXMgYmVsb3cgb3VyIHNwZWNpZmllZCByYW50XG4gICAgICAgICAgICBlbHNlIGlmKG5vcm1hbGl6ZWRWYWx1ZSA8IDApIHtcbiAgICAgICAgICAgICAgICBpZighdGhpcy5wYXJhbXMucGxvdFJhbmdlSWdub3JlT3V0bGllcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgbm9ybWFsaXplZFZhbHVlc1tpXSA9IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy9pbiBvdXIgcmFuZ2UgYWRkIHRoZSBub3JtYWxpemVkIHZhbHVlXG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBub3JtYWxpemVkVmFsdWVzW2ldID0gbm9ybWFsaXplZFZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMucGxvdFBvaW50cyA9IG5vcm1hbGl6ZWRWYWx1ZXM7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKlxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gbG9hZCB0aGUgcGxvdCBhcnJheSBmcm9tIGEgZXh0ZXJuYWwgZmlsZVxuICAgICAqXG4gICAgICogVGhlIHRleHQgZmlsZSBzaG91bGQgY29udGFpbiBhIHNlcmllcyBvZiBsaW5lcy5cbiAgICAgKiBFYWNoIGxpbmUgc2hvdWxkIGNvbnRhaW4gW2F1ZGlvIHRpbWVdIFtkZWxpbWl0ZXIgY2hhcmFjdGVyXSBbcGxvdCB2YWx1ZV1cbiAgICAgKiBlLmcuIFwiMS4yMzU1IFt0YWJdIDEyNC4yMzIxXCJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwbG90RmlsZVVybCAgdXJsIG9mIHRoZSBmaWxlIGNvbnRhaW5pbmcgdGltZSBhbmQgdmFsdWUgaW5mb3JtYXRpb25cbiAgICAgKiBAcGFyYW0gb25TdWNjZXNzICAgIGZ1bmN0aW9uIHRvIHJ1biBvbiBzdWNjZXNzXG4gICAgICogQHBhcmFtIGRlbGltaXRlciAgICB0aGUgZGVsaW1pdGVyIHRoYXQgc2VwYXJhdGVzIHRoZSB0aW1lIGFuZCB2YWx1ZXMgb24gZWFjaCBsaW5lXG4gICAgICovXG4gICAgbG9hZFBsb3RBcnJheUZyb21GaWxlOiBmdW5jdGlvbihwbG90RmlsZVVybCwgb25TdWNjZXNzLCBkZWxpbWl0ZXIpIHtcbiAgICAgICAgLy9kZWZhdWx0IGRlbGltaXRlciB0byB0YWIgY2hhcmFjdGVyXG4gICAgICAgIGlmIChkZWxpbWl0ZXIgPT09IHVuZGVmaW5lZCkge2RlbGltaXRlciA9ICdcXHQnO31cblxuICAgICAgICB2YXIgcGxvdEFycmF5ID0gW107XG5cbiAgICAgICAgdmFyIG9wdGlvbnMgPSB7XG4gICAgICAgICAgICB1cmw6IHBsb3RGaWxlVXJsLFxuICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiAndGV4dCdcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGZpbGVBamF4ID0gV2F2ZVN1cmZlci51dGlsLmFqYXgob3B0aW9ucyk7XG5cbiAgICAgICAgZmlsZUFqYXgub24oJ2xvYWQnLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgaWYgKGRhdGEuY3VycmVudFRhcmdldC5zdGF0dXMgPT0gMjAwKSB7XG4gICAgICAgICAgICAgICAgLy9zcGxpdCB0aGUgZmlsZSBieSBsaW5lIGVuZGluZ3NcbiAgICAgICAgICAgICAgICB2YXIgcGxvdExpbmVzID0gZGF0YS5jdXJyZW50VGFyZ2V0LnJlc3BvbnNlVGV4dC5zcGxpdCgnXFxuJyk7XG4gICAgICAgICAgICAgICAgLy9sb29wIHRocm91Z2ggZWFjaCBsaW5lIGFuZCBmaW5kIHRoZSB0aW1lIGFuZCBwbG90IHZhbHVlcyAoZGVsaW1pdGVkIGJ5IHRhYilcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBsb3RMaW5lcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGxvdFBhcnRzID0gcGxvdExpbmVzW2ldLnNwbGl0KGRlbGltaXRlcik7XG4gICAgICAgICAgICAgICAgICAgIGlmKHBsb3RQYXJ0cy5sZW5ndGggPT0gMikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGxvdEFycmF5LnB1c2goe3RpbWU6IHBhcnNlRmxvYXQocGxvdFBhcnRzWzBdKSwgdmFsdWU6IHBhcnNlRmxvYXQocGxvdFBhcnRzWzFdKX0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vcnVuIHN1Y2Nlc3MgZnVuY3Rpb25cbiAgICAgICAgICAgICAgICBvblN1Y2Nlc3MocGxvdEFycmF5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8qKipcbiAgICAgKiBDYWxjdWxhdGUgdGhlIGVuZCB0aW1lIG9mIHRoZSBwbG90XG4gICAgICovXG4gICAgY2FsY3VsYXRlUGxvdFRpbWVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZih0aGlzLnBhcmFtcy5wbG90VGltZUVuZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnBsb3RUaW1lRW5kID0gdGhpcy5wYXJhbXMucGxvdFRpbWVFbmQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnBsb3RUaW1lRW5kID0gdGhpcy5wbG90QXJyYXlbdGhpcy5wbG90QXJyYXkubGVuZ3RoIC0xXS50aW1lO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFF1aWNrIGNvbnZlbmllbmNlIGZ1bmN0aW9uIHRvIGF2ZXJhZ2UgbnVtYmVycyBpbiBhbiBhcnJheVxuICAgICAqIEBwYXJhbSAgYXJyYXkgb2YgdmFsdWVzXG4gICAgICogQHJldHVybnMge251bWJlcn1cbiAgICAgKi9cbiAgICBhdmc6IGZ1bmN0aW9uKHZhbHVlcykge1xuICAgICAgICB2YXIgc3VtID0gdmFsdWVzLnJlZHVjZShmdW5jdGlvbihhLCBiKSB7cmV0dXJuIGErYjt9KTtcbiAgICAgICAgcmV0dXJuIHN1bS92YWx1ZXMubGVuZ3RoO1xuICAgIH1cbn0pO1xuXG5XYXZlU3VyZmVyLnV0aWwuZXh0ZW5kKFdhdmVTdXJmZXIuRHJhd2VyLlNwbGl0V2F2ZVBvaW50UGxvdCwgV2F2ZVN1cmZlci5PYnNlcnZlcik7XG5cbid1c2Ugc3RyaWN0JztcblxuV2F2ZVN1cmZlci5QZWFrQ2FjaGUgPSB7XG4gICAgaW5pdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuY2xlYXJQZWFrQ2FjaGUoKTtcbiAgICB9LFxuXG4gICAgY2xlYXJQZWFrQ2FjaGU6IGZ1bmN0aW9uKCkge1xuXHQvLyBGbGF0IGFycmF5IHdpdGggZW50cmllcyB0aGF0IGFyZSBhbHdheXMgaW4gcGFpcnMgdG8gbWFyayB0aGVcblx0Ly8gYmVnaW5uaW5nIGFuZCBlbmQgb2YgZWFjaCBzdWJyYW5nZS4gIFRoaXMgaXMgYSBjb252ZW5pZW5jZSBzbyB3ZSBjYW5cblx0Ly8gaXRlcmF0ZSBvdmVyIHRoZSBwYWlycyBmb3IgZWFzeSBzZXQgZGlmZmVyZW5jZSBvcGVyYXRpb25zLlxuICAgICAgICB0aGlzLnBlYWtDYWNoZVJhbmdlcyA9IFtdO1xuXHQvLyBMZW5ndGggb2YgdGhlIGVudGlyZSBjYWNoYWJsZSByZWdpb24sIHVzZWQgZm9yIHJlc2V0dGluZyB0aGUgY2FjaGVcblx0Ly8gd2hlbiB0aGlzIGNoYW5nZXMgKHpvb20gZXZlbnRzLCBmb3IgaW5zdGFuY2UpLlxuICAgICAgICB0aGlzLnBlYWtDYWNoZUxlbmd0aCA9IC0xO1xuICAgIH0sXG5cbiAgICBhZGRSYW5nZVRvUGVha0NhY2hlOiBmdW5jdGlvbihsZW5ndGgsIHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgaWYgKGxlbmd0aCAhPSB0aGlzLnBlYWtDYWNoZUxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5jbGVhclBlYWtDYWNoZSgpO1xuICAgICAgICAgICAgdGhpcy5wZWFrQ2FjaGVMZW5ndGggPSBsZW5ndGg7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBSZXR1cm4gcmFuZ2VzIHRoYXQgd2VyZW4ndCBpbiB0aGUgY2FjaGUgYmVmb3JlIHRoZSBjYWxsLlxuICAgICAgICB2YXIgdW5jYWNoZWRSYW5nZXMgPSBbXTtcbiAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICAvLyBTa2lwIHJhbmdlcyBiZWZvcmUgdGhlIGN1cnJlbnQgc3RhcnQuXG4gICAgICAgIHdoaWxlIChpIDwgdGhpcy5wZWFrQ2FjaGVSYW5nZXMubGVuZ3RoICYmIHRoaXMucGVha0NhY2hlUmFuZ2VzW2ldIDwgc3RhcnQpIHtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgfVxuXHQvLyBJZiB8aXwgaXMgZXZlbiwgfHN0YXJ0fCBmYWxscyBhZnRlciBhbiBleGlzdGluZyByYW5nZS4gIE90aGVyd2lzZSxcblx0Ly8gfHN0YXJ0fCBmYWxscyBiZXR3ZWVuIGFuIGV4aXN0aW5nIHJhbmdlLCBhbmQgdGhlIHVuY2FjaGVkIHJlZ2lvblxuXHQvLyBzdGFydHMgd2hlbiB3ZSBlbmNvdW50ZXIgdGhlIG5leHQgbm9kZSBpbiB8cGVha0NhY2hlUmFuZ2VzfCBvclxuXHQvLyB8ZW5kfCwgd2hpY2hldmVyIGNvbWVzIGZpcnN0LlxuICAgICAgICBpZiAoaSAlIDIgPT0gMCkge1xuICAgICAgICAgICAgdW5jYWNoZWRSYW5nZXMucHVzaChzdGFydCk7XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKGkgPCB0aGlzLnBlYWtDYWNoZVJhbmdlcy5sZW5ndGggJiYgdGhpcy5wZWFrQ2FjaGVSYW5nZXNbaV0gPD0gZW5kKSB7XG4gICAgICAgICAgICB1bmNhY2hlZFJhbmdlcy5wdXNoKHRoaXMucGVha0NhY2hlUmFuZ2VzW2ldKTtcbiAgICAgICAgICAgIGkrKztcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB8aXwgaXMgZXZlbiwgfGVuZHwgaXMgYWZ0ZXIgYWxsIGV4aXN0aW5nIHJhbmdlcy5cbiAgICAgICAgaWYgKGkgJSAyID09IDApIHtcbiAgICAgICAgICAgIHVuY2FjaGVkUmFuZ2VzLnB1c2goZW5kKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEZpbHRlciBvdXQgdGhlIDAtbGVuZ3RoIHJhbmdlcy5cbiAgICAgICAgdW5jYWNoZWRSYW5nZXMgPSB1bmNhY2hlZFJhbmdlcy5maWx0ZXIoZnVuY3Rpb24oaXRlbSwgcG9zLCBhcnIpIHtcbiAgICAgICAgICAgIGlmIChwb3MgPT0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpdGVtICE9IGFycltwb3MgKyAxXTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocG9zID09IGFyci5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0gIT0gYXJyW3BvcyAtIDFdO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXRlbSAhPSBhcnJbcG9zIC0gMV0gJiYgaXRlbSAhPSBhcnJbcG9zICsgMV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG5cdC8vIE1lcmdlIHRoZSB0d28gcmFuZ2VzIHRvZ2V0aGVyLCB1bmNhY2hlZFJhbmdlcyB3aWxsIGVpdGhlciBjb250YWluXG5cdC8vIHdob2xseSBuZXcgcG9pbnRzLCBvciBkdXBsaWNhdGVzIG9mIHBvaW50cyBpbiBwZWFrQ2FjaGVSYW5nZXMuICBJZlxuXHQvLyBkdXBsaWNhdGVzIGFyZSBkZXRlY3RlZCwgcmVtb3ZlIGJvdGggYW5kIGV4dGVuZCB0aGUgcmFuZ2UuXG4gICAgICAgIHRoaXMucGVha0NhY2hlUmFuZ2VzID0gdGhpcy5wZWFrQ2FjaGVSYW5nZXMuY29uY2F0KHVuY2FjaGVkUmFuZ2VzKTtcbiAgICAgICAgdGhpcy5wZWFrQ2FjaGVSYW5nZXMgPSB0aGlzLnBlYWtDYWNoZVJhbmdlcy5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgICAgIHJldHVybiBhIC0gYjtcbiAgICAgICAgfSkuZmlsdGVyKGZ1bmN0aW9uKGl0ZW0sIHBvcywgYXJyKSB7XG4gICAgICAgICAgICBpZiAocG9zID09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXRlbSAhPSBhcnJbcG9zICsgMV07XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHBvcyA9PSBhcnIubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpdGVtICE9IGFycltwb3MgLSAxXTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0gIT0gYXJyW3BvcyAtIDFdICYmIGl0ZW0gIT0gYXJyW3BvcyArIDFdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuXHQvLyBQdXNoIHRoZSB1bmNhY2hlZCByYW5nZXMgaW50byBhbiBhcnJheSBvZiBhcnJheXMgZm9yIGVhc2Ugb2Zcblx0Ly8gaXRlcmF0aW9uIGluIHRoZSBmdW5jdGlvbnMgdGhhdCBjYWxsIHRoaXMuXG4gICAgICAgIHZhciB1bmNhY2hlZFJhbmdlUGFpcnMgPSBbXTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHVuY2FjaGVkUmFuZ2VzLmxlbmd0aDsgaSArPSAyKSB7XG4gICAgICAgICAgICB1bmNhY2hlZFJhbmdlUGFpcnMucHVzaChbdW5jYWNoZWRSYW5nZXNbaV0sIHVuY2FjaGVkUmFuZ2VzW2krMV1dKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB1bmNhY2hlZFJhbmdlUGFpcnM7XG4gICAgfSxcblxuICAgIC8vIEZvciB0ZXN0aW5nXG4gICAgZ2V0Q2FjaGVSYW5nZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHBlYWtDYWNoZVJhbmdlUGFpcnMgPSBbXTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5wZWFrQ2FjaGVSYW5nZXMubGVuZ3RoOyBpICs9IDIpIHtcbiAgICAgICAgICBwZWFrQ2FjaGVSYW5nZVBhaXJzLnB1c2goW3RoaXMucGVha0NhY2hlUmFuZ2VzW2ldLCB0aGlzLnBlYWtDYWNoZVJhbmdlc1tpKzFdXSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcGVha0NhY2hlUmFuZ2VQYWlycztcbiAgICB9XG59O1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qIEluaXQgZnJvbSBIVE1MICovXG4oZnVuY3Rpb24gKCkge1xuICAgIHZhciBpbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY29udGFpbmVycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3dhdmVzdXJmZXInKTtcblxuICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGNvbnRhaW5lcnMsIGZ1bmN0aW9uIChlbCkge1xuICAgICAgICAgICAgdmFyIHBhcmFtcyA9IFdhdmVTdXJmZXIudXRpbC5leHRlbmQoe1xuICAgICAgICAgICAgICAgIGNvbnRhaW5lcjogZWwsXG4gICAgICAgICAgICAgICAgYmFja2VuZDogJ01lZGlhRWxlbWVudCcsXG4gICAgICAgICAgICAgICAgbWVkaWFDb250cm9sczogdHJ1ZVxuICAgICAgICAgICAgfSwgZWwuZGF0YXNldCk7XG5cbiAgICAgICAgICAgIGVsLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXG4gICAgICAgICAgICB2YXIgd2F2ZXN1cmZlciA9IFdhdmVTdXJmZXIuY3JlYXRlKHBhcmFtcyk7XG5cbiAgICAgICAgICAgIGlmIChlbC5kYXRhc2V0LnBlYWtzKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBlYWtzID0gSlNPTi5wYXJzZShlbC5kYXRhc2V0LnBlYWtzKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgd2F2ZXN1cmZlci5sb2FkKGVsLmRhdGFzZXQudXJsLCBwZWFrcyk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gJ2NvbXBsZXRlJykge1xuICAgICAgICBpbml0KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBpbml0KTtcbiAgICB9XG59KCkpO1xuXG5yZXR1cm4gV2F2ZVN1cmZlcjtcblxufSkpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzdXJmZXIuanMvZGlzdC93YXZlc3VyZmVyLmpzXG4vLyBtb2R1bGUgaWQgPSA3M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 74 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_wavesurfer__ = __webpack_require__(73);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_wavesurfer___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_wavesurfer__);\n\n\n// the granularEngine is used for pitch tracking\n// FIXME: For now globbaly declared. Find better solution!\n\n // _MD_ Don't now if this is correct way to do it?!\n\n__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"] = {\n    scriptBufferSize: 256,\n    PLAYING_STATE: 0,\n    PAUSED_STATE: 1,\n    FINISHED_STATE: 2,\n\n    supportsWebAudio: function () {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    },\n\n    getAudioContext: function () {\n        if (!__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].audioContext) {\n            this.wavesAudio = __webpack_require__(172); // _MD_\n            this.wavesLoaders = __webpack_require__(215);\n            // _MD_ // WaveSurfer.WebAudio.audioContext = new (\n            // _MD_ //    window.AudioContext || window.webkitAudioContext\n            // _MD_ //);\n            //console.log(\"getAudioContext: \" + this.wavesAudio.audioContext); // _MD_\n            __WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].audioContext = this.wavesAudio.audioContext; // _MD_\n        }\n\n        return __WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].audioContext;\n    },\n\n    getOfflineAudioContext: function (sampleRate) {\n        if (!__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].offlineAudioContext) {\n            __WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].offlineAudioContext = new (window.OfflineAudioContext || window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return __WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].offlineAudioContext;\n    },\n\n    init: function (params) {\n        this.params = params;\n        this.ac = params.audioContext || this.getAudioContext();\n\n        this.lastPlay = this.ac.currentTime;\n        this.startPosition = 0;\n        this.scheduledPause = null;\n\n        this.states = [Object.create(__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].state.playing), Object.create(__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].state.paused), Object.create(__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].state.finished)];\n\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(this.PAUSED_STATE);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    },\n\n    disconnectFilters: function () {\n        if (this.filters) {\n            this.filters.forEach(function (filter) {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    },\n\n    setState: function (state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    },\n\n    // Unpacked filters\n    setFilter: function () {\n        this.setFilters([].slice.call(arguments));\n    },\n\n    /**\n     * @param {Array} filters Packed ilters array\n     */\n    setFilters: function (filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters.reduce(function (prev, curr) {\n                prev.connect(curr);\n                return curr;\n            }, this.analyser).connect(this.gainNode);\n        }\n    },\n\n    createScriptNode: function () {\n        if (this.ac.createScriptProcessor) {\n            this.scriptNode = this.ac.createScriptProcessor(this.scriptBufferSize);\n        } else {\n            this.scriptNode = this.ac.createJavaScriptNode(this.scriptBufferSize);\n        }\n\n        this.scriptNode.connect(this.ac.destination);\n    },\n\n    _MD_ORIG_addOnAudioProcess: function () {\n        var my = this;\n\n        this.scriptNode.onaudioprocess = function () {\n            var time = my.getCurrentTime();\n\n            if (time >= my.getDuration()) {\n                my.setState(my.FINISHED_STATE);\n                my.fireEvent('pause');\n            } else if (time >= my.scheduledPause) {\n                my.pause();\n            } else if (my.state === my.states[my.PLAYING_STATE]) {\n                my.fireEvent('audioprocess', time);\n            }\n        };\n    },\n    addOnAudioProcess: function () {\n        var my = this;\n\n        this.scriptNode.onaudioprocess = function (e) {\n            var time = my.getCurrentTime();\n\n            if (time >= my.getDuration() || time < 0) {\n                my.setState(my.FINISHED_STATE);\n                my.fireEvent('pause');\n            } else if (time >= my.scheduledPause && my.playControl && !my.playControl.loop) {\n                my.setState(my.PAUSED_STATE);\n                my.fireEvent('pause');\n            } else if (my.state === my.states[my.PLAYING_STATE]) {\n                my.fireEvent('audioprocess', time);\n            }\n        };\n    },\n\n    removeOnAudioProcess: function () {\n        this.scriptNode.onaudioprocess = null;\n    },\n\n    createAnalyserNode: function () {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    },\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     */\n    createVolumeNode: function () {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    },\n\n    /**\n     * Set the gain to a new value.\n     *\n     * @param {Number} newGain The new gain, a floating point value\n     * between 0 and 1. 0 being no gain and 1 being maximum gain.\n     */\n    setVolume: function (newGain) {\n        this.gainNode.gain.value = newGain;\n    },\n\n    /**\n     * Get the current gain.\n     *\n     * @returns {Number} The current gain, a floating point value\n     * between 0 and 1. 0 being no gain and 1 being maximum gain.\n     */\n    getVolume: function () {\n        return this.gainNode.gain.value;\n    },\n\n    decodeArrayBuffer: function (arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(this.ac ? this.ac.sampleRate : 44100);\n        }\n        this.offlineAc.decodeAudioData(arraybuffer, function (data) {\n            callback(data);\n        }.bind(this), errback);\n    },\n\n    /**\n     * Set pre-decoded peaks.\n     */\n    setPeaks: function (peaks) {\n        this.peaks = peaks;\n    },\n\n    /**\n     * Set the rendered length (different from the length of the audio).\n     */\n    setLength: function (length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        var channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        for (var c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    },\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     * @param {Number} length How many subranges to break the waveform into.\n     * @param {Number} first First sample in the required range.\n     * @param {Number} last Last sample in the required range.\n     * @returns {Array} Array of 2*<length> peaks or array of arrays\n     * of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks: function (length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n\n        this.setLength(length);\n\n        var sampleSize = this.buffer.length / length;\n        var sampleStep = ~~(sampleSize / 10) || 1;\n        var channels = this.buffer.numberOfChannels;\n\n        for (var c = 0; c < channels; c++) {\n            var peaks = this.splitPeaks[c];\n            var chan = this.buffer.getChannelData(c);\n\n            for (var i = first; i <= last; i++) {\n                var start = ~~(i * sampleSize);\n                var end = ~~(start + sampleSize);\n                var min = 0;\n                var max = 0;\n\n                for (var j = start; j < end; j += sampleStep) {\n                    var value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    },\n\n    getPlayedPercents: function () {\n        return this.state.getPlayedPercents.call(this);\n    },\n\n    disconnectSource: function () {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    },\n\n    destroy: function () {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (typeof this.ac.close === 'function' && this.ac.state != 'closed') {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                __WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].audioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            __WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].offlineAudioContext = null;\n        }\n    },\n\n    load: function (buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    },\n\n    createSource: function () {\n        var self = this;\n        /*\n                function setupSegmentPlayer() {\n        \n                    var audioContext = self.wavesAudio.audioContext;\n                    var loader = new self.wavesLoaders.SuperLoader(); // instantiate loader\n        \n                    var assets = [\n                        \"./assets/3_4_Guitar30bpm96khz32bit.wav\",\n                        \"./assets/3_4_guitar-loop.json\"\n                    ];\n        \n                    // load audio and marker files\n                    loader.load(assets).then(function(loaded) {\n                        var audioBuffer = loaded[0];\n                        var markerBuffer = loaded[1];\n        \n                        self.scheduledSegmentEngine.connect(WaveSurfer.WebAudio.audioContext.destination);\n        \n                        // create transport with play control and transported segment engine\n                        var _chord = markerBuffer.VI;\n                        var loopstart = _chord[0];\n                        var loopend = _chord[_chord.length - 1];\n        \n                        self.transportedSegmentEngine = new self.wavesAudio.SegmentEngine({\n                            buffer: audioBuffer,\n                            positionArray: _chord,\n                            durationArray: markerBuffer.duration,\n                            offsetArray: markerBuffer.offset,\n                            durationRel: 0.95,\n                            releaseAbs: 0.005,\n                            releaseRel: 0.005,\n                            cyclic: true,\n        \n                        });\n        \n                        self.transportedSegmentEngine.connect(WaveSurfer.WebAudio.audioContext.destination);\n                        //self.transport.add(self.transportedSegmentEngine);\n        \n        \n                        var playControl = new self.wavesAudio.PlayControl(self.transportedSegmentEngine);\n        \n                        console.log(loopend);\n                        playControl.setLoopBoundaries(loopstart, loopend);\n                        playControl.loop = true;\n        \n        \n                        playControl.speed = 1.0 * 2.0;\n                        playControl.seek(loopstart);\n                        \n                        playControl.start();\n                    });\n        \n        \n                }\n        */\n        /*\n                function setupMetronome() {\n                    self.metronome = new self.wavesAudio.Metronome();\n                    self.metronome.period = 60 / 86.49997514133682;\n                    self.metronome.clickFreq = 666;\n                    self.metronome.phase = 0;\n                    self.metronome.gain = 0;\n                    self.metronome.connect(WaveSurfer.WebAudio.audioContext.destination);\n                }\n        */\n        function setupGranular() {\n\n            // get scheduler and create scheduled granular engine\n            self.scheduler = self.wavesAudio.getScheduler();\n            self.scheduledGranularEngine = new self.wavesAudio.GranularEngine({\n                buffer: self.source.buffer\n            });\n            self.scheduledGranularEngine.connect(self.analyser);\n\n            // create transport with play control and transported granular engine\n            //console.log(self.transportedGranularEngine);\n            self.transportedGranularEngine = new self.wavesAudio.GranularEngine({\n                buffer: self.source.buffer,\n                cyclic: true\n            });\n\n            //self.transportedGranularEngine.connect(self.analyser);\n            //self.transport.add(self.transportedGranularEngine);\n\n            self.scheduler.add(self.scheduledGranularEngine);\n        }\n\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        //adjust for old browsers.\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.source.playbackRate.value = this.playbackRate;\n        this.source.buffer = this.buffer;\n        // _MD_ // this.source.connect(this.analyser);\n\n\n        // create transport and add engines\n        this.transport = new this.wavesAudio.Transport();\n\n        setupGranular();\n        //setupMetronome();\n        //setupSegmentPlayer();\n\n\n        //this.transport.add(this.metronome);\n\n        var scheduler = this.wavesAudio.getScheduler();\n        //scheduler.add(this.metronome);\n\n\n        // create play control\n        this.playControl = new this.wavesAudio.PlayControl(this.transport);\n    },\n\n    isPaused: function () {\n        return this.state !== this.states[this.PLAYING_STATE];\n    },\n\n    getDuration: function () {\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    },\n\n    ORIGseekTo: function (start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[this.FINISHED_STATE]) {\n            this.setState(this.PAUSED_STATE);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    },\n    seekTo: function (start, end) {\n        var doLoop = true;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n            doLoop = false;\n        }\n        //this.startPosition = start; \n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[this.FINISHED_STATE]) {\n            this.setState(this.PAUSED_STATE);\n        }\n        // When loop is true, an undesired behavior makes seeking \n        // beyond loopEnd change the position so that it fits inside \n        // loop region. This ugly fix turns off looping when seeking\n        // outside loop region. (Also when playing in reverse (speed < 0), \n        // the same happens at loopStart).\n        if (!doLoop) {\n            this.playControl.setLoopBoundaries(0, this.getDuration());\n        } else {\n            this.playControl.setLoopBoundaries(start, end);\n        }\n\n        this.playControl.seek(start);\n        this.playControl.loop = doLoop;\n\n        this.scheduledPause = end;\n\n        //console.log(\"start: \" + start + \" end: \" + end);   \n\n        return {\n            start: start,\n            end: end\n        };\n    },\n\n    ORIGgetPlayedTime: function () {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    },\n    getPlayedTime: function () {\n        //console.log(this.playControl.currentPosition);\n        this.scheduledGranularEngine.position = this.playControl.currentPosition;\n        return this.playControl.currentPosition; //.mod(this.getDuration());\n        //return (this.ac.currentTime - this.lastPlay) * this.playbackRate * this.playControl.speed;\n    },\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {Number} start Start offset in seconds,\n     * relative to the beginning of a clip.\n     * @param {Number} end When to stop\n     * relative to the beginning of a clip.\n     */\n    ORIGplay: function (start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        var adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start, end - start);\n\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n\n        this.setState(this.PLAYING_STATE);\n\n        this.fireEvent('play');\n    },\n    play: function (start, end) {\n        // need to re-create source on each playback\n        //this.createSource();\n\n        var adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        //this.source.start(0, start, end - start);\n        //play();\n\n        //scheduler.add(this.transportedGranularEngine);\n\n        this.playControl.start();\n        this.playControl.seek(start);\n\n        //console.log(start);\n\n        this.setState(this.PLAYING_STATE);\n\n        this.fireEvent('play');\n    },\n\n    /**\n     * Pauses the loaded audio.\n     */\n    ORIGpause: function () {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        this.source && this.source.stop(0);\n\n        this.setState(this.PAUSED_STATE);\n\n        this.fireEvent('pause');\n    },\n    pause: function () {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        //this.source && this.source.stop(0);\n\n        this.playControl.pause();\n        //scheduler.remove(this.transportedGranularEngine);\n\n\n        this.setState(this.PAUSED_STATE);\n\n        this.fireEvent('pause');\n    },\n\n    /**\n     *   Returns the current time in seconds relative to the audioclip's duration.\n     */\n    getCurrentTime: function () {\n        return this.state.getCurrentTime.call(this);\n    },\n\n    /**\n     *   Returns the current playback rate.\n     */\n    getPlaybackRate: function () {\n        return this.playbackRate;\n    },\n\n    /**\n     * Set the audio source playback rate.\n     */\n    ORIGsetPlaybackRate: function (value) {\n        value = value || 1;\n        if (this.isPaused()) {\n            this.playbackRate = value;\n        } else {\n            this.pause();\n            this.playbackRate = value;\n            this.play();\n        }\n    },\n    setPlaybackRate: function (value) {\n        value = value || 1;\n\n        if (this.playControl) {\n            this.playControl.speed = value;\n        }\n\n        if (this.isPaused()) {\n            this.playbackRate = value;\n        } else {\n            //this.pause();\n            this.playbackRate = value;\n            //this.play();\n        }\n    } /*,\n      setMetronome: function(tempo, phase) {\n         if (tempo > 0) this.metronome.period = (60 / tempo) / this.playbackRate;\n         console.log(\"met: \" + this.metronome.period + \" - playbackRate: \" + this.playbackRate);\n         //self.metronome.clickFreq = 666;\n         //if(phase != null) this.metronome.phase = phase;\n         //console.log(this.metronome);\n         this.metronome.resetTime();\n      }*/\n};\n\n__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].state = {};\n\n__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].state.playing = {\n    init: function () {\n        this.addOnAudioProcess();\n    },\n    getPlayedPercents: function () {\n        var duration = this.getDuration();\n        return this.getCurrentTime() / duration || 0;\n    },\n    getCurrentTime: function () {\n        //_MD_ //return this.startPosition + this.getPlayedTime();\n        return this.getPlayedTime();\n    }\n};\n\n__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].state.paused = {\n    ORIGinit: function () {\n        this.removeOnAudioProcess();\n    },\n    /* _MD_ */\n    init: function () {\n        this.removeOnAudioProcess();\n        if (this.playControl) {\n            this.playControl.pause();\n        }\n    },\n    /* _MD_ */\n    getPlayedPercents: function () {\n        var duration = this.getDuration();\n        return this.getCurrentTime() / duration || 0;\n    },\n    getCurrentTime: function () {\n        //_MD_//return this.startPosition;\n        return this.getPlayedTime(); //_MD__\n    }\n};\n\n__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"].state.finished = {\n    init: function () {\n        this.playControl.stop(); // _MD_ //\n        this.removeOnAudioProcess();\n        this.fireEvent('finish');\n    },\n    getPlayedPercents: function () {\n        return 1;\n    },\n    getCurrentTime: function () {\n        return this.getDuration();\n    }\n};\n\n__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"util\"].extend(__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"WebAudio\"], __WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"Observer\"]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    WaveSurfer: __WEBPACK_IMPORTED_MODULE_0_wavesurfer__\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3dlYmF1ZGlvX2lyY2FtLmpzP2ViYzkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyB0aGUgZ3JhbnVsYXJFbmdpbmUgaXMgdXNlZCBmb3IgcGl0Y2ggdHJhY2tpbmdcbi8vIEZJWE1FOiBGb3Igbm93IGdsb2JiYWx5IGRlY2xhcmVkLiBGaW5kIGJldHRlciBzb2x1dGlvbiFcbmltcG9ydCAqIGFzIFdhdmVTdXJmZXIgZnJvbSAnd2F2ZXN1cmZlcic7IC8vIF9NRF8gRG9uJ3Qgbm93IGlmIHRoaXMgaXMgY29ycmVjdCB3YXkgdG8gZG8gaXQ/IVxuXG5XYXZlU3VyZmVyLldlYkF1ZGlvID0ge1xuICAgIHNjcmlwdEJ1ZmZlclNpemU6IDI1NixcbiAgICBQTEFZSU5HX1NUQVRFOiAwLFxuICAgIFBBVVNFRF9TVEFURTogMSxcbiAgICBGSU5JU0hFRF9TVEFURTogMixcblxuICAgIHN1cHBvcnRzV2ViQXVkaW86IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gISEod2luZG93LkF1ZGlvQ29udGV4dCB8fCB3aW5kb3cud2Via2l0QXVkaW9Db250ZXh0KTtcblxuICAgIH0sXG5cbiAgICBnZXRBdWRpb0NvbnRleHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoIVdhdmVTdXJmZXIuV2ViQXVkaW8uYXVkaW9Db250ZXh0KSB7XG4gICAgICAgICAgICB0aGlzLndhdmVzQXVkaW8gPSByZXF1aXJlKCd3YXZlcy1hdWRpbycpOyAvLyBfTURfXG4gICAgICAgICAgICB0aGlzLndhdmVzTG9hZGVycyA9IHJlcXVpcmUoJ3dhdmVzLWxvYWRlcnMnKTtcbiAgICAgICAgICAgIC8vIF9NRF8gLy8gV2F2ZVN1cmZlci5XZWJBdWRpby5hdWRpb0NvbnRleHQgPSBuZXcgKFxuICAgICAgICAgICAgLy8gX01EXyAvLyAgICB3aW5kb3cuQXVkaW9Db250ZXh0IHx8IHdpbmRvdy53ZWJraXRBdWRpb0NvbnRleHRcbiAgICAgICAgICAgIC8vIF9NRF8gLy8pO1xuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcImdldEF1ZGlvQ29udGV4dDogXCIgKyB0aGlzLndhdmVzQXVkaW8uYXVkaW9Db250ZXh0KTsgLy8gX01EX1xuICAgICAgICAgICAgV2F2ZVN1cmZlci5XZWJBdWRpby5hdWRpb0NvbnRleHQgPSB0aGlzLndhdmVzQXVkaW8uYXVkaW9Db250ZXh0OyAvLyBfTURfXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gV2F2ZVN1cmZlci5XZWJBdWRpby5hdWRpb0NvbnRleHQ7XG4gICAgfSxcblxuICAgIGdldE9mZmxpbmVBdWRpb0NvbnRleHQ6IGZ1bmN0aW9uKHNhbXBsZVJhdGUpIHtcbiAgICAgICAgaWYgKCFXYXZlU3VyZmVyLldlYkF1ZGlvLm9mZmxpbmVBdWRpb0NvbnRleHQpIHtcbiAgICAgICAgICAgIFdhdmVTdXJmZXIuV2ViQXVkaW8ub2ZmbGluZUF1ZGlvQ29udGV4dCA9IG5ldyhcbiAgICAgICAgICAgICAgICB3aW5kb3cuT2ZmbGluZUF1ZGlvQ29udGV4dCB8fCB3aW5kb3cud2Via2l0T2ZmbGluZUF1ZGlvQ29udGV4dFxuICAgICAgICAgICAgKSgxLCAyLCBzYW1wbGVSYXRlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gV2F2ZVN1cmZlci5XZWJBdWRpby5vZmZsaW5lQXVkaW9Db250ZXh0O1xuICAgIH0sXG5cbiAgICBpbml0OiBmdW5jdGlvbihwYXJhbXMpIHtcbiAgICAgICAgdGhpcy5wYXJhbXMgPSBwYXJhbXM7XG4gICAgICAgIHRoaXMuYWMgPSBwYXJhbXMuYXVkaW9Db250ZXh0IHx8IHRoaXMuZ2V0QXVkaW9Db250ZXh0KCk7XG5cbiAgICAgICAgdGhpcy5sYXN0UGxheSA9IHRoaXMuYWMuY3VycmVudFRpbWU7XG4gICAgICAgIHRoaXMuc3RhcnRQb3NpdGlvbiA9IDA7XG4gICAgICAgIHRoaXMuc2NoZWR1bGVkUGF1c2UgPSBudWxsO1xuXG4gICAgICAgIHRoaXMuc3RhdGVzID0gW1xuICAgICAgICAgICAgT2JqZWN0LmNyZWF0ZShXYXZlU3VyZmVyLldlYkF1ZGlvLnN0YXRlLnBsYXlpbmcpLFxuICAgICAgICAgICAgT2JqZWN0LmNyZWF0ZShXYXZlU3VyZmVyLldlYkF1ZGlvLnN0YXRlLnBhdXNlZCksXG4gICAgICAgICAgICBPYmplY3QuY3JlYXRlKFdhdmVTdXJmZXIuV2ViQXVkaW8uc3RhdGUuZmluaXNoZWQpXG4gICAgICAgIF07XG5cbiAgICAgICAgdGhpcy5jcmVhdGVWb2x1bWVOb2RlKCk7XG4gICAgICAgIHRoaXMuY3JlYXRlU2NyaXB0Tm9kZSgpO1xuICAgICAgICB0aGlzLmNyZWF0ZUFuYWx5c2VyTm9kZSgpO1xuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUodGhpcy5QQVVTRURfU1RBVEUpO1xuICAgICAgICB0aGlzLnNldFBsYXliYWNrUmF0ZSh0aGlzLnBhcmFtcy5hdWRpb1JhdGUpO1xuICAgICAgICB0aGlzLnNldExlbmd0aCgwKTtcbiAgICB9LFxuXG4gICAgZGlzY29ubmVjdEZpbHRlcnM6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAodGhpcy5maWx0ZXJzKSB7XG4gICAgICAgICAgICB0aGlzLmZpbHRlcnMuZm9yRWFjaChmdW5jdGlvbihmaWx0ZXIpIHtcbiAgICAgICAgICAgICAgICBmaWx0ZXIgJiYgZmlsdGVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5maWx0ZXJzID0gbnVsbDtcbiAgICAgICAgICAgIC8vIFJlY29ubmVjdCBkaXJlY3QgcGF0aFxuICAgICAgICAgICAgdGhpcy5hbmFseXNlci5jb25uZWN0KHRoaXMuZ2Fpbk5vZGUpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIHNldFN0YXRlOiBmdW5jdGlvbihzdGF0ZSkge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZSAhPT0gdGhpcy5zdGF0ZXNbc3RhdGVdKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gdGhpcy5zdGF0ZXNbc3RhdGVdO1xuICAgICAgICAgICAgdGhpcy5zdGF0ZS5pbml0LmNhbGwodGhpcyk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8gVW5wYWNrZWQgZmlsdGVyc1xuICAgIHNldEZpbHRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMuc2V0RmlsdGVycyhbXS5zbGljZS5jYWxsKGFyZ3VtZW50cykpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBmaWx0ZXJzIFBhY2tlZCBpbHRlcnMgYXJyYXlcbiAgICAgKi9cbiAgICBzZXRGaWx0ZXJzOiBmdW5jdGlvbihmaWx0ZXJzKSB7XG4gICAgICAgIC8vIFJlbW92ZSBleGlzdGluZyBmaWx0ZXJzXG4gICAgICAgIHRoaXMuZGlzY29ubmVjdEZpbHRlcnMoKTtcblxuICAgICAgICAvLyBJbnNlcnQgZmlsdGVycyBpZiBmaWx0ZXIgYXJyYXkgbm90IGVtcHR5XG4gICAgICAgIGlmIChmaWx0ZXJzICYmIGZpbHRlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLmZpbHRlcnMgPSBmaWx0ZXJzO1xuXG4gICAgICAgICAgICAvLyBEaXNjb25uZWN0IGRpcmVjdCBwYXRoIGJlZm9yZSBpbnNlcnRpbmcgZmlsdGVyc1xuICAgICAgICAgICAgdGhpcy5hbmFseXNlci5kaXNjb25uZWN0KCk7XG5cbiAgICAgICAgICAgIC8vIENvbm5lY3QgZWFjaCBmaWx0ZXIgaW4gdHVyblxuICAgICAgICAgICAgZmlsdGVycy5yZWR1Y2UoZnVuY3Rpb24ocHJldiwgY3Vycikge1xuICAgICAgICAgICAgICAgIHByZXYuY29ubmVjdChjdXJyKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3VycjtcbiAgICAgICAgICAgIH0sIHRoaXMuYW5hbHlzZXIpLmNvbm5lY3QodGhpcy5nYWluTm9kZSk7XG4gICAgICAgIH1cblxuICAgIH0sXG5cbiAgICBjcmVhdGVTY3JpcHROb2RlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHRoaXMuYWMuY3JlYXRlU2NyaXB0UHJvY2Vzc29yKSB7XG4gICAgICAgICAgICB0aGlzLnNjcmlwdE5vZGUgPSB0aGlzLmFjLmNyZWF0ZVNjcmlwdFByb2Nlc3Nvcih0aGlzLnNjcmlwdEJ1ZmZlclNpemUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zY3JpcHROb2RlID0gdGhpcy5hYy5jcmVhdGVKYXZhU2NyaXB0Tm9kZSh0aGlzLnNjcmlwdEJ1ZmZlclNpemUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zY3JpcHROb2RlLmNvbm5lY3QodGhpcy5hYy5kZXN0aW5hdGlvbik7XG4gICAgfSxcblxuICAgIF9NRF9PUklHX2FkZE9uQXVkaW9Qcm9jZXNzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIG15ID0gdGhpcztcblxuICAgICAgICB0aGlzLnNjcmlwdE5vZGUub25hdWRpb3Byb2Nlc3MgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciB0aW1lID0gbXkuZ2V0Q3VycmVudFRpbWUoKTtcblxuICAgICAgICAgICAgaWYgKHRpbWUgPj0gbXkuZ2V0RHVyYXRpb24oKSkge1xuICAgICAgICAgICAgICAgIG15LnNldFN0YXRlKG15LkZJTklTSEVEX1NUQVRFKTtcbiAgICAgICAgICAgICAgICBteS5maXJlRXZlbnQoJ3BhdXNlJyk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRpbWUgPj0gbXkuc2NoZWR1bGVkUGF1c2UpIHtcbiAgICAgICAgICAgICAgICBteS5wYXVzZSgpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChteS5zdGF0ZSA9PT0gbXkuc3RhdGVzW215LlBMQVlJTkdfU1RBVEVdKSB7XG4gICAgICAgICAgICAgICAgbXkuZmlyZUV2ZW50KCdhdWRpb3Byb2Nlc3MnLCB0aW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9LFxuICAgIGFkZE9uQXVkaW9Qcm9jZXNzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIG15ID0gdGhpcztcblxuICAgICAgICB0aGlzLnNjcmlwdE5vZGUub25hdWRpb3Byb2Nlc3MgPSBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICB2YXIgdGltZSA9IG15LmdldEN1cnJlbnRUaW1lKCk7XG5cbiAgICAgICAgICAgIGlmICh0aW1lID49IG15LmdldER1cmF0aW9uKCkgfHwgdGltZSA8IDApIHtcbiAgICAgICAgICAgICAgICBteS5zZXRTdGF0ZShteS5GSU5JU0hFRF9TVEFURSk7XG4gICAgICAgICAgICAgICAgbXkuZmlyZUV2ZW50KCdwYXVzZScpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aW1lID49IG15LnNjaGVkdWxlZFBhdXNlICYmIG15LnBsYXlDb250cm9sICYmICFteS5wbGF5Q29udHJvbC5sb29wKSB7XG4gICAgICAgICAgICAgICAgbXkuc2V0U3RhdGUobXkuUEFVU0VEX1NUQVRFKTtcbiAgICAgICAgICAgICAgICBteS5maXJlRXZlbnQoJ3BhdXNlJyk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKG15LnN0YXRlID09PSBteS5zdGF0ZXNbbXkuUExBWUlOR19TVEFURV0pIHtcbiAgICAgICAgICAgICAgICBteS5maXJlRXZlbnQoJ2F1ZGlvcHJvY2VzcycsIHRpbWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH07XG4gICAgfSxcblxuICAgIHJlbW92ZU9uQXVkaW9Qcm9jZXNzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5zY3JpcHROb2RlLm9uYXVkaW9wcm9jZXNzID0gbnVsbDtcbiAgICB9LFxuXG4gICAgY3JlYXRlQW5hbHlzZXJOb2RlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5hbmFseXNlciA9IHRoaXMuYWMuY3JlYXRlQW5hbHlzZXIoKTtcbiAgICAgICAgdGhpcy5hbmFseXNlci5jb25uZWN0KHRoaXMuZ2Fpbk5vZGUpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgdGhlIGdhaW4gbm9kZSBuZWVkZWQgdG8gY29udHJvbCB0aGUgcGxheWJhY2sgdm9sdW1lLlxuICAgICAqL1xuICAgIGNyZWF0ZVZvbHVtZU5vZGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAvLyBDcmVhdGUgZ2FpbiBub2RlIHVzaW5nIHRoZSBBdWRpb0NvbnRleHRcbiAgICAgICAgaWYgKHRoaXMuYWMuY3JlYXRlR2Fpbikge1xuICAgICAgICAgICAgdGhpcy5nYWluTm9kZSA9IHRoaXMuYWMuY3JlYXRlR2FpbigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5nYWluTm9kZSA9IHRoaXMuYWMuY3JlYXRlR2Fpbk5vZGUoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBBZGQgdGhlIGdhaW4gbm9kZSB0byB0aGUgZ3JhcGhcbiAgICAgICAgdGhpcy5nYWluTm9kZS5jb25uZWN0KHRoaXMuYWMuZGVzdGluYXRpb24pO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGdhaW4gdG8gYSBuZXcgdmFsdWUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge051bWJlcn0gbmV3R2FpbiBUaGUgbmV3IGdhaW4sIGEgZmxvYXRpbmcgcG9pbnQgdmFsdWVcbiAgICAgKiBiZXR3ZWVuIDAgYW5kIDEuIDAgYmVpbmcgbm8gZ2FpbiBhbmQgMSBiZWluZyBtYXhpbXVtIGdhaW4uXG4gICAgICovXG4gICAgc2V0Vm9sdW1lOiBmdW5jdGlvbihuZXdHYWluKSB7XG4gICAgICAgIHRoaXMuZ2Fpbk5vZGUuZ2Fpbi52YWx1ZSA9IG5ld0dhaW47XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgY3VycmVudCBnYWluLlxuICAgICAqXG4gICAgICogQHJldHVybnMge051bWJlcn0gVGhlIGN1cnJlbnQgZ2FpbiwgYSBmbG9hdGluZyBwb2ludCB2YWx1ZVxuICAgICAqIGJldHdlZW4gMCBhbmQgMS4gMCBiZWluZyBubyBnYWluIGFuZCAxIGJlaW5nIG1heGltdW0gZ2Fpbi5cbiAgICAgKi9cbiAgICBnZXRWb2x1bWU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nYWluTm9kZS5nYWluLnZhbHVlO1xuICAgIH0sXG5cbiAgICBkZWNvZGVBcnJheUJ1ZmZlcjogZnVuY3Rpb24oYXJyYXlidWZmZXIsIGNhbGxiYWNrLCBlcnJiYWNrKSB7XG4gICAgICAgIGlmICghdGhpcy5vZmZsaW5lQWMpIHtcbiAgICAgICAgICAgIHRoaXMub2ZmbGluZUFjID0gdGhpcy5nZXRPZmZsaW5lQXVkaW9Db250ZXh0KHRoaXMuYWMgPyB0aGlzLmFjLnNhbXBsZVJhdGUgOiA0NDEwMCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5vZmZsaW5lQWMuZGVjb2RlQXVkaW9EYXRhKGFycmF5YnVmZmVyLCAoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgY2FsbGJhY2soZGF0YSk7XG4gICAgICAgIH0pLmJpbmQodGhpcyksIGVycmJhY2spO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTZXQgcHJlLWRlY29kZWQgcGVha3MuXG4gICAgICovXG4gICAgc2V0UGVha3M6IGZ1bmN0aW9uKHBlYWtzKSB7XG4gICAgICAgIHRoaXMucGVha3MgPSBwZWFrcztcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogU2V0IHRoZSByZW5kZXJlZCBsZW5ndGggKGRpZmZlcmVudCBmcm9tIHRoZSBsZW5ndGggb2YgdGhlIGF1ZGlvKS5cbiAgICAgKi9cbiAgICBzZXRMZW5ndGg6IGZ1bmN0aW9uKGxlbmd0aCkge1xuICAgICAgICAvLyBObyByZXNpemUsIHdlIGNhbiBwcmVzZXJ2ZSB0aGUgY2FjaGVkIHBlYWtzLlxuICAgICAgICBpZiAodGhpcy5tZXJnZWRQZWFrcyAmJiBsZW5ndGggPT0gKCgyICogdGhpcy5tZXJnZWRQZWFrcy5sZW5ndGggLSAxKSArIDIpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNwbGl0UGVha3MgPSBbXTtcbiAgICAgICAgdGhpcy5tZXJnZWRQZWFrcyA9IFtdO1xuICAgICAgICAvLyBTZXQgdGhlIGxhc3QgZWxlbWVudCBvZiB0aGUgc3BhcnNlIGFycmF5IHNvIHRoZSBwZWFrIGFycmF5cyBhcmVcbiAgICAgICAgLy8gYXBwcm9wcmlhdGVseSBzaXplZCBmb3Igb3RoZXIgY2FsY3VsYXRpb25zLlxuICAgICAgICB2YXIgY2hhbm5lbHMgPSB0aGlzLmJ1ZmZlciA/IHRoaXMuYnVmZmVyLm51bWJlck9mQ2hhbm5lbHMgOiAxO1xuICAgICAgICBmb3IgKHZhciBjID0gMDsgYyA8IGNoYW5uZWxzOyBjKyspIHtcbiAgICAgICAgICAgIHRoaXMuc3BsaXRQZWFrc1tjXSA9IFtdO1xuICAgICAgICAgICAgdGhpcy5zcGxpdFBlYWtzW2NdWzIgKiAobGVuZ3RoIC0gMSldID0gMDtcbiAgICAgICAgICAgIHRoaXMuc3BsaXRQZWFrc1tjXVsyICogKGxlbmd0aCAtIDEpICsgMV0gPSAwO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubWVyZ2VkUGVha3NbMiAqIChsZW5ndGggLSAxKV0gPSAwO1xuICAgICAgICB0aGlzLm1lcmdlZFBlYWtzWzIgKiAobGVuZ3RoIC0gMSkgKyAxXSA9IDA7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIENvbXB1dGUgdGhlIG1heCBhbmQgbWluIHZhbHVlIG9mIHRoZSB3YXZlZm9ybSB3aGVuIGJyb2tlbiBpbnRvXG4gICAgICogPGxlbmd0aD4gc3VicmFuZ2VzLlxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBsZW5ndGggSG93IG1hbnkgc3VicmFuZ2VzIHRvIGJyZWFrIHRoZSB3YXZlZm9ybSBpbnRvLlxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBmaXJzdCBGaXJzdCBzYW1wbGUgaW4gdGhlIHJlcXVpcmVkIHJhbmdlLlxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBsYXN0IExhc3Qgc2FtcGxlIGluIHRoZSByZXF1aXJlZCByYW5nZS5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IEFycmF5IG9mIDIqPGxlbmd0aD4gcGVha3Mgb3IgYXJyYXkgb2YgYXJyYXlzXG4gICAgICogb2YgcGVha3MgY29uc2lzdGluZyBvZiAobWF4LCBtaW4pIHZhbHVlcyBmb3IgZWFjaCBzdWJyYW5nZS5cbiAgICAgKi9cbiAgICBnZXRQZWFrczogZnVuY3Rpb24obGVuZ3RoLCBmaXJzdCwgbGFzdCkge1xuICAgICAgICBpZiAodGhpcy5wZWFrcykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucGVha3M7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNldExlbmd0aChsZW5ndGgpO1xuXG4gICAgICAgIHZhciBzYW1wbGVTaXplID0gdGhpcy5idWZmZXIubGVuZ3RoIC8gbGVuZ3RoO1xuICAgICAgICB2YXIgc2FtcGxlU3RlcCA9IH5+KHNhbXBsZVNpemUgLyAxMCkgfHwgMTtcbiAgICAgICAgdmFyIGNoYW5uZWxzID0gdGhpcy5idWZmZXIubnVtYmVyT2ZDaGFubmVscztcblxuICAgICAgICBmb3IgKHZhciBjID0gMDsgYyA8IGNoYW5uZWxzOyBjKyspIHtcbiAgICAgICAgICAgIHZhciBwZWFrcyA9IHRoaXMuc3BsaXRQZWFrc1tjXTtcbiAgICAgICAgICAgIHZhciBjaGFuID0gdGhpcy5idWZmZXIuZ2V0Q2hhbm5lbERhdGEoYyk7XG5cbiAgICAgICAgICAgIGZvciAodmFyIGkgPSBmaXJzdDsgaSA8PSBsYXN0OyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSB+fihpICogc2FtcGxlU2l6ZSk7XG4gICAgICAgICAgICAgICAgdmFyIGVuZCA9IH5+KHN0YXJ0ICsgc2FtcGxlU2l6ZSk7XG4gICAgICAgICAgICAgICAgdmFyIG1pbiA9IDA7XG4gICAgICAgICAgICAgICAgdmFyIG1heCA9IDA7XG5cbiAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gc3RhcnQ7IGogPCBlbmQ7IGogKz0gc2FtcGxlU3RlcCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBjaGFuW2pdO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA+IG1heCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWF4ID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgPCBtaW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbiA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcGVha3NbMiAqIGldID0gbWF4O1xuICAgICAgICAgICAgICAgIHBlYWtzWzIgKiBpICsgMV0gPSBtaW47XG5cbiAgICAgICAgICAgICAgICBpZiAoYyA9PSAwIHx8IG1heCA+IHRoaXMubWVyZ2VkUGVha3NbMiAqIGldKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWVyZ2VkUGVha3NbMiAqIGldID0gbWF4O1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChjID09IDAgfHwgbWluIDwgdGhpcy5tZXJnZWRQZWFrc1syICogaSArIDFdKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWVyZ2VkUGVha3NbMiAqIGkgKyAxXSA9IG1pbjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdGhpcy5wYXJhbXMuc3BsaXRDaGFubmVscyA/IHRoaXMuc3BsaXRQZWFrcyA6IHRoaXMubWVyZ2VkUGVha3M7XG4gICAgfSxcblxuICAgIGdldFBsYXllZFBlcmNlbnRzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuZ2V0UGxheWVkUGVyY2VudHMuY2FsbCh0aGlzKTtcbiAgICB9LFxuXG4gICAgZGlzY29ubmVjdFNvdXJjZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLnNvdXJjZSkge1xuICAgICAgICAgICAgdGhpcy5zb3VyY2UuZGlzY29ubmVjdCgpO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIGRlc3Ryb3k6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoIXRoaXMuaXNQYXVzZWQoKSkge1xuICAgICAgICAgICAgdGhpcy5wYXVzZSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudW5BbGwoKTtcbiAgICAgICAgdGhpcy5idWZmZXIgPSBudWxsO1xuICAgICAgICB0aGlzLmRpc2Nvbm5lY3RGaWx0ZXJzKCk7XG4gICAgICAgIHRoaXMuZGlzY29ubmVjdFNvdXJjZSgpO1xuICAgICAgICB0aGlzLmdhaW5Ob2RlLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgdGhpcy5zY3JpcHROb2RlLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgdGhpcy5hbmFseXNlci5kaXNjb25uZWN0KCk7XG4gICAgICAgIC8vIGNsb3NlIHRoZSBhdWRpb0NvbnRleHQgaWYgY2xvc2VBdWRpb0NvbnRleHQgb3B0aW9uIGlzIHNldCB0byB0cnVlXG4gICAgICAgIGlmICh0aGlzLnBhcmFtcy5jbG9zZUF1ZGlvQ29udGV4dCkge1xuICAgICAgICAgICAgLy8gY2hlY2sgaWYgYnJvd3NlciBzdXBwb3J0cyBBdWRpb0NvbnRleHQuY2xvc2UoKVxuICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmFjLmNsb3NlID09PSAnZnVuY3Rpb24nICYmIHRoaXMuYWMuc3RhdGUgIT0gJ2Nsb3NlZCcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFjLmNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBjbGVhciB0aGUgcmVmZXJlbmNlIHRvIHRoZSBhdWRpb2NvbnRleHRcbiAgICAgICAgICAgIHRoaXMuYWMgPSBudWxsO1xuICAgICAgICAgICAgLy8gY2xlYXIgdGhlIGFjdHVhbCBhdWRpb2NvbnRleHQsIGVpdGhlciBwYXNzZWQgYXMgcGFyYW0gb3IgdGhlXG4gICAgICAgICAgICAvLyBnbG9iYWwgc2luZ2xldG9uXG4gICAgICAgICAgICBpZiAoIXRoaXMucGFyYW1zLmF1ZGlvQ29udGV4dCkge1xuICAgICAgICAgICAgICAgIFdhdmVTdXJmZXIuV2ViQXVkaW8uYXVkaW9Db250ZXh0ID0gbnVsbDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMuYXVkaW9Db250ZXh0ID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGNsZWFyIHRoZSBvZmZsaW5lQXVkaW9Db250ZXh0XG4gICAgICAgICAgICBXYXZlU3VyZmVyLldlYkF1ZGlvLm9mZmxpbmVBdWRpb0NvbnRleHQgPSBudWxsO1xuICAgICAgICB9XG4gICAgfSxcblxuICAgIGxvYWQ6IGZ1bmN0aW9uKGJ1ZmZlcikge1xuICAgICAgICB0aGlzLnN0YXJ0UG9zaXRpb24gPSAwO1xuICAgICAgICB0aGlzLmxhc3RQbGF5ID0gdGhpcy5hYy5jdXJyZW50VGltZTtcbiAgICAgICAgdGhpcy5idWZmZXIgPSBidWZmZXI7XG4gICAgICAgIHRoaXMuY3JlYXRlU291cmNlKCk7XG4gICAgfSxcblxuICAgIGNyZWF0ZVNvdXJjZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcbi8qXG4gICAgICAgIGZ1bmN0aW9uIHNldHVwU2VnbWVudFBsYXllcigpIHtcblxuICAgICAgICAgICAgdmFyIGF1ZGlvQ29udGV4dCA9IHNlbGYud2F2ZXNBdWRpby5hdWRpb0NvbnRleHQ7XG4gICAgICAgICAgICB2YXIgbG9hZGVyID0gbmV3IHNlbGYud2F2ZXNMb2FkZXJzLlN1cGVyTG9hZGVyKCk7IC8vIGluc3RhbnRpYXRlIGxvYWRlclxuXG4gICAgICAgICAgICB2YXIgYXNzZXRzID0gW1xuICAgICAgICAgICAgICAgIFwiLi9hc3NldHMvM180X0d1aXRhcjMwYnBtOTZraHozMmJpdC53YXZcIixcbiAgICAgICAgICAgICAgICBcIi4vYXNzZXRzLzNfNF9ndWl0YXItbG9vcC5qc29uXCJcbiAgICAgICAgICAgIF07XG5cbiAgICAgICAgICAgIC8vIGxvYWQgYXVkaW8gYW5kIG1hcmtlciBmaWxlc1xuICAgICAgICAgICAgbG9hZGVyLmxvYWQoYXNzZXRzKS50aGVuKGZ1bmN0aW9uKGxvYWRlZCkge1xuICAgICAgICAgICAgICAgIHZhciBhdWRpb0J1ZmZlciA9IGxvYWRlZFswXTtcbiAgICAgICAgICAgICAgICB2YXIgbWFya2VyQnVmZmVyID0gbG9hZGVkWzFdO1xuXG4gICAgICAgICAgICAgICAgc2VsZi5zY2hlZHVsZWRTZWdtZW50RW5naW5lLmNvbm5lY3QoV2F2ZVN1cmZlci5XZWJBdWRpby5hdWRpb0NvbnRleHQuZGVzdGluYXRpb24pO1xuXG4gICAgICAgICAgICAgICAgLy8gY3JlYXRlIHRyYW5zcG9ydCB3aXRoIHBsYXkgY29udHJvbCBhbmQgdHJhbnNwb3J0ZWQgc2VnbWVudCBlbmdpbmVcbiAgICAgICAgICAgICAgICB2YXIgX2Nob3JkID0gbWFya2VyQnVmZmVyLlZJO1xuICAgICAgICAgICAgICAgIHZhciBsb29wc3RhcnQgPSBfY2hvcmRbMF07XG4gICAgICAgICAgICAgICAgdmFyIGxvb3BlbmQgPSBfY2hvcmRbX2Nob3JkLmxlbmd0aCAtIDFdO1xuXG4gICAgICAgICAgICAgICAgc2VsZi50cmFuc3BvcnRlZFNlZ21lbnRFbmdpbmUgPSBuZXcgc2VsZi53YXZlc0F1ZGlvLlNlZ21lbnRFbmdpbmUoe1xuICAgICAgICAgICAgICAgICAgICBidWZmZXI6IGF1ZGlvQnVmZmVyLFxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbkFycmF5OiBfY2hvcmQsXG4gICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uQXJyYXk6IG1hcmtlckJ1ZmZlci5kdXJhdGlvbixcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0QXJyYXk6IG1hcmtlckJ1ZmZlci5vZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uUmVsOiAwLjk1LFxuICAgICAgICAgICAgICAgICAgICByZWxlYXNlQWJzOiAwLjAwNSxcbiAgICAgICAgICAgICAgICAgICAgcmVsZWFzZVJlbDogMC4wMDUsXG4gICAgICAgICAgICAgICAgICAgIGN5Y2xpYzogdHJ1ZSxcblxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgc2VsZi50cmFuc3BvcnRlZFNlZ21lbnRFbmdpbmUuY29ubmVjdChXYXZlU3VyZmVyLldlYkF1ZGlvLmF1ZGlvQ29udGV4dC5kZXN0aW5hdGlvbik7XG4gICAgICAgICAgICAgICAgLy9zZWxmLnRyYW5zcG9ydC5hZGQoc2VsZi50cmFuc3BvcnRlZFNlZ21lbnRFbmdpbmUpO1xuXG5cbiAgICAgICAgICAgICAgICB2YXIgcGxheUNvbnRyb2wgPSBuZXcgc2VsZi53YXZlc0F1ZGlvLlBsYXlDb250cm9sKHNlbGYudHJhbnNwb3J0ZWRTZWdtZW50RW5naW5lKTtcblxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGxvb3BlbmQpO1xuICAgICAgICAgICAgICAgIHBsYXlDb250cm9sLnNldExvb3BCb3VuZGFyaWVzKGxvb3BzdGFydCwgbG9vcGVuZCk7XG4gICAgICAgICAgICAgICAgcGxheUNvbnRyb2wubG9vcCA9IHRydWU7XG5cblxuICAgICAgICAgICAgICAgIHBsYXlDb250cm9sLnNwZWVkID0gMS4wICogMi4wO1xuICAgICAgICAgICAgICAgIHBsYXlDb250cm9sLnNlZWsobG9vcHN0YXJ0KTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBwbGF5Q29udHJvbC5zdGFydCgpO1xuICAgICAgICAgICAgfSk7XG5cblxuICAgICAgICB9XG4qL1xuLypcbiAgICAgICAgZnVuY3Rpb24gc2V0dXBNZXRyb25vbWUoKSB7XG4gICAgICAgICAgICBzZWxmLm1ldHJvbm9tZSA9IG5ldyBzZWxmLndhdmVzQXVkaW8uTWV0cm9ub21lKCk7XG4gICAgICAgICAgICBzZWxmLm1ldHJvbm9tZS5wZXJpb2QgPSA2MCAvIDg2LjQ5OTk3NTE0MTMzNjgyO1xuICAgICAgICAgICAgc2VsZi5tZXRyb25vbWUuY2xpY2tGcmVxID0gNjY2O1xuICAgICAgICAgICAgc2VsZi5tZXRyb25vbWUucGhhc2UgPSAwO1xuICAgICAgICAgICAgc2VsZi5tZXRyb25vbWUuZ2FpbiA9IDA7XG4gICAgICAgICAgICBzZWxmLm1ldHJvbm9tZS5jb25uZWN0KFdhdmVTdXJmZXIuV2ViQXVkaW8uYXVkaW9Db250ZXh0LmRlc3RpbmF0aW9uKTtcbiAgICAgICAgfVxuKi9cbiAgICAgICAgZnVuY3Rpb24gc2V0dXBHcmFudWxhcigpIHtcblxuICAgICAgICAgICAgLy8gZ2V0IHNjaGVkdWxlciBhbmQgY3JlYXRlIHNjaGVkdWxlZCBncmFudWxhciBlbmdpbmVcbiAgICAgICAgICAgIHNlbGYuc2NoZWR1bGVyID0gc2VsZi53YXZlc0F1ZGlvLmdldFNjaGVkdWxlcigpO1xuICAgICAgICAgICAgc2VsZi5zY2hlZHVsZWRHcmFudWxhckVuZ2luZSA9IG5ldyBzZWxmLndhdmVzQXVkaW8uR3JhbnVsYXJFbmdpbmUoe1xuICAgICAgICAgICAgICAgIGJ1ZmZlcjogc2VsZi5zb3VyY2UuYnVmZmVyXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHNlbGYuc2NoZWR1bGVkR3JhbnVsYXJFbmdpbmUuY29ubmVjdChzZWxmLmFuYWx5c2VyKTtcblxuICAgICAgICAgICAgLy8gY3JlYXRlIHRyYW5zcG9ydCB3aXRoIHBsYXkgY29udHJvbCBhbmQgdHJhbnNwb3J0ZWQgZ3JhbnVsYXIgZW5naW5lXG4gICAgICAgICAgICAvL2NvbnNvbGUubG9nKHNlbGYudHJhbnNwb3J0ZWRHcmFudWxhckVuZ2luZSk7XG4gICAgICAgICAgICBzZWxmLnRyYW5zcG9ydGVkR3JhbnVsYXJFbmdpbmUgPSBuZXcgc2VsZi53YXZlc0F1ZGlvLkdyYW51bGFyRW5naW5lKHtcbiAgICAgICAgICAgICAgICBidWZmZXI6IHNlbGYuc291cmNlLmJ1ZmZlcixcbiAgICAgICAgICAgICAgICBjeWNsaWM6IHRydWVcbiAgICAgICAgICAgIH0pO1xuXG5cblxuICAgICAgICAgICAgLy9zZWxmLnRyYW5zcG9ydGVkR3JhbnVsYXJFbmdpbmUuY29ubmVjdChzZWxmLmFuYWx5c2VyKTtcbiAgICAgICAgICAgIC8vc2VsZi50cmFuc3BvcnQuYWRkKHNlbGYudHJhbnNwb3J0ZWRHcmFudWxhckVuZ2luZSk7XG5cbiAgICAgICAgICAgIHNlbGYuc2NoZWR1bGVyLmFkZChzZWxmLnNjaGVkdWxlZEdyYW51bGFyRW5naW5lKTtcblxuXG5cbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZGlzY29ubmVjdFNvdXJjZSgpO1xuICAgICAgICB0aGlzLnNvdXJjZSA9IHRoaXMuYWMuY3JlYXRlQnVmZmVyU291cmNlKCk7XG5cbiAgICAgICAgLy9hZGp1c3QgZm9yIG9sZCBicm93c2Vycy5cbiAgICAgICAgdGhpcy5zb3VyY2Uuc3RhcnQgPSB0aGlzLnNvdXJjZS5zdGFydCB8fCB0aGlzLnNvdXJjZS5ub3RlR3JhaW5PbjtcbiAgICAgICAgdGhpcy5zb3VyY2Uuc3RvcCA9IHRoaXMuc291cmNlLnN0b3AgfHwgdGhpcy5zb3VyY2Uubm90ZU9mZjtcblxuICAgICAgICB0aGlzLnNvdXJjZS5wbGF5YmFja1JhdGUudmFsdWUgPSB0aGlzLnBsYXliYWNrUmF0ZTtcbiAgICAgICAgdGhpcy5zb3VyY2UuYnVmZmVyID0gdGhpcy5idWZmZXI7XG4gICAgICAgIC8vIF9NRF8gLy8gdGhpcy5zb3VyY2UuY29ubmVjdCh0aGlzLmFuYWx5c2VyKTtcblxuXG4gICAgICAgIC8vIGNyZWF0ZSB0cmFuc3BvcnQgYW5kIGFkZCBlbmdpbmVzXG4gICAgICAgIHRoaXMudHJhbnNwb3J0ID0gbmV3IHRoaXMud2F2ZXNBdWRpby5UcmFuc3BvcnQoKTtcblxuICAgICAgICBzZXR1cEdyYW51bGFyKCk7XG4gICAgICAgIC8vc2V0dXBNZXRyb25vbWUoKTtcbiAgICAgICAgLy9zZXR1cFNlZ21lbnRQbGF5ZXIoKTtcblxuXG5cbiAgICAgICAgLy90aGlzLnRyYW5zcG9ydC5hZGQodGhpcy5tZXRyb25vbWUpO1xuXG4gICAgICAgIHZhciBzY2hlZHVsZXIgPSB0aGlzLndhdmVzQXVkaW8uZ2V0U2NoZWR1bGVyKCk7XG4gICAgICAgIC8vc2NoZWR1bGVyLmFkZCh0aGlzLm1ldHJvbm9tZSk7XG5cblxuICAgICAgICAvLyBjcmVhdGUgcGxheSBjb250cm9sXG4gICAgICAgIHRoaXMucGxheUNvbnRyb2wgPSBuZXcgdGhpcy53YXZlc0F1ZGlvLlBsYXlDb250cm9sKHRoaXMudHJhbnNwb3J0KTtcblxuICAgIH0sXG5cbiAgICBpc1BhdXNlZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlICE9PSB0aGlzLnN0YXRlc1t0aGlzLlBMQVlJTkdfU1RBVEVdO1xuICAgIH0sXG5cbiAgICBnZXREdXJhdGlvbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICghdGhpcy5idWZmZXIpIHtcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmJ1ZmZlci5kdXJhdGlvbjtcbiAgICB9LFxuXG4gICAgT1JJR3NlZWtUbzogZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICAgICAgICBpZiAoIXRoaXMuYnVmZmVyKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNjaGVkdWxlZFBhdXNlID0gbnVsbDtcblxuICAgICAgICBpZiAoc3RhcnQgPT0gbnVsbCkge1xuICAgICAgICAgICAgc3RhcnQgPSB0aGlzLmdldEN1cnJlbnRUaW1lKCk7XG4gICAgICAgICAgICBpZiAoc3RhcnQgPj0gdGhpcy5nZXREdXJhdGlvbigpKSB7XG4gICAgICAgICAgICAgICAgc3RhcnQgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChlbmQgPT0gbnVsbCkge1xuICAgICAgICAgICAgZW5kID0gdGhpcy5nZXREdXJhdGlvbigpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zdGFydFBvc2l0aW9uID0gc3RhcnQ7XG4gICAgICAgIHRoaXMubGFzdFBsYXkgPSB0aGlzLmFjLmN1cnJlbnRUaW1lO1xuXG4gICAgICAgIGlmICh0aGlzLnN0YXRlID09PSB0aGlzLnN0YXRlc1t0aGlzLkZJTklTSEVEX1NUQVRFXSkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh0aGlzLlBBVVNFRF9TVEFURSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhcnQ6IHN0YXJ0LFxuICAgICAgICAgICAgZW5kOiBlbmRcbiAgICAgICAgfTtcbiAgICB9LFxuICAgIHNlZWtUbzogZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICAgICAgICB2YXIgZG9Mb29wID0gdHJ1ZTtcblxuICAgICAgICBpZiAoc3RhcnQgPT0gbnVsbCkge1xuICAgICAgICAgICAgc3RhcnQgPSB0aGlzLmdldEN1cnJlbnRUaW1lKCk7XG4gICAgICAgICAgICBpZiAoc3RhcnQgPj0gdGhpcy5nZXREdXJhdGlvbigpKSB7XG4gICAgICAgICAgICAgICAgc3RhcnQgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChlbmQgPT0gbnVsbCkge1xuICAgICAgICAgICAgZW5kID0gdGhpcy5nZXREdXJhdGlvbigpO1xuICAgICAgICAgICAgZG9Mb29wID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgLy90aGlzLnN0YXJ0UG9zaXRpb24gPSBzdGFydDsgXG4gICAgICAgIHRoaXMuc3RhcnRQb3NpdGlvbiA9IDA7XG4gICAgICAgIHRoaXMubGFzdFBsYXkgPSB0aGlzLmFjLmN1cnJlbnRUaW1lO1xuXG4gICAgICAgIGlmICh0aGlzLnN0YXRlID09PSB0aGlzLnN0YXRlc1t0aGlzLkZJTklTSEVEX1NUQVRFXSkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh0aGlzLlBBVVNFRF9TVEFURSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gV2hlbiBsb29wIGlzIHRydWUsIGFuIHVuZGVzaXJlZCBiZWhhdmlvciBtYWtlcyBzZWVraW5nIFxuICAgICAgICAvLyBiZXlvbmQgbG9vcEVuZCBjaGFuZ2UgdGhlIHBvc2l0aW9uIHNvIHRoYXQgaXQgZml0cyBpbnNpZGUgXG4gICAgICAgIC8vIGxvb3AgcmVnaW9uLiBUaGlzIHVnbHkgZml4IHR1cm5zIG9mZiBsb29waW5nIHdoZW4gc2Vla2luZ1xuICAgICAgICAvLyBvdXRzaWRlIGxvb3AgcmVnaW9uLiAoQWxzbyB3aGVuIHBsYXlpbmcgaW4gcmV2ZXJzZSAoc3BlZWQgPCAwKSwgXG4gICAgICAgIC8vIHRoZSBzYW1lIGhhcHBlbnMgYXQgbG9vcFN0YXJ0KS5cbiAgICAgICAgaWYgKCFkb0xvb3ApIHtcbiAgICAgICAgICAgIHRoaXMucGxheUNvbnRyb2wuc2V0TG9vcEJvdW5kYXJpZXMoMCwgdGhpcy5nZXREdXJhdGlvbigpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucGxheUNvbnRyb2wuc2V0TG9vcEJvdW5kYXJpZXMoc3RhcnQsIGVuZCk7XG4gICAgICAgIH1cblxuXG4gICAgICAgIHRoaXMucGxheUNvbnRyb2wuc2VlayhzdGFydCk7XG4gICAgICAgIHRoaXMucGxheUNvbnRyb2wubG9vcCA9IGRvTG9vcDtcblxuICAgICAgICB0aGlzLnNjaGVkdWxlZFBhdXNlID0gZW5kO1xuXG4gICAgICAgIC8vY29uc29sZS5sb2coXCJzdGFydDogXCIgKyBzdGFydCArIFwiIGVuZDogXCIgKyBlbmQpOyAgIFxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGFydDogc3RhcnQsXG4gICAgICAgICAgICBlbmQ6IGVuZFxuICAgICAgICB9O1xuICAgIH0sXG5cbiAgICBPUklHZ2V0UGxheWVkVGltZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5hYy5jdXJyZW50VGltZSAtIHRoaXMubGFzdFBsYXkpICogdGhpcy5wbGF5YmFja1JhdGU7XG4gICAgfSxcbiAgICBnZXRQbGF5ZWRUaW1lOiBmdW5jdGlvbigpIHtcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLnBsYXlDb250cm9sLmN1cnJlbnRQb3NpdGlvbik7XG4gICAgICAgIHRoaXMuc2NoZWR1bGVkR3JhbnVsYXJFbmdpbmUucG9zaXRpb24gPSB0aGlzLnBsYXlDb250cm9sLmN1cnJlbnRQb3NpdGlvbjtcbiAgICAgICAgcmV0dXJuICh0aGlzLnBsYXlDb250cm9sLmN1cnJlbnRQb3NpdGlvbik7IC8vLm1vZCh0aGlzLmdldER1cmF0aW9uKCkpO1xuICAgICAgICAvL3JldHVybiAodGhpcy5hYy5jdXJyZW50VGltZSAtIHRoaXMubGFzdFBsYXkpICogdGhpcy5wbGF5YmFja1JhdGUgKiB0aGlzLnBsYXlDb250cm9sLnNwZWVkO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBQbGF5cyB0aGUgbG9hZGVkIGF1ZGlvIHJlZ2lvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7TnVtYmVyfSBzdGFydCBTdGFydCBvZmZzZXQgaW4gc2Vjb25kcyxcbiAgICAgKiByZWxhdGl2ZSB0byB0aGUgYmVnaW5uaW5nIG9mIGEgY2xpcC5cbiAgICAgKiBAcGFyYW0ge051bWJlcn0gZW5kIFdoZW4gdG8gc3RvcFxuICAgICAqIHJlbGF0aXZlIHRvIHRoZSBiZWdpbm5pbmcgb2YgYSBjbGlwLlxuICAgICAqL1xuICAgIE9SSUdwbGF5OiBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gICAgICAgIGlmICghdGhpcy5idWZmZXIpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG5lZWQgdG8gcmUtY3JlYXRlIHNvdXJjZSBvbiBlYWNoIHBsYXliYWNrXG4gICAgICAgIHRoaXMuY3JlYXRlU291cmNlKCk7XG5cbiAgICAgICAgdmFyIGFkanVzdGVkVGltZSA9IHRoaXMuc2Vla1RvKHN0YXJ0LCBlbmQpO1xuXG4gICAgICAgIHN0YXJ0ID0gYWRqdXN0ZWRUaW1lLnN0YXJ0O1xuICAgICAgICBlbmQgPSBhZGp1c3RlZFRpbWUuZW5kO1xuXG4gICAgICAgIHRoaXMuc2NoZWR1bGVkUGF1c2UgPSBlbmQ7XG5cbiAgICAgICAgdGhpcy5zb3VyY2Uuc3RhcnQoMCwgc3RhcnQsIGVuZCAtIHN0YXJ0KTtcblxuICAgICAgICBpZiAodGhpcy5hYy5zdGF0ZSA9PSAnc3VzcGVuZGVkJykge1xuICAgICAgICAgICAgdGhpcy5hYy5yZXN1bWUgJiYgdGhpcy5hYy5yZXN1bWUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUodGhpcy5QTEFZSU5HX1NUQVRFKTtcblxuICAgICAgICB0aGlzLmZpcmVFdmVudCgncGxheScpO1xuICAgIH0sXG4gICAgcGxheTogZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICAgICAgICAvLyBuZWVkIHRvIHJlLWNyZWF0ZSBzb3VyY2Ugb24gZWFjaCBwbGF5YmFja1xuICAgICAgICAvL3RoaXMuY3JlYXRlU291cmNlKCk7XG5cbiAgICAgICAgdmFyIGFkanVzdGVkVGltZSA9IHRoaXMuc2Vla1RvKHN0YXJ0LCBlbmQpO1xuXG4gICAgICAgIHN0YXJ0ID0gYWRqdXN0ZWRUaW1lLnN0YXJ0O1xuICAgICAgICBlbmQgPSBhZGp1c3RlZFRpbWUuZW5kO1xuXG4gICAgICAgIHRoaXMuc2NoZWR1bGVkUGF1c2UgPSBlbmQ7XG5cbiAgICAgICAgLy90aGlzLnNvdXJjZS5zdGFydCgwLCBzdGFydCwgZW5kIC0gc3RhcnQpO1xuICAgICAgICAvL3BsYXkoKTtcblxuICAgICAgICAvL3NjaGVkdWxlci5hZGQodGhpcy50cmFuc3BvcnRlZEdyYW51bGFyRW5naW5lKTtcblxuICAgICAgICB0aGlzLnBsYXlDb250cm9sLnN0YXJ0KCk7XG4gICAgICAgIHRoaXMucGxheUNvbnRyb2wuc2VlayhzdGFydCk7XG5cbiAgICAgICAgLy9jb25zb2xlLmxvZyhzdGFydCk7XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh0aGlzLlBMQVlJTkdfU1RBVEUpO1xuXG4gICAgICAgIHRoaXMuZmlyZUV2ZW50KCdwbGF5Jyk7XG4gICAgfSxcblxuXG4gICAgLyoqXG4gICAgICogUGF1c2VzIHRoZSBsb2FkZWQgYXVkaW8uXG4gICAgICovXG4gICAgT1JJR3BhdXNlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5zY2hlZHVsZWRQYXVzZSA9IG51bGw7XG5cbiAgICAgICAgdGhpcy5zdGFydFBvc2l0aW9uICs9IHRoaXMuZ2V0UGxheWVkVGltZSgpO1xuICAgICAgICB0aGlzLnNvdXJjZSAmJiB0aGlzLnNvdXJjZS5zdG9wKDApO1xuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUodGhpcy5QQVVTRURfU1RBVEUpO1xuXG4gICAgICAgIHRoaXMuZmlyZUV2ZW50KCdwYXVzZScpO1xuICAgIH0sXG4gICAgcGF1c2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLnNjaGVkdWxlZFBhdXNlID0gbnVsbDtcblxuICAgICAgICB0aGlzLnN0YXJ0UG9zaXRpb24gKz0gdGhpcy5nZXRQbGF5ZWRUaW1lKCk7XG4gICAgICAgIC8vdGhpcy5zb3VyY2UgJiYgdGhpcy5zb3VyY2Uuc3RvcCgwKTtcblxuICAgICAgICB0aGlzLnBsYXlDb250cm9sLnBhdXNlKCk7XG4gICAgICAgIC8vc2NoZWR1bGVyLnJlbW92ZSh0aGlzLnRyYW5zcG9ydGVkR3JhbnVsYXJFbmdpbmUpO1xuXG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh0aGlzLlBBVVNFRF9TVEFURSk7XG5cbiAgICAgICAgdGhpcy5maXJlRXZlbnQoJ3BhdXNlJyk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqICAgUmV0dXJucyB0aGUgY3VycmVudCB0aW1lIGluIHNlY29uZHMgcmVsYXRpdmUgdG8gdGhlIGF1ZGlvY2xpcCdzIGR1cmF0aW9uLlxuICAgICAqL1xuICAgIGdldEN1cnJlbnRUaW1lOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuZ2V0Q3VycmVudFRpbWUuY2FsbCh0aGlzKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogICBSZXR1cm5zIHRoZSBjdXJyZW50IHBsYXliYWNrIHJhdGUuXG4gICAgICovXG4gICAgZ2V0UGxheWJhY2tSYXRlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGxheWJhY2tSYXRlO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGF1ZGlvIHNvdXJjZSBwbGF5YmFjayByYXRlLlxuICAgICAqL1xuICAgIE9SSUdzZXRQbGF5YmFja1JhdGU6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgIHZhbHVlID0gdmFsdWUgfHwgMTtcbiAgICAgICAgaWYgKHRoaXMuaXNQYXVzZWQoKSkge1xuICAgICAgICAgICAgdGhpcy5wbGF5YmFja1JhdGUgPSB2YWx1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucGF1c2UoKTtcbiAgICAgICAgICAgIHRoaXMucGxheWJhY2tSYXRlID0gdmFsdWU7XG4gICAgICAgICAgICB0aGlzLnBsYXkoKTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgc2V0UGxheWJhY2tSYXRlOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICB2YWx1ZSA9IHZhbHVlIHx8IDE7XG5cbiAgICAgICAgaWYgKHRoaXMucGxheUNvbnRyb2wpIHtcbiAgICAgICAgICAgIHRoaXMucGxheUNvbnRyb2wuc3BlZWQgPSB2YWx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmlzUGF1c2VkKCkpIHtcbiAgICAgICAgICAgIHRoaXMucGxheWJhY2tSYXRlID0gdmFsdWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvL3RoaXMucGF1c2UoKTtcbiAgICAgICAgICAgIHRoaXMucGxheWJhY2tSYXRlID0gdmFsdWU7XG4gICAgICAgICAgICAvL3RoaXMucGxheSgpO1xuICAgICAgICB9XG4gICAgfS8qLFxuICAgIHNldE1ldHJvbm9tZTogZnVuY3Rpb24odGVtcG8sIHBoYXNlKSB7XG4gICAgICAgIGlmICh0ZW1wbyA+IDApIHRoaXMubWV0cm9ub21lLnBlcmlvZCA9ICg2MCAvIHRlbXBvKSAvIHRoaXMucGxheWJhY2tSYXRlO1xuICAgICAgICBjb25zb2xlLmxvZyhcIm1ldDogXCIgKyB0aGlzLm1ldHJvbm9tZS5wZXJpb2QgKyBcIiAtIHBsYXliYWNrUmF0ZTogXCIgKyB0aGlzLnBsYXliYWNrUmF0ZSk7XG4gICAgICAgIC8vc2VsZi5tZXRyb25vbWUuY2xpY2tGcmVxID0gNjY2O1xuICAgICAgICAvL2lmKHBoYXNlICE9IG51bGwpIHRoaXMubWV0cm9ub21lLnBoYXNlID0gcGhhc2U7XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5tZXRyb25vbWUpO1xuICAgICAgICB0aGlzLm1ldHJvbm9tZS5yZXNldFRpbWUoKTtcbiAgICB9Ki9cbn07XG5cbldhdmVTdXJmZXIuV2ViQXVkaW8uc3RhdGUgPSB7fTtcblxuV2F2ZVN1cmZlci5XZWJBdWRpby5zdGF0ZS5wbGF5aW5nID0ge1xuICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLmFkZE9uQXVkaW9Qcm9jZXNzKCk7XG4gICAgfSxcbiAgICBnZXRQbGF5ZWRQZXJjZW50czogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBkdXJhdGlvbiA9IHRoaXMuZ2V0RHVyYXRpb24oKTtcbiAgICAgICAgcmV0dXJuICh0aGlzLmdldEN1cnJlbnRUaW1lKCkgLyBkdXJhdGlvbikgfHwgMDtcbiAgICB9LFxuICAgIGdldEN1cnJlbnRUaW1lOiBmdW5jdGlvbigpIHtcbiAgICAgICAgLy9fTURfIC8vcmV0dXJuIHRoaXMuc3RhcnRQb3NpdGlvbiArIHRoaXMuZ2V0UGxheWVkVGltZSgpO1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRQbGF5ZWRUaW1lKCk7XG4gICAgfVxufTtcblxuV2F2ZVN1cmZlci5XZWJBdWRpby5zdGF0ZS5wYXVzZWQgPSB7XG4gICAgT1JJR2luaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLnJlbW92ZU9uQXVkaW9Qcm9jZXNzKCk7XG4gICAgfSxcbiAgICAvKiBfTURfICovXG4gICAgaW5pdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlT25BdWRpb1Byb2Nlc3MoKTtcbiAgICAgICAgaWYgKHRoaXMucGxheUNvbnRyb2wpIHtcbiAgICAgICAgICAgIHRoaXMucGxheUNvbnRyb2wucGF1c2UoKTtcbiAgICAgICAgfVxuXG5cbiAgICB9LFxuICAgIC8qIF9NRF8gKi9cbiAgICBnZXRQbGF5ZWRQZXJjZW50czogZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBkdXJhdGlvbiA9IHRoaXMuZ2V0RHVyYXRpb24oKTtcbiAgICAgICAgcmV0dXJuICh0aGlzLmdldEN1cnJlbnRUaW1lKCkgLyBkdXJhdGlvbikgfHwgMDtcbiAgICB9LFxuICAgIGdldEN1cnJlbnRUaW1lOiBmdW5jdGlvbigpIHtcbiAgICAgICAgLy9fTURfLy9yZXR1cm4gdGhpcy5zdGFydFBvc2l0aW9uO1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRQbGF5ZWRUaW1lKCk7IC8vX01EX19cbiAgICB9XG59O1xuXG5XYXZlU3VyZmVyLldlYkF1ZGlvLnN0YXRlLmZpbmlzaGVkID0ge1xuICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLnBsYXlDb250cm9sLnN0b3AoKTsgLy8gX01EXyAvL1xuICAgICAgICB0aGlzLnJlbW92ZU9uQXVkaW9Qcm9jZXNzKCk7XG4gICAgICAgIHRoaXMuZmlyZUV2ZW50KCdmaW5pc2gnKTtcbiAgICB9LFxuICAgIGdldFBsYXllZFBlcmNlbnRzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgfSxcbiAgICBnZXRDdXJyZW50VGltZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldER1cmF0aW9uKCk7XG4gICAgfVxufTtcblxuV2F2ZVN1cmZlci51dGlsLmV4dGVuZChXYXZlU3VyZmVyLldlYkF1ZGlvLCBXYXZlU3VyZmVyLk9ic2VydmVyKTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIFdhdmVTdXJmZXJcbn07XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy93ZWJhdWRpb19pcmNhbS5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVEQTs7Ozs7Ozs7OztBQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7OztBQTlxQkE7QUFDQTtBQXdyQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVhBO0FBQ0E7QUFhQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBckJBO0FBQ0E7QUF1QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBWEE7QUFDQTtBQWFBO0FBQ0E7QUFDQTtBQUNBO0FBREEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 75 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("\n\n//Hardcoded defaults\n\nconst RangeValues = {\n    speed: { min: 0.001, max: 4 },\n    periodAbs: { min: 0.001, max: 1 },\n    periodRel: { min: 0, max: 1 },\n    periodVar: { min: 0, max: 1 },\n    position: { min: 0, max: 1 },\n    positionVar: { min: 0, max: 1 },\n    durationAbs: { min: 0, max: 1 },\n    durationRel: { min: 0, max: 1 },\n    attackAbs: { min: 0, max: 1 },\n    attackRel: { min: 0, max: 1 },\n    releaseAbs: { min: 0, max: 1 },\n    releaseRel: { min: 0, max: 1 },\n    expRampOffset: { min: 0, max: 1 },\n    resampling: { min: -2400, max: 2400 },\n    resamplingVar: { min: -2400, max: 2400 },\n    gain: { min: 0, max: 1 }\n};\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = RangeValues;\n\n\n//good at speed around 0.75\n// set durationAbs = releaseAbs,\n// for best results\nconst GrainDefs_Piano96k = {\n    periodAbs: 0.02,\n    periodRel: 0.35,\n    periodVar: 0.03,\n    position: 1.0,\n    positionVar: 0.0,\n    durationAbs: 0.15,\n    durationRel: 1.0,\n    attackAbs: 1.0,\n    attackRel: 0.84,\n    releaseAbs: 0.15,\n    releaseRel: 1.0,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 0.29,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_Piano96k */\n\n\nconst GrainDefs_Piano96k_downsampled44k = {\n    periodAbs: 0.01,\n    periodRel: 0.02,\n    periodVar: 0.00,\n    position: 1.0,\n    positionVar: 0.01,\n    durationAbs: 1.0,\n    durationRel: 0.0,\n    attackAbs: 0.91,\n    attackRel: 0.69,\n    releaseAbs: 0.76,\n    releaseRel: 1.0,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 1200,\n    gain: 0.29,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_Piano96k_downsampled44k */\n\n\n/* Burkig. men minskar när durationRel (150->) ökar.\nsamtidigt måste periodAbs minska, annars\nblir ljudet tyst.*/\nconst GrainDefs_EXFUCKINGSTREAM = {\n    speed: 0.5,\n    periodAbs: 0.001,\n    periodRel: 0.0,\n    periodVar: 0.0,\n    position: 1.0,\n    positionVar: 0.01,\n    durationAbs: 0.001,\n    durationRel: 140, /*!!!!!!!!!!!*/\n    attackAbs: 0.12,\n    attackRel: 4.0,\n    releaseAbs: 1.0,\n    releaseRel: 0.0,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 0.005,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_EXFUCKINGSTREAM */\n\n\n/* Nice 0.75-> */\n/* Smearing percussions when too slow */\nconst GrainDefs_OkDefault = {\n    speed: 0.5,\n    periodAbs: 0.011,\n    periodRel: 0.0,\n    periodVar: 0.0,\n    position: 0.0,\n    positionVar: 0.01,\n    durationAbs: 0.04,\n    durationRel: 8, /*!!!!!!!!!!!*/\n    attackAbs: 0.0,\n    attackRel: 10.0,\n    releaseAbs: 4.0,\n    releaseRel: 0.0,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 0.005,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_OkDefault */\n\n\n/* Nice 0.5-> */\n/* sharp drums */\nconst GrainDefs_OkSlow = {\n    speed: 0.5,\n    periodAbs: 0.005,\n    periodRel: 0.0,\n    periodVar: 0.0,\n    position: 1.0,\n    positionVar: 0.005,\n    durationAbs: 0.00,\n    durationRel: 20, /*!!!!!!!!!!!*/\n    attackAbs: 30.0,\n    attackRel: 1.0,\n    releaseAbs: 8.0,\n    releaseRel: 0.0,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 0.005,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_OkSlow */\n\n\n/* Increase durationRel as high as CPU tolerates */\n/* Burkljudet försvinner med öakt durationRel */\nconst GrainDefs_Allround = {\n    speed: 0.5,\n    periodAbs: 0.005,\n    periodRel: 0.01,\n    periodVar: 0.0,\n    position: 0.0,\n    positionVar: 0.01,\n    durationAbs: 0.00,\n    durationRel: 70, /*!!!!!!!!!!!*/\n    attackAbs: 1.0,\n    attackRel: 2.0,\n    releaseAbs: 4.0,\n    releaseRel: 0.01,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 0.005,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_Allround */\n\n\nconst GrainDefs_SuperCleanHalfSpeed = {\n    speed: 0.5,\n    periodAbs: 0.0003,\n    periodRel: 10,\n    periodVar: 0.0,\n    position: 0.0,\n    positionVar: 0.001,\n    durationAbs: 0.005,\n    durationRel: 20, /*!!!!!!!!!!!*/\n    attackAbs: 0.01,\n    attackRel: 0.0,\n    releaseAbs: 0.0,\n    releaseRel: 1.00,\n    releaseShape: 'lin',\n    expRampOffset: 0.0000,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 0.23,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_SuperCleanHalfSpeed */\n\n\n//PlayAtSpeed 2.0\nconst GrainDefs_Piano192k_downsampled44k2 = {\n    speed: 2.0,\n    periodAbs: 0.011,\n    periodRel: 0.022,\n    periodVar: 0.0,\n    position: 1.0,\n    positionVar: 0.0,\n    durationAbs: 1.0,\n    durationRel: 0.0,\n    attackAbs: 0.91,\n    attackRel: 0.69,\n    releaseAbs: 0.76,\n    releaseRel: 1.0,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 1200,\n    resamplingVar: 0,\n    gain: 0.03,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_Piano192k_downsampled44k2 */\n\n\n//PlayAtSpeed 2.0\nconst GrainDefs_Piano192k_downsampled44k2b = {\n    speed: 2.0,\n    periodAbs: 0.061,\n    periodRel: 0.0,\n    periodVar: 0.013,\n    position: 1.0,\n    positionVar: 0.0,\n    durationAbs: 0.36,\n    durationRel: 2.0,\n    attackAbs: 0.73,\n    attackRel: 0.69,\n    releaseAbs: 2.0,\n    releaseRel: 1.0,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 0.06,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_Piano192k_downsampled44k2b */\n\n\n//PlayAtSpeed 2.0\nconst GrainDefs_Piano192k_downsampled44k = {\n    speed: 2.0,\n    periodAbs: 0.061,\n    periodRel: 0.0,\n    periodVar: 0.013,\n    position: 1.0,\n    positionVar: 0.0,\n    durationAbs: 0.1,\n    durationRel: 2.0,\n    attackAbs: 0.73,\n    attackRel: 0.69,\n    releaseAbs: 2.0,\n    releaseRel: 1.0,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 0.06,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_Piano192k_downsampled44k */\n\n\nconst GrainDefs_Strings = {\n    periodAbs: 0.05,\n    periodRel: 0,\n    periodVar: 0,\n    position: 0,\n    positionVar: 0.04,\n    durationAbs: 0.233,\n    durationRel: 0,\n    attackAbs: 0,\n    attackRel: 0.5,\n    releaseAbs: 0,\n    releaseRel: 0.5,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 1,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_Strings */\n\n\nconst GrainDefs_Cello2 = {\n    periodAbs: 0.075,\n    periodRel: 0,\n    periodVar: 0,\n    position: 0.26,\n    positionVar: 0.025,\n    durationAbs: 0.353,\n    durationRel: 0.84,\n    attackAbs: 0.95,\n    attackRel: 0.5,\n    releaseAbs: 0.85,\n    releaseRel: 0.14,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 1,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_Cello2 */\n\n\nconst GrainDefs_Cello1 = {\n    periodAbs: 0.09,\n    periodRel: 0,\n    periodVar: 0,\n    position: 0.0,\n    positionVar: 0.0,\n    durationAbs: 0.15,\n    durationRel: 0.99,\n    attackAbs: 0.79,\n    attackRel: 1.0,\n    releaseAbs: 0.82,\n    releaseRel: 0.4,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 0.31,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_Cello1 */\n\n\nconst GrainDefs_Cello = {\n    speed: 1.0,\n    periodAbs: 0.09,\n    periodRel: 0.09,\n    periodVar: 0.22,\n    position: 0.0,\n    positionVar: 0.0,\n    durationAbs: 0.15,\n    durationRel: 1.0,\n    attackAbs: 0.91,\n    attackRel: 0.69,\n    releaseAbs: 1.0,\n    releaseRel: 1.0,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 0.29,\n    centered: true,\n    cyclic: true\n};\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = GrainDefs_Cello;\n\n\nconst GrainDefs_Mix_Default = {\n    speed: 1.0,\n    periodAbs: 0.0005,\n    periodRel: 0.3,\n    periodVar: 0.3,\n    position: 0.0,\n    positionVar: 0.0,\n    durationAbs: 0.3,\n    durationRel: 0.0,\n    attackAbs: 1.0,\n    attackRel: 1.0,\n    releaseAbs: 1.0,\n    releaseRel: 1.0,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0.0,\n    resamplingVar: 0,\n    gain: 0.1,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_Mix_Default */\n\n\n//even across speeds\nconst GrainDefs_Mix_Default_allround = {\n    speed: 1.0,\n    periodAbs: 0.00005,\n    periodRel: 0.087,\n    periodVar: 0.052,\n    position: 0.0,\n    positionVar: 0.0,\n    durationAbs: 0.43,\n    durationRel: 0.0,\n    attackAbs: 1.0,\n    attackRel: 0.0,\n    releaseAbs: 4.0,\n    releaseRel: 0.0,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0.0,\n    resamplingVar: 0,\n    gain: 0.1,\n    centered: true,\n    cyclic: true\n};\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = GrainDefs_Mix_Default_allround;\n\n\nconst GrainDefs_Perc2 = {\n    periodAbs: 0.004,\n    periodRel: 0,\n    periodVar: 0,\n    position: 0,\n    positionVar: 0.001,\n    durationAbs: 0.01,\n    durationRel: 0,\n    attackAbs: 0,\n    attackRel: 0.5,\n    releaseAbs: 0,\n    releaseRel: 0.5,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 1,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_Perc2 */\n\n\nconst GrainDefs_Perc1 = {\n    periodAbs: 0.001,\n    periodRel: 0,\n    periodVar: 0.88,\n    position: 1,\n    positionVar: 0.000,\n    durationAbs: 0.13,\n    durationRel: 0,\n    attackAbs: 1,\n    attackRel: 0.15,\n    releaseAbs: 0.02,\n    releaseRel: 0.0,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 1,\n    centered: true,\n    cyclic: true\n};\n/* unused harmony export GrainDefs_Perc1 */\n\n\nconst GrainDefs_Perc = {\n    periodAbs: 0.09,\n    periodRel: 0,\n    periodVar: 0.0,\n    position: 0,\n    positionVar: 0.000,\n    durationAbs: 0.10,\n    durationRel: 0.82,\n    attackAbs: 1,\n    attackRel: 0.07,\n    releaseAbs: 0.45,\n    releaseRel: 0.0,\n    releaseShape: 'lin',\n    expRampOffset: 0.0001,\n    resampling: 0,\n    resamplingVar: 0,\n    gain: 0.32,\n    centered: true,\n    cyclic: true\n};\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = GrainDefs_Perc;\n\n\nconst EQ_CELLO = [{\n    f: 32,\n    type: 'lowshelf',\n    value: -40\n}, {\n    f: 64,\n    type: 'peaking',\n    value: 9\n}, {\n    f: 125,\n    type: 'peaking',\n    value: 2\n}, {\n    f: 250,\n    type: 'peaking',\n    value: 8\n}, {\n    f: 500,\n    type: 'peaking',\n    value: -14\n}, {\n    f: 1000,\n    type: 'peaking',\n    value: 8\n}, {\n    f: 2000,\n    type: 'peaking',\n    value: -1\n}, {\n    f: 4000,\n    type: 'peaking',\n    value: -1\n}, {\n    f: 8000,\n    type: 'peaking',\n    value: 12\n}, {\n    f: 16000,\n    type: 'highshelf',\n    value: 16\n}];\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = EQ_CELLO;\n\n\nconst EQ_PERCUSSION = [{\n    f: 32,\n    type: 'lowshelf',\n    value: -10\n}, {\n    f: 64,\n    type: 'peaking',\n    value: -15\n}, {\n    f: 125,\n    type: 'peaking',\n    value: 8\n}, {\n    f: 250,\n    type: 'peaking',\n    value: -12\n}, {\n    f: 500,\n    type: 'peaking',\n    value: 0\n}, {\n    f: 1000,\n    type: 'peaking',\n    value: -8\n}, {\n    f: 2000,\n    type: 'peaking',\n    value: 9\n}, {\n    f: 4000,\n    type: 'peaking',\n    value: -1\n}, {\n    f: 8000,\n    type: 'peaking',\n    value: 1\n}, {\n    f: 16000,\n    type: 'highshelf',\n    value: -6\n}];\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = EQ_PERCUSSION;\n\n\nconst EQ_MIX = [{\n    f: 32,\n    type: 'lowshelf',\n    value: 23\n}, {\n    f: 64,\n    type: 'peaking',\n    value: 12\n}, {\n    f: 125,\n    type: 'peaking',\n    value: 14\n}, {\n    f: 250,\n    type: 'peaking',\n    value: 12\n}, {\n    f: 500,\n    type: 'peaking',\n    value: 5\n}, {\n    f: 1000,\n    type: 'peaking',\n    value: 6\n}, {\n    f: 2000,\n    type: 'peaking',\n    value: 7\n}, {\n    f: 4000,\n    type: 'peaking',\n    value: 8\n}, {\n    f: 8000,\n    type: 'peaking',\n    value: 15\n}, {\n    f: 16000,\n    type: 'highshelf',\n    value: 8\n}];\n/* unused harmony export EQ_MIX */\n\n\nconst EQ_FLAT = [{\n    f: 32,\n    type: 'lowshelf',\n    value: 0\n}, {\n    f: 64,\n    type: 'peaking',\n    value: 0\n}, {\n    f: 125,\n    type: 'peaking',\n    value: 0\n}, {\n    f: 250,\n    type: 'peaking',\n    value: 0\n}, {\n    f: 500,\n    type: 'peaking',\n    value: 0\n}, {\n    f: 1000,\n    type: 'peaking',\n    value: 0\n}, {\n    f: 2000,\n    type: 'peaking',\n    value: 0\n}, {\n    f: 4000,\n    type: 'peaking',\n    value: 0\n}, {\n    f: 8000,\n    type: 'peaking',\n    value: 0\n}, {\n    f: 16000,\n    type: 'highshelf',\n    value: 0\n}];\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = EQ_FLAT;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (a, b) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (b),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {\n    if (typeof exports === \"object\") {\n      module.exports = b();\n    } else {\n      a.X2JS = b();\n    }\n  }\n})(this, function () {\n  return function (z) {\n    var t = \"1.2.0\";z = z || {};i();u();function i() {\n      if (z.escapeMode === undefined) {\n        z.escapeMode = true;\n      }z.attributePrefix = z.attributePrefix || \"_\";z.arrayAccessForm = z.arrayAccessForm || \"none\";z.emptyNodeForm = z.emptyNodeForm || \"text\";if (z.enableToStringFunc === undefined) {\n        z.enableToStringFunc = true;\n      }z.arrayAccessFormPaths = z.arrayAccessFormPaths || [];if (z.skipEmptyTextNodesForObj === undefined) {\n        z.skipEmptyTextNodesForObj = true;\n      }if (z.stripWhitespaces === undefined) {\n        z.stripWhitespaces = true;\n      }z.datetimeAccessFormPaths = z.datetimeAccessFormPaths || [];if (z.useDoubleQuotes === undefined) {\n        z.useDoubleQuotes = false;\n      }z.xmlElementsFilter = z.xmlElementsFilter || [];z.jsonPropertiesFilter = z.jsonPropertiesFilter || [];if (z.keepCData === undefined) {\n        z.keepCData = false;\n      }\n    }var h = { ELEMENT_NODE: 1, TEXT_NODE: 3, CDATA_SECTION_NODE: 4, COMMENT_NODE: 8, DOCUMENT_NODE: 9 };function u() {}function x(B) {\n      var C = B.localName;if (C == null) {\n        C = B.baseName;\n      }if (C == null || C == \"\") {\n        C = B.nodeName;\n      }return C;\n    }function r(B) {\n      return B.prefix;\n    }function s(B) {\n      if (typeof B == \"string\") {\n        return B.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\");\n      } else {\n        return B;\n      }\n    }function k(B) {\n      return B.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\").replace(/&quot;/g, '\"').replace(/&apos;/g, \"'\").replace(/&amp;/g, \"&\");\n    }function w(C, F, D, E) {\n      var B = 0;for (; B < C.length; B++) {\n        var G = C[B];if (typeof G === \"string\") {\n          if (G == E) {\n            break;\n          }\n        } else {\n          if (G instanceof RegExp) {\n            if (G.test(E)) {\n              break;\n            }\n          } else {\n            if (typeof G === \"function\") {\n              if (G(F, D, E)) {\n                break;\n              }\n            }\n          }\n        }\n      }return B != C.length;\n    }function n(D, B, C) {\n      switch (z.arrayAccessForm) {case \"property\":\n          if (!(D[B] instanceof Array)) {\n            D[B + \"_asArray\"] = [D[B]];\n          } else {\n            D[B + \"_asArray\"] = D[B];\n          }break;}if (!(D[B] instanceof Array) && z.arrayAccessFormPaths.length > 0) {\n        if (w(z.arrayAccessFormPaths, D, B, C)) {\n          D[B] = [D[B]];\n        }\n      }\n    }function a(G) {\n      var E = G.split(/[-T:+Z]/g);var F = new Date(E[0], E[1] - 1, E[2]);var D = E[5].split(\".\");F.setHours(E[3], E[4], D[0]);if (D.length > 1) {\n        F.setMilliseconds(D[1]);\n      }if (E[6] && E[7]) {\n        var C = E[6] * 60 + Number(E[7]);var B = /\\d\\d-\\d\\d:\\d\\d$/.test(G) ? \"-\" : \"+\";C = 0 + (B == \"-\" ? -1 * C : C);F.setMinutes(F.getMinutes() - C - F.getTimezoneOffset());\n      } else {\n        if (G.indexOf(\"Z\", G.length - 1) !== -1) {\n          F = new Date(Date.UTC(F.getFullYear(), F.getMonth(), F.getDate(), F.getHours(), F.getMinutes(), F.getSeconds(), F.getMilliseconds()));\n        }\n      }return F;\n    }function q(D, B, C) {\n      if (z.datetimeAccessFormPaths.length > 0) {\n        var E = C.split(\".#\")[0];if (w(z.datetimeAccessFormPaths, D, B, E)) {\n          return a(D);\n        } else {\n          return D;\n        }\n      } else {\n        return D;\n      }\n    }function b(E, C, B, D) {\n      if (C == h.ELEMENT_NODE && z.xmlElementsFilter.length > 0) {\n        return w(z.xmlElementsFilter, E, B, D);\n      } else {\n        return true;\n      }\n    }function A(D, J) {\n      if (D.nodeType == h.DOCUMENT_NODE) {\n        var K = new Object();var B = D.childNodes;for (var L = 0; L < B.length; L++) {\n          var C = B.item(L);if (C.nodeType == h.ELEMENT_NODE) {\n            var I = x(C);K[I] = A(C, I);\n          }\n        }return K;\n      } else {\n        if (D.nodeType == h.ELEMENT_NODE) {\n          var K = new Object();K.__cnt = 0;var B = D.childNodes;for (var L = 0; L < B.length; L++) {\n            var C = B.item(L);var I = x(C);if (C.nodeType != h.COMMENT_NODE) {\n              var H = J + \".\" + I;if (b(K, C.nodeType, I, H)) {\n                K.__cnt++;if (K[I] == null) {\n                  K[I] = A(C, H);n(K, I, H);\n                } else {\n                  if (K[I] != null) {\n                    if (!(K[I] instanceof Array)) {\n                      K[I] = [K[I]];n(K, I, H);\n                    }\n                  }K[I][K[I].length] = A(C, H);\n                }\n              }\n            }\n          }for (var E = 0; E < D.attributes.length; E++) {\n            var F = D.attributes.item(E);K.__cnt++;K[z.attributePrefix + F.name] = F.value;\n          }var G = r(D);if (G != null && G != \"\") {\n            K.__cnt++;K.__prefix = G;\n          }if (K[\"#text\"] != null) {\n            K.__text = K[\"#text\"];if (K.__text instanceof Array) {\n              K.__text = K.__text.join(\"\\n\");\n            }if (z.stripWhitespaces) {\n              K.__text = K.__text.trim();\n            }delete K[\"#text\"];if (z.arrayAccessForm == \"property\") {\n              delete K[\"#text_asArray\"];\n            }K.__text = q(K.__text, I, J + \".\" + I);\n          }if (K[\"#cdata-section\"] != null) {\n            K.__cdata = K[\"#cdata-section\"];delete K[\"#cdata-section\"];if (z.arrayAccessForm == \"property\") {\n              delete K[\"#cdata-section_asArray\"];\n            }\n          }if (K.__cnt == 0 && z.emptyNodeForm == \"text\") {\n            K = \"\";\n          } else {\n            if (K.__cnt == 1 && K.__text != null) {\n              K = K.__text;\n            } else {\n              if (K.__cnt == 1 && K.__cdata != null && !z.keepCData) {\n                K = K.__cdata;\n              } else {\n                if (K.__cnt > 1 && K.__text != null && z.skipEmptyTextNodesForObj) {\n                  if (z.stripWhitespaces && K.__text == \"\" || K.__text.trim() == \"\") {\n                    delete K.__text;\n                  }\n                }\n              }\n            }\n          }delete K.__cnt;if (z.enableToStringFunc && (K.__text != null || K.__cdata != null)) {\n            K.toString = function () {\n              return (this.__text != null ? this.__text : \"\") + (this.__cdata != null ? this.__cdata : \"\");\n            };\n          }return K;\n        } else {\n          if (D.nodeType == h.TEXT_NODE || D.nodeType == h.CDATA_SECTION_NODE) {\n            return D.nodeValue;\n          }\n        }\n      }\n    }function o(I, F, H, C) {\n      var E = \"<\" + (I != null && I.__prefix != null ? I.__prefix + \":\" : \"\") + F;if (H != null) {\n        for (var G = 0; G < H.length; G++) {\n          var D = H[G];var B = I[D];if (z.escapeMode) {\n            B = s(B);\n          }E += \" \" + D.substr(z.attributePrefix.length) + \"=\";if (z.useDoubleQuotes) {\n            E += '\"' + B + '\"';\n          } else {\n            E += \"'\" + B + \"'\";\n          }\n        }\n      }if (!C) {\n        E += \">\";\n      } else {\n        E += \"/>\";\n      }return E;\n    }function j(C, B) {\n      return \"</\" + (C.__prefix != null ? C.__prefix + \":\" : \"\") + B + \">\";\n    }function v(C, B) {\n      return C.indexOf(B, C.length - B.length) !== -1;\n    }function y(C, B) {\n      if (z.arrayAccessForm == \"property\" && v(B.toString(), \"_asArray\") || B.toString().indexOf(z.attributePrefix) == 0 || B.toString().indexOf(\"__\") == 0 || C[B] instanceof Function) {\n        return true;\n      } else {\n        return false;\n      }\n    }function m(D) {\n      var C = 0;if (D instanceof Object) {\n        for (var B in D) {\n          if (y(D, B)) {\n            continue;\n          }C++;\n        }\n      }return C;\n    }function l(D, B, C) {\n      return z.jsonPropertiesFilter.length == 0 || C == \"\" || w(z.jsonPropertiesFilter, D, B, C);\n    }function c(D) {\n      var C = [];if (D instanceof Object) {\n        for (var B in D) {\n          if (B.toString().indexOf(\"__\") == -1 && B.toString().indexOf(z.attributePrefix) == 0) {\n            C.push(B);\n          }\n        }\n      }return C;\n    }function g(C) {\n      var B = \"\";if (C.__cdata != null) {\n        B += \"<![CDATA[\" + C.__cdata + \"]]>\";\n      }if (C.__text != null) {\n        if (z.escapeMode) {\n          B += s(C.__text);\n        } else {\n          B += C.__text;\n        }\n      }return B;\n    }function d(C) {\n      var B = \"\";if (C instanceof Object) {\n        B += g(C);\n      } else {\n        if (C != null) {\n          if (z.escapeMode) {\n            B += s(C);\n          } else {\n            B += C;\n          }\n        }\n      }return B;\n    }function p(C, B) {\n      if (C === \"\") {\n        return B;\n      } else {\n        return C + \".\" + B;\n      }\n    }function f(D, G, F, E) {\n      var B = \"\";if (D.length == 0) {\n        B += o(D, G, F, true);\n      } else {\n        for (var C = 0; C < D.length; C++) {\n          B += o(D[C], G, c(D[C]), false);B += e(D[C], p(E, G));B += j(D[C], G);\n        }\n      }return B;\n    }function e(I, H) {\n      var B = \"\";var F = m(I);if (F > 0) {\n        for (var E in I) {\n          if (y(I, E) || H != \"\" && !l(I, E, p(H, E))) {\n            continue;\n          }var D = I[E];var G = c(D);if (D == null || D == undefined) {\n            B += o(D, E, G, true);\n          } else {\n            if (D instanceof Object) {\n              if (D instanceof Array) {\n                B += f(D, E, G, H);\n              } else {\n                if (D instanceof Date) {\n                  B += o(D, E, G, false);B += D.toISOString();B += j(D, E);\n                } else {\n                  var C = m(D);if (C > 0 || D.__text != null || D.__cdata != null) {\n                    B += o(D, E, G, false);B += e(D, p(H, E));B += j(D, E);\n                  } else {\n                    B += o(D, E, G, true);\n                  }\n                }\n              }\n            } else {\n              B += o(D, E, G, false);B += d(D);B += j(D, E);\n            }\n          }\n        }\n      }B += d(I);return B;\n    }this.parseXmlString = function (D) {\n      var F = window.ActiveXObject || \"ActiveXObject\" in window;if (D === undefined) {\n        return null;\n      }var E;if (window.DOMParser) {\n        var G = new window.DOMParser();var B = null;if (!F) {\n          try {\n            B = G.parseFromString(\"INVALID\", \"text/xml\").getElementsByTagName(\"parsererror\")[0].namespaceURI;\n          } catch (C) {\n            B = null;\n          }\n        }try {\n          E = G.parseFromString(D, \"text/xml\");if (B != null && E.getElementsByTagNameNS(B, \"parsererror\").length > 0) {\n            E = null;\n          }\n        } catch (C) {\n          E = null;\n        }\n      } else {\n        if (D.indexOf(\"<?\") == 0) {\n          D = D.substr(D.indexOf(\"?>\") + 2);\n        }E = new ActiveXObject(\"Microsoft.XMLDOM\");E.async = \"false\";E.loadXML(D);\n      }return E;\n    };this.asArray = function (B) {\n      if (B === undefined || B == null) {\n        return [];\n      } else {\n        if (B instanceof Array) {\n          return B;\n        } else {\n          return [B];\n        }\n      }\n    };this.toXmlDateTime = function (B) {\n      if (B instanceof Date) {\n        return B.toISOString();\n      } else {\n        if (typeof B === \"number\") {\n          return new Date(B).toISOString();\n        } else {\n          return null;\n        }\n      }\n    };this.asDateTime = function (B) {\n      if (typeof B == \"string\") {\n        return a(B);\n      } else {\n        return B;\n      }\n    };this.xml2json = function (B) {\n      return A(B);\n    };this.xml_str2json = function (B) {\n      var C = this.parseXmlString(B);if (C != null) {\n        return this.xml2json(C);\n      } else {\n        return null;\n      }\n    };this.json2xml_str = function (B) {\n      return e(B, \"\");\n    };this.json2xml = function (C) {\n      var B = this.json2xml_str(C);return this.parseXmlString(B);\n    };this.getVersion = function () {\n      return t;\n    };\n  };\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(127), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9zZXQuanM/MDcyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vc2V0XCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9zZXQuanNcbi8vIG1vZHVsZSBpZCA9IDc3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _getOwnPropertyDescriptor = __webpack_require__(116);\n\nvar _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);\n\n  if (desc === undefined) {\n    var parent = (0, _getPrototypeOf2.default)(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2JhYmVsLXJ1bnRpbWUvaGVscGVycy9nZXQuanM/YTMyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9nZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL29iamVjdC9nZXQtcHJvdG90eXBlLW9mXCIpO1xuXG52YXIgX2dldFByb3RvdHlwZU9mMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2dldFByb3RvdHlwZU9mKTtcblxudmFyIF9nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yXCIpO1xuXG52YXIgX2dldE93blByb3BlcnR5RGVzY3JpcHRvcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHtcbiAgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlO1xuICB2YXIgZGVzYyA9ICgwLCBfZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yMi5kZWZhdWx0KShvYmplY3QsIHByb3BlcnR5KTtcblxuICBpZiAoZGVzYyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIHBhcmVudCA9ICgwLCBfZ2V0UHJvdG90eXBlT2YyLmRlZmF1bHQpKG9iamVjdCk7XG5cbiAgICBpZiAocGFyZW50ID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZ2V0KHBhcmVudCwgcHJvcGVydHksIHJlY2VpdmVyKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHtcbiAgICByZXR1cm4gZGVzYy52YWx1ZTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgZ2V0dGVyID0gZGVzYy5nZXQ7XG5cbiAgICBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTtcbiAgfVxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL2dldC5qc1xuLy8gbW9kdWxlIGlkID0gNzhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\n\nvar _iterator = __webpack_require__(119);\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _symbol = __webpack_require__(118);\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _typeof = typeof _symbol2.default === \"function\" && typeof _iterator2.default === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = typeof _symbol2.default === \"function\" && _typeof(_iterator2.default) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n} : function (obj) {\n  return obj && typeof _symbol2.default === \"function\" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2JhYmVsLXJ1bnRpbWUvaGVscGVycy90eXBlb2YuanM/ZjRiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9pdGVyYXRvciA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL3N5bWJvbC9pdGVyYXRvclwiKTtcblxudmFyIF9pdGVyYXRvcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pdGVyYXRvcik7XG5cbnZhciBfc3ltYm9sID0gcmVxdWlyZShcIi4uL2NvcmUtanMvc3ltYm9sXCIpO1xuXG52YXIgX3N5bWJvbDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zeW1ib2wpO1xuXG52YXIgX3R5cGVvZiA9IHR5cGVvZiBfc3ltYm9sMi5kZWZhdWx0ID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIF9pdGVyYXRvcjIuZGVmYXVsdCA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIF9zeW1ib2wyLmRlZmF1bHQgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IF9zeW1ib2wyLmRlZmF1bHQgJiYgb2JqICE9PSBfc3ltYm9sMi5kZWZhdWx0LnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5leHBvcnRzLmRlZmF1bHQgPSB0eXBlb2YgX3N5bWJvbDIuZGVmYXVsdCA9PT0gXCJmdW5jdGlvblwiICYmIF90eXBlb2YoX2l0ZXJhdG9yMi5kZWZhdWx0KSA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmogPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZihvYmopO1xufSA6IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiB0eXBlb2YgX3N5bWJvbDIuZGVmYXVsdCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gX3N5bWJvbDIuZGVmYXVsdCAmJiBvYmogIT09IF9zeW1ib2wyLmRlZmF1bHQucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmogPT09IFwidW5kZWZpbmVkXCIgPyBcInVuZGVmaW5lZFwiIDogX3R5cGVvZihvYmopO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL3R5cGVvZi5qc1xuLy8gbW9kdWxlIGlkID0gNzlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

eval("// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(48)\n  , TAG = __webpack_require__(3)('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jbGFzc29mLmpzP2I0YjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZ2V0dGluZyB0YWcgZnJvbSAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKVxuICAsIFRBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpXG4gIC8vIEVTMyB3cm9uZyBoZXJlXG4gICwgQVJHID0gY29mKGZ1bmN0aW9uKCl7IHJldHVybiBhcmd1bWVudHM7IH0oKSkgPT0gJ0FyZ3VtZW50cyc7XG5cbi8vIGZhbGxiYWNrIGZvciBJRTExIFNjcmlwdCBBY2Nlc3MgRGVuaWVkIGVycm9yXG52YXIgdHJ5R2V0ID0gZnVuY3Rpb24oaXQsIGtleSl7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGl0W2tleV07XG4gIH0gY2F0Y2goZSl7IC8qIGVtcHR5ICovIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICB2YXIgTywgVCwgQjtcbiAgcmV0dXJuIGl0ID09PSB1bmRlZmluZWQgPyAnVW5kZWZpbmVkJyA6IGl0ID09PSBudWxsID8gJ051bGwnXG4gICAgLy8gQEB0b1N0cmluZ1RhZyBjYXNlXG4gICAgOiB0eXBlb2YgKFQgPSB0cnlHZXQoTyA9IE9iamVjdChpdCksIFRBRykpID09ICdzdHJpbmcnID8gVFxuICAgIC8vIGJ1aWx0aW5UYWcgY2FzZVxuICAgIDogQVJHID8gY29mKE8pXG4gICAgLy8gRVMzIGFyZ3VtZW50cyBmYWxsYmFja1xuICAgIDogKEIgPSBjb2YoTykpID09ICdPYmplY3QnICYmIHR5cGVvZiBPLmNhbGxlZSA9PSAnZnVuY3Rpb24nID8gJ0FyZ3VtZW50cycgOiBCO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NsYXNzb2YuanNcbi8vIG1vZHVsZSBpZCA9IDgwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar global         = __webpack_require__(6)\n  , $export        = __webpack_require__(14)\n  , meta           = __webpack_require__(25)\n  , fails          = __webpack_require__(20)\n  , hide           = __webpack_require__(16)\n  , redefineAll    = __webpack_require__(55)\n  , forOf          = __webpack_require__(32)\n  , anInstance     = __webpack_require__(46)\n  , isObject       = __webpack_require__(13)\n  , setToStringTag = __webpack_require__(36)\n  , dP             = __webpack_require__(7).f\n  , each           = __webpack_require__(47)(0)\n  , DESCRIPTORS    = __webpack_require__(5);\n\nmodule.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){\n  var Base  = global[NAME]\n    , C     = Base\n    , ADDER = IS_MAP ? 'set' : 'add'\n    , proto = C && C.prototype\n    , O     = {};\n  if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){\n    new C().entries().next();\n  }))){\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    C = wrapper(function(target, iterable){\n      anInstance(target, C, NAME, '_c');\n      target._c = new Base;\n      if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);\n    });\n    each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','),function(KEY){\n      var IS_ADDER = KEY == 'add' || KEY == 'set';\n      if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){\n        anInstance(this, C, KEY);\n        if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;\n        var result = this._c[KEY](a === 0 ? 0 : a, b);\n        return IS_ADDER ? this : result;\n      });\n    });\n    if('size' in proto)dP(C.prototype, 'size', {\n      get: function(){\n        return this._c.size;\n      }\n    });\n  }\n\n  setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F, O);\n\n  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb2xsZWN0aW9uLmpzPzU1YTUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCAgICAgICAgID0gcmVxdWlyZSgnLi9fZ2xvYmFsJylcbiAgLCAkZXhwb3J0ICAgICAgICA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgbWV0YSAgICAgICAgICAgPSByZXF1aXJlKCcuL19tZXRhJylcbiAgLCBmYWlscyAgICAgICAgICA9IHJlcXVpcmUoJy4vX2ZhaWxzJylcbiAgLCBoaWRlICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hpZGUnKVxuICAsIHJlZGVmaW5lQWxsICAgID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJylcbiAgLCBmb3JPZiAgICAgICAgICA9IHJlcXVpcmUoJy4vX2Zvci1vZicpXG4gICwgYW5JbnN0YW5jZSAgICAgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpXG4gICwgaXNPYmplY3QgICAgICAgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKVxuICAsIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKVxuICAsIGRQICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZlxuICAsIGVhY2ggICAgICAgICAgID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDApXG4gICwgREVTQ1JJUFRPUlMgICAgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKE5BTUUsIHdyYXBwZXIsIG1ldGhvZHMsIGNvbW1vbiwgSVNfTUFQLCBJU19XRUFLKXtcbiAgdmFyIEJhc2UgID0gZ2xvYmFsW05BTUVdXG4gICAgLCBDICAgICA9IEJhc2VcbiAgICAsIEFEREVSID0gSVNfTUFQID8gJ3NldCcgOiAnYWRkJ1xuICAgICwgcHJvdG8gPSBDICYmIEMucHJvdG90eXBlXG4gICAgLCBPICAgICA9IHt9O1xuICBpZighREVTQ1JJUFRPUlMgfHwgdHlwZW9mIEMgIT0gJ2Z1bmN0aW9uJyB8fCAhKElTX1dFQUsgfHwgcHJvdG8uZm9yRWFjaCAmJiAhZmFpbHMoZnVuY3Rpb24oKXtcbiAgICBuZXcgQygpLmVudHJpZXMoKS5uZXh0KCk7XG4gIH0pKSl7XG4gICAgLy8gY3JlYXRlIGNvbGxlY3Rpb24gY29uc3RydWN0b3JcbiAgICBDID0gY29tbW9uLmdldENvbnN0cnVjdG9yKHdyYXBwZXIsIE5BTUUsIElTX01BUCwgQURERVIpO1xuICAgIHJlZGVmaW5lQWxsKEMucHJvdG90eXBlLCBtZXRob2RzKTtcbiAgICBtZXRhLk5FRUQgPSB0cnVlO1xuICB9IGVsc2Uge1xuICAgIEMgPSB3cmFwcGVyKGZ1bmN0aW9uKHRhcmdldCwgaXRlcmFibGUpe1xuICAgICAgYW5JbnN0YW5jZSh0YXJnZXQsIEMsIE5BTUUsICdfYycpO1xuICAgICAgdGFyZ2V0Ll9jID0gbmV3IEJhc2U7XG4gICAgICBpZihpdGVyYWJsZSAhPSB1bmRlZmluZWQpZm9yT2YoaXRlcmFibGUsIElTX01BUCwgdGFyZ2V0W0FEREVSXSwgdGFyZ2V0KTtcbiAgICB9KTtcbiAgICBlYWNoKCdhZGQsY2xlYXIsZGVsZXRlLGZvckVhY2gsZ2V0LGhhcyxzZXQsa2V5cyx2YWx1ZXMsZW50cmllcyx0b0pTT04nLnNwbGl0KCcsJyksZnVuY3Rpb24oS0VZKXtcbiAgICAgIHZhciBJU19BRERFUiA9IEtFWSA9PSAnYWRkJyB8fCBLRVkgPT0gJ3NldCc7XG4gICAgICBpZihLRVkgaW4gcHJvdG8gJiYgIShJU19XRUFLICYmIEtFWSA9PSAnY2xlYXInKSloaWRlKEMucHJvdG90eXBlLCBLRVksIGZ1bmN0aW9uKGEsIGIpe1xuICAgICAgICBhbkluc3RhbmNlKHRoaXMsIEMsIEtFWSk7XG4gICAgICAgIGlmKCFJU19BRERFUiAmJiBJU19XRUFLICYmICFpc09iamVjdChhKSlyZXR1cm4gS0VZID09ICdnZXQnID8gdW5kZWZpbmVkIDogZmFsc2U7XG4gICAgICAgIHZhciByZXN1bHQgPSB0aGlzLl9jW0tFWV0oYSA9PT0gMCA/IDAgOiBhLCBiKTtcbiAgICAgICAgcmV0dXJuIElTX0FEREVSID8gdGhpcyA6IHJlc3VsdDtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGlmKCdzaXplJyBpbiBwcm90bylkUChDLnByb3RvdHlwZSwgJ3NpemUnLCB7XG4gICAgICBnZXQ6IGZ1bmN0aW9uKCl7XG4gICAgICAgIHJldHVybiB0aGlzLl9jLnNpemU7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBzZXRUb1N0cmluZ1RhZyhDLCBOQU1FKTtcblxuICBPW05BTUVdID0gQztcbiAgJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYsIE8pO1xuXG4gIGlmKCFJU19XRUFLKWNvbW1vbi5zZXRTdHJvbmcoQywgTkFNRSwgSVNfTUFQKTtcblxuICByZXR1cm4gQztcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb2xsZWN0aW9uLmpzXG4vLyBtb2R1bGUgaWQgPSA4MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

eval("var isObject = __webpack_require__(13)\n  , document = __webpack_require__(6).document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19kb20tY3JlYXRlLmpzP2FiNDQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JylcbiAgLCBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50XG4gIC8vIGluIG9sZCBJRSB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCBpcyAnb2JqZWN0J1xuICAsIGlzID0gaXNPYmplY3QoZG9jdW1lbnQpICYmIGlzT2JqZWN0KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBpcyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaXQpIDoge307XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZG9tLWNyZWF0ZS5qc1xuLy8gbW9kdWxlIGlkID0gODJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = !__webpack_require__(5) && !__webpack_require__(20)(function(){\n  return Object.defineProperty(__webpack_require__(82)('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pZTgtZG9tLWRlZmluZS5qcz9iZDFmIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24oKXtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXF1aXJlKCcuL19kb20tY3JlYXRlJykoJ2RpdicpLCAnYScsIHtnZXQ6IGZ1bmN0aW9uKCl7IHJldHVybiA3OyB9fSkuYSAhPSA3O1xufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pZTgtZG9tLWRlZmluZS5qc1xuLy8gbW9kdWxlIGlkID0gODNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 7.2.2 IsArray(argument)\nvar cof = __webpack_require__(48);\nmodule.exports = Array.isArray || function isArray(arg){\n  return cof(arg) == 'Array';\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pcy1hcnJheS5qcz8xODQzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDcuMi4yIElzQXJyYXkoYXJndW1lbnQpXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gaXNBcnJheShhcmcpe1xuICByZXR1cm4gY29mKGFyZykgPT0gJ0FycmF5Jztcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pcy1hcnJheS5qc1xuLy8gbW9kdWxlIGlkID0gODRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 85 */
/***/ (function(module, exports) {

eval("module.exports = function(done, value){\n  return {value: value, done: !!done};\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLXN0ZXAuanM/ZTIwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGRvbmUsIHZhbHVlKXtcbiAgcmV0dXJuIHt2YWx1ZTogdmFsdWUsIGRvbmU6ICEhZG9uZX07XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1zdGVwLmpzXG4vLyBtb2R1bGUgaWQgPSA4NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys      = __webpack_require__(88)\n  , hiddenKeys = __webpack_require__(49).concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){\n  return $keys(O, hiddenKeys);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ29wbi5qcz8xZTA3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi43IC8gMTUuMi4zLjQgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbnZhciAka2V5cyAgICAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKVxuICAsIGhpZGRlbktleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJykuY29uY2F0KCdsZW5ndGgnLCAncHJvdG90eXBlJyk7XG5cbmV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHx8IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoTyl7XG4gIHJldHVybiAka2V5cyhPLCBoaWRkZW5LZXlzKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ29wbi5qc1xuLy8gbW9kdWxlIGlkID0gODZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has         = __webpack_require__(15)\n  , toObject    = __webpack_require__(37)\n  , IE_PROTO    = __webpack_require__(57)('IE_PROTO')\n  , ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function(O){\n  O = toObject(O);\n  if(has(O, IE_PROTO))return O[IE_PROTO];\n  if(typeof O.constructor == 'function' && O instanceof O.constructor){\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZ3BvLmpzP2Q0N2QiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMTkuMS4yLjkgLyAxNS4yLjMuMiBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciBoYXMgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpXG4gICwgdG9PYmplY3QgICAgPSByZXF1aXJlKCcuL190by1vYmplY3QnKVxuICAsIElFX1BST1RPICAgID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpXG4gICwgT2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5nZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbihPKXtcbiAgTyA9IHRvT2JqZWN0KE8pO1xuICBpZihoYXMoTywgSUVfUFJPVE8pKXJldHVybiBPW0lFX1BST1RPXTtcbiAgaWYodHlwZW9mIE8uY29uc3RydWN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBPIGluc3RhbmNlb2YgTy5jb25zdHJ1Y3Rvcil7XG4gICAgcmV0dXJuIE8uY29uc3RydWN0b3IucHJvdG90eXBlO1xuICB9IHJldHVybiBPIGluc3RhbmNlb2YgT2JqZWN0ID8gT2JqZWN0UHJvdG8gOiBudWxsO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1ncG8uanNcbi8vIG1vZHVsZSBpZCA9IDg3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

eval("var has          = __webpack_require__(15)\n  , toIObject    = __webpack_require__(17)\n  , arrayIndexOf = __webpack_require__(134)(false)\n  , IE_PROTO     = __webpack_require__(57)('IE_PROTO');\n\nmodule.exports = function(object, names){\n  var O      = toIObject(object)\n    , i      = 0\n    , result = []\n    , key;\n  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while(names.length > i)if(has(O, key = names[i++])){\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3Qta2V5cy1pbnRlcm5hbC5qcz9mY2VhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBoYXMgICAgICAgICAgPSByZXF1aXJlKCcuL19oYXMnKVxuICAsIHRvSU9iamVjdCAgICA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKVxuICAsIGFycmF5SW5kZXhPZiA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJykoZmFsc2UpXG4gICwgSUVfUFJPVE8gICAgID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9iamVjdCwgbmFtZXMpe1xuICB2YXIgTyAgICAgID0gdG9JT2JqZWN0KG9iamVjdClcbiAgICAsIGkgICAgICA9IDBcbiAgICAsIHJlc3VsdCA9IFtdXG4gICAgLCBrZXk7XG4gIGZvcihrZXkgaW4gTylpZihrZXkgIT0gSUVfUFJPVE8paGFzKE8sIGtleSkgJiYgcmVzdWx0LnB1c2goa2V5KTtcbiAgLy8gRG9uJ3QgZW51bSBidWcgJiBoaWRkZW4ga2V5c1xuICB3aGlsZShuYW1lcy5sZW5ndGggPiBpKWlmKGhhcyhPLCBrZXkgPSBuYW1lc1tpKytdKSl7XG4gICAgfmFycmF5SW5kZXhPZihyZXN1bHQsIGtleSkgfHwgcmVzdWx0LnB1c2goa2V5KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1rZXlzLWludGVybmFsLmpzXG4vLyBtb2R1bGUgaWQgPSA4OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

eval("// most Object methods by ES6 should accept primitives\nvar $export = __webpack_require__(14)\n  , core    = __webpack_require__(0)\n  , fails   = __webpack_require__(20);\nmodule.exports = function(KEY, exec){\n  var fn  = (core.Object || {})[KEY] || Object[KEY]\n    , exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3Qtc2FwLmpzP2EwM2UiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbW9zdCBPYmplY3QgbWV0aG9kcyBieSBFUzYgc2hvdWxkIGFjY2VwdCBwcmltaXRpdmVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpXG4gICwgY29yZSAgICA9IHJlcXVpcmUoJy4vX2NvcmUnKVxuICAsIGZhaWxzICAgPSByZXF1aXJlKCcuL19mYWlscycpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihLRVksIGV4ZWMpe1xuICB2YXIgZm4gID0gKGNvcmUuT2JqZWN0IHx8IHt9KVtLRVldIHx8IE9iamVjdFtLRVldXG4gICAgLCBleHAgPSB7fTtcbiAgZXhwW0tFWV0gPSBleGVjKGZuKTtcbiAgJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiBmYWlscyhmdW5jdGlvbigpeyBmbigxKTsgfSksICdPYmplY3QnLCBleHApO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1zYXAuanNcbi8vIG1vZHVsZSBpZCA9IDg5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

eval("var classof   = __webpack_require__(80)\n  , ITERATOR  = __webpack_require__(3)('iterator')\n  , Iterators = __webpack_require__(24);\nmodule.exports = __webpack_require__(0).getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZC5qcz85Yzg4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBjbGFzc29mICAgPSByZXF1aXJlKCcuL19jbGFzc29mJylcbiAgLCBJVEVSQVRPUiAgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKVxuICAsIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb3JlJykuZ2V0SXRlcmF0b3JNZXRob2QgPSBmdW5jdGlvbihpdCl7XG4gIGlmKGl0ICE9IHVuZGVmaW5lZClyZXR1cm4gaXRbSVRFUkFUT1JdXG4gICAgfHwgaXRbJ0BAaXRlcmF0b3InXVxuICAgIHx8IEl0ZXJhdG9yc1tjbGFzc29mKGl0KV07XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QuanNcbi8vIG1vZHVsZSBpZCA9IDkwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(166);\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window && typeof window.process !== 'undefined' && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document && 'WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window && window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(222)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(1);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(2);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(11);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(10);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _debug = __webpack_require__(91);\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _audioContext = __webpack_require__(18);\n\nvar _audioContext2 = _interopRequireDefault(_audioContext);\n\nvar _schedulingQueue = __webpack_require__(40);\n\nvar _schedulingQueue2 = _interopRequireDefault(_schedulingQueue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar log = (0, _debug2.default)('wavesjs:audio');\n\nvar Scheduler = function (_SchedulingQueue) {\n  (0, _inherits3.default)(Scheduler, _SchedulingQueue);\n\n  function Scheduler() {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    (0, _classCallCheck3.default)(this, Scheduler);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(Scheduler).call(this));\n\n    _this.audioContext = options.audioContext || _audioContext2.default;\n\n    _this.__currentTime = null;\n    _this.__nextTime = Infinity;\n    _this.__timeout = null;\n\n    /**\n     * scheduler (setTimeout) period\n     * @type {Number}\n     */\n    _this.period = options.period || 0.025;\n\n    /**\n     * scheduler lookahead time (> period)\n     * @type {Number}\n     */\n    _this.lookahead = options.lookahead || 0.1;\n    return _this;\n  }\n\n  // setTimeout scheduling loop\n\n\n  (0, _createClass3.default)(Scheduler, [{\n    key: '__tick',\n    value: function __tick() {\n      var audioContext = this.audioContext;\n      var currentTime = audioContext.currentTime;\n      var time = this.__nextTime;\n\n      this.__timeout = null;\n\n      while (time <= currentTime + this.lookahead) {\n        this.__currentTime = time;\n        time = this.advanceTime(time);\n      }\n\n      this.__currentTime = null;\n      this.resetTime(time);\n    }\n  }, {\n    key: 'resetTime',\n    value: function resetTime() {\n      var _this2 = this;\n\n      var time = arguments.length <= 0 || arguments[0] === undefined ? this.currentTime : arguments[0];\n\n      if (this.master) {\n        this.master.reset(this, time);\n      } else {\n        if (this.__timeout) {\n          clearTimeout(this.__timeout);\n          this.__timeout = null;\n        }\n\n        if (time !== Infinity) {\n          if (this.__nextTime === Infinity) log('Scheduler Start');\n\n          var timeOutDelay = Math.max(time - this.lookahead - this.audioContext.currentTime, this.period);\n\n          this.__timeout = setTimeout(function () {\n            _this2.__tick();\n          }, timeOutDelay * 1000);\n        } else if (this.__nextTime !== Infinity) {\n          log('Scheduler Stop');\n        }\n\n        this.__nextTime = time;\n      }\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      if (this.master) return this.master.currentTime;\n\n      return this.__currentTime || this.audioContext.currentTime + this.lookahead;\n    }\n  }, {\n    key: 'currentPosition',\n    get: function get() {\n      var master = this.master;\n\n      if (master && master.currentPosition !== undefined) return master.currentPosition;\n\n      return undefined;\n    }\n  }]);\n  return Scheduler;\n}(_schedulingQueue2.default);\n\nexports.default = Scheduler;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVkdWxlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUEsSUFBTSxNQUFNLHFCQUFNLGVBQU4sQ0FBTjs7SUFFZTs7O0FBQ25CLFdBRG1CLFNBQ25CLEdBQTBCO1FBQWQsZ0VBQVUsa0JBQUk7d0NBRFAsV0FDTzs7NkZBRFAsdUJBQ087O0FBR3hCLFVBQUssWUFBTCxHQUFvQixRQUFRLFlBQVIsMEJBQXBCLENBSHdCOztBQUt4QixVQUFLLGFBQUwsR0FBcUIsSUFBckIsQ0FMd0I7QUFNeEIsVUFBSyxVQUFMLEdBQWtCLFFBQWxCLENBTndCO0FBT3hCLFVBQUssU0FBTCxHQUFpQixJQUFqQjs7Ozs7O0FBUHdCLFNBYXhCLENBQUssTUFBTCxHQUFjLFFBQVEsTUFBUixJQUFtQixLQUFuQjs7Ozs7O0FBYlUsU0FtQnhCLENBQUssU0FBTCxHQUFpQixRQUFRLFNBQVIsSUFBc0IsR0FBdEIsQ0FuQk87O0dBQTFCOzs7Ozs2QkFEbUI7OzZCQXdCVjtBQUNQLFVBQU0sZUFBZSxLQUFLLFlBQUwsQ0FEZDtBQUVQLFVBQU0sY0FBYyxhQUFhLFdBQWIsQ0FGYjtBQUdQLFVBQUksT0FBTyxLQUFLLFVBQUwsQ0FISjs7QUFLUCxXQUFLLFNBQUwsR0FBaUIsSUFBakIsQ0FMTzs7QUFPUCxhQUFPLFFBQVEsY0FBYyxLQUFLLFNBQUwsRUFBZ0I7QUFDM0MsYUFBSyxhQUFMLEdBQXFCLElBQXJCLENBRDJDO0FBRTNDLGVBQU8sS0FBSyxXQUFMLENBQWlCLElBQWpCLENBQVAsQ0FGMkM7T0FBN0M7O0FBS0EsV0FBSyxhQUFMLEdBQXFCLElBQXJCLENBWk87QUFhUCxXQUFLLFNBQUwsQ0FBZSxJQUFmLEVBYk87Ozs7Z0NBZ0IwQjs7O1VBQXpCLDZEQUFPLEtBQUssV0FBTCxnQkFBa0I7O0FBQ2pDLFVBQUksS0FBSyxNQUFMLEVBQWE7QUFDZixhQUFLLE1BQUwsQ0FBWSxLQUFaLENBQWtCLElBQWxCLEVBQXdCLElBQXhCLEVBRGU7T0FBakIsTUFFTztBQUNMLFlBQUksS0FBSyxTQUFMLEVBQWdCO0FBQ2xCLHVCQUFhLEtBQUssU0FBTCxDQUFiLENBRGtCO0FBRWxCLGVBQUssU0FBTCxHQUFpQixJQUFqQixDQUZrQjtTQUFwQjs7QUFLQSxZQUFJLFNBQVMsUUFBVCxFQUFtQjtBQUNyQixjQUFJLEtBQUssVUFBTCxLQUFvQixRQUFwQixFQUNGLElBQUksaUJBQUosRUFERjs7QUFHQSxjQUFNLGVBQWUsS0FBSyxHQUFMLENBQVUsT0FBTyxLQUFLLFNBQUwsR0FBaUIsS0FBSyxZQUFMLENBQWtCLFdBQWxCLEVBQWdDLEtBQUssTUFBTCxDQUFqRixDQUplOztBQU1yQixlQUFLLFNBQUwsR0FBaUIsV0FBVyxZQUFNO0FBQ2hDLG1CQUFLLE1BQUwsR0FEZ0M7V0FBTixFQUV6QixlQUFlLElBQWYsQ0FGSCxDQU5xQjtTQUF2QixNQVNPLElBQUksS0FBSyxVQUFMLEtBQW9CLFFBQXBCLEVBQThCO0FBQ3ZDLGNBQUksZ0JBQUosRUFEdUM7U0FBbEM7O0FBSVAsYUFBSyxVQUFMLEdBQWtCLElBQWxCLENBbkJLO09BRlA7Ozs7d0JBeUJnQjtBQUNoQixVQUFJLEtBQUssTUFBTCxFQUNGLE9BQU8sS0FBSyxNQUFMLENBQVksV0FBWixDQURUOztBQUdBLGFBQU8sS0FBSyxhQUFMLElBQXNCLEtBQUssWUFBTCxDQUFrQixXQUFsQixHQUFnQyxLQUFLLFNBQUwsQ0FKN0M7Ozs7d0JBT0k7QUFDcEIsVUFBTSxTQUFTLEtBQUssTUFBTCxDQURLOztBQUdwQixVQUFJLFVBQVUsT0FBTyxlQUFQLEtBQTJCLFNBQTNCLEVBQ1osT0FBTyxPQUFPLGVBQVAsQ0FEVDs7QUFHQSxhQUFPLFNBQVAsQ0FOb0I7OztTQXpFSCIsImZpbGUiOiJzY2hlZHVsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IGRlZmF1bHRBdWRpb0NvbnRleHQgZnJvbSAnLi4vY29yZS9hdWRpby1jb250ZXh0JztcbmltcG9ydCBTY2hlZHVsaW5nUXVldWUgZnJvbSAnLi4vY29yZS9zY2hlZHVsaW5nLXF1ZXVlJztcblxuY29uc3QgbG9nID0gZGVidWcoJ3dhdmVzanM6YXVkaW8nKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2NoZWR1bGVyIGV4dGVuZHMgU2NoZWR1bGluZ1F1ZXVlIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuYXVkaW9Db250ZXh0ID0gb3B0aW9ucy5hdWRpb0NvbnRleHQgfHwgwqBkZWZhdWx0QXVkaW9Db250ZXh0O1xuXG4gICAgdGhpcy5fX2N1cnJlbnRUaW1lID0gbnVsbDtcbiAgICB0aGlzLl9fbmV4dFRpbWUgPSBJbmZpbml0eTtcbiAgICB0aGlzLl9fdGltZW91dCA9IG51bGw7XG5cbiAgICAvKipcbiAgICAgKiBzY2hlZHVsZXIgKHNldFRpbWVvdXQpIHBlcmlvZFxuICAgICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAgICovXG4gICAgdGhpcy5wZXJpb2QgPSBvcHRpb25zLnBlcmlvZCB8fCDCoDAuMDI1O1xuXG4gICAgLyoqXG4gICAgICogc2NoZWR1bGVyIGxvb2thaGVhZCB0aW1lICg+IHBlcmlvZClcbiAgICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgICAqL1xuICAgIHRoaXMubG9va2FoZWFkID0gb3B0aW9ucy5sb29rYWhlYWQgfHwgwqAwLjE7XG4gIH1cblxuICAvLyBzZXRUaW1lb3V0IHNjaGVkdWxpbmcgbG9vcFxuICBfX3RpY2soKSB7XG4gICAgY29uc3QgYXVkaW9Db250ZXh0ID0gdGhpcy5hdWRpb0NvbnRleHQ7XG4gICAgY29uc3QgY3VycmVudFRpbWUgPSBhdWRpb0NvbnRleHQuY3VycmVudFRpbWU7XG4gICAgbGV0IHRpbWUgPSB0aGlzLl9fbmV4dFRpbWU7XG5cbiAgICB0aGlzLl9fdGltZW91dCA9IG51bGw7XG5cbiAgICB3aGlsZSAodGltZSA8PSBjdXJyZW50VGltZSArIHRoaXMubG9va2FoZWFkKSB7XG4gICAgICB0aGlzLl9fY3VycmVudFRpbWUgPSB0aW1lO1xuICAgICAgdGltZSA9IHRoaXMuYWR2YW5jZVRpbWUodGltZSk7XG4gICAgfVxuXG4gICAgdGhpcy5fX2N1cnJlbnRUaW1lID0gbnVsbDtcbiAgICB0aGlzLnJlc2V0VGltZSh0aW1lKTtcbiAgfVxuXG4gIHJlc2V0VGltZSh0aW1lID0gdGhpcy5jdXJyZW50VGltZSkge1xuICAgIGlmICh0aGlzLm1hc3Rlcikge1xuICAgICAgdGhpcy5tYXN0ZXIucmVzZXQodGhpcywgdGltZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh0aGlzLl9fdGltZW91dCkge1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5fX3RpbWVvdXQpO1xuICAgICAgICB0aGlzLl9fdGltZW91dCA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aW1lICE9PSBJbmZpbml0eSkge1xuICAgICAgICBpZiAodGhpcy5fX25leHRUaW1lID09PSBJbmZpbml0eSlcbiAgICAgICAgICBsb2coJ1NjaGVkdWxlciBTdGFydCcpO1xuXG4gICAgICAgIGNvbnN0IHRpbWVPdXREZWxheSA9IE1hdGgubWF4KCh0aW1lIC0gdGhpcy5sb29rYWhlYWQgLSB0aGlzLmF1ZGlvQ29udGV4dC5jdXJyZW50VGltZSksIHRoaXMucGVyaW9kKTtcblxuICAgICAgICB0aGlzLl9fdGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRoaXMuX190aWNrKCk7XG4gICAgICAgIH0sIHRpbWVPdXREZWxheSAqIDEwMDApO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLl9fbmV4dFRpbWUgIT09IEluZmluaXR5KSB7XG4gICAgICAgIGxvZygnU2NoZWR1bGVyIFN0b3AnKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fX25leHRUaW1lID0gdGltZTtcbiAgICB9XG4gIH1cblxuICBnZXQgY3VycmVudFRpbWUoKSB7XG4gICAgaWYgKHRoaXMubWFzdGVyKVxuICAgICAgcmV0dXJuIHRoaXMubWFzdGVyLmN1cnJlbnRUaW1lO1xuXG4gICAgcmV0dXJuIHRoaXMuX19jdXJyZW50VGltZSB8fCB0aGlzLmF1ZGlvQ29udGV4dC5jdXJyZW50VGltZSArIHRoaXMubG9va2FoZWFkO1xuICB9XG5cbiAgZ2V0IGN1cnJlbnRQb3NpdGlvbigpIHtcbiAgICBjb25zdCBtYXN0ZXIgPSB0aGlzLm1hc3RlcjtcblxuICAgIGlmIChtYXN0ZXIgJiYgbWFzdGVyLmN1cnJlbnRQb3NpdGlvbiAhPT0gdW5kZWZpbmVkKVxuICAgICAgcmV0dXJuIG1hc3Rlci5jdXJyZW50UG9zaXRpb247XG5cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG4iXX0=//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _set = __webpack_require__(77);\n\nvar _set2 = _interopRequireDefault(_set);\n\nvar _classCallCheck2 = __webpack_require__(1);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(2);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _debug = __webpack_require__(91);\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _audioContext = __webpack_require__(18);\n\nvar _audioContext2 = _interopRequireDefault(_audioContext);\n\nvar _timeEngine = __webpack_require__(22);\n\nvar _timeEngine2 = _interopRequireDefault(_timeEngine);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar log = (0, _debug2.default)('wavesjs:audio');\n\nvar SimpleScheduler = function () {\n  function SimpleScheduler() {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    (0, _classCallCheck3.default)(this, SimpleScheduler);\n\n    this.audioContext = options.audioContext || _audioContext2.default;\n\n    this.__engines = new _set2.default();\n\n    this.__schedEngines = [];\n    this.__schedTimes = [];\n\n    this.__currentTime = null;\n    this.__timeout = null;\n\n    /**\n     * scheduler (setTimeout) period\n     * @type {Number}\n     */\n    this.period = options.period || 0.025;\n\n    /**\n     * scheduler lookahead time (> period)\n     * @type {Number}\n     */\n    this.lookahead = options.lookahead || 0.1;\n  }\n\n  (0, _createClass3.default)(SimpleScheduler, [{\n    key: '__scheduleEngine',\n    value: function __scheduleEngine(engine, time) {\n      this.__schedEngines.push(engine);\n      this.__schedTimes.push(time);\n    }\n  }, {\n    key: '__rescheduleEngine',\n    value: function __rescheduleEngine(engine, time) {\n      var index = this.__schedEngines.indexOf(engine);\n\n      if (index >= 0) {\n        if (time !== Infinity) {\n          this.__schedTimes[index] = time;\n        } else {\n          this.__schedEngines.splice(index, 1);\n          this.__schedTimes.splice(index, 1);\n        }\n      } else if (time < Infinity) {\n        this.__schedEngines.push(engine);\n        this.__schedTimes.push(time);\n      }\n    }\n  }, {\n    key: '__unscheduleEngine',\n    value: function __unscheduleEngine(engine) {\n      var index = this.__schedEngines.indexOf(engine);\n\n      if (index >= 0) {\n        this.__schedEngines.splice(index, 1);\n        this.__schedTimes.splice(index, 1);\n      }\n    }\n  }, {\n    key: '__resetTick',\n    value: function __resetTick() {\n      if (this.__schedEngines.length > 0) {\n        if (!this.__timeout) {\n          log('SimpleScheduler Start');\n          this.__tick();\n        }\n      } else if (this.__timeout) {\n        log('SimpleScheduler Stop');\n        clearTimeout(this.__timeout);\n        this.__timeout = null;\n      }\n    }\n  }, {\n    key: '__tick',\n    value: function __tick() {\n      var _this = this;\n\n      var audioContext = this.audioContext;\n      var currentTime = audioContext.currentTime;\n      var i = 0;\n\n      while (i < this.__schedEngines.length) {\n        var engine = this.__schedEngines[i];\n        var time = this.__schedTimes[i];\n\n        while (time && time <= currentTime + this.lookahead) {\n          time = Math.max(time, currentTime);\n          this.__currentTime = time;\n          time = engine.advanceTime(time);\n        }\n\n        if (time && time < Infinity) {\n          this.__schedTimes[i++] = time;\n        } else {\n          this.__unscheduleEngine(engine);\n\n          // remove engine from scheduler\n          if (!time) {\n            engine.master = null;\n            this.__engines.delete(engine);\n          }\n        }\n      }\n\n      this.__currentTime = null;\n      this.__timeout = null;\n\n      if (this.__schedEngines.length > 0) {\n        this.__timeout = setTimeout(function () {\n          _this.__tick();\n        }, this.period * 1000);\n      }\n    }\n  }, {\n    key: 'defer',\n\n\n    // call a function at a given time\n    value: function defer(fun) {\n      var time = arguments.length <= 1 || arguments[1] === undefined ? this.currentTime : arguments[1];\n\n      if (!(fun instanceof Function)) throw new Error(\"object cannot be defered by scheduler\");\n\n      this.add({\n        advanceTime: function advanceTime(time) {\n          fun(time);\n        } }, // make sur that the advanceTime method does not returm anything\n      time);\n    }\n\n    // add a time engine to the scheduler\n\n  }, {\n    key: 'add',\n    value: function add(engine) {\n      var time = arguments.length <= 1 || arguments[1] === undefined ? this.currentTime : arguments[1];\n\n      if (!_timeEngine2.default.implementsScheduled(engine)) throw new Error(\"object cannot be added to scheduler\");\n\n      if (engine.master) throw new Error(\"object has already been added to a master\");\n\n      // set master and add to array\n      engine.master = this;\n      this.__engines.add(engine);\n\n      // schedule engine\n      this.__scheduleEngine(engine, time);\n      this.__resetTick();\n    }\n  }, {\n    key: 'remove',\n    value: function remove(engine) {\n      if (!engine.master || engine.master !== this) throw new Error(\"engine has not been added to this scheduler\");\n\n      // reset master and remove from array\n      engine.master = null;\n      this.__engines.delete(engine);\n\n      // unschedule engine\n      this.__unscheduleEngine(engine);\n      this.__resetTick();\n    }\n  }, {\n    key: 'resetEngineTime',\n    value: function resetEngineTime(engine) {\n      var time = arguments.length <= 1 || arguments[1] === undefined ? this.currentTime : arguments[1];\n\n      this.__rescheduleEngine(engine, time);\n      this.__resetTick();\n    }\n\n    // check whether a given engine is scheduled\n\n  }, {\n    key: 'has',\n    value: function has(engine) {\n      return this.__engines.has(engine);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      if (this.__timeout) {\n        clearTimeout(this.__timeout);\n        this.__timeout = null;\n      }\n\n      this.__schedEngines.length = 0;\n      this.__schedTimes.length = 0;\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      return this.__currentTime || this.audioContext.currentTime + this.lookahead;\n    }\n  }, {\n    key: 'currentPosition',\n    get: function get() {\n      return undefined;\n    }\n  }]);\n  return SimpleScheduler;\n}();\n\nexports.default = SimpleScheduler;\n//# sourceMappingURL=data:application/json;base64,# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _inherits = __webpack_require__(99)['default'];\n\nvar _get = __webpack_require__(98)['default'];\n\nvar _createClass = __webpack_require__(97)['default'];\n\nvar _classCallCheck = __webpack_require__(68)['default'];\n\nvar _Object$defineProperty = __webpack_require__(41)['default'];\n\nvar _Promise = __webpack_require__(96)['default'];\n\nvar _interopRequireDefault = __webpack_require__(100)['default'];\n\n_Object$defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _loader = __webpack_require__(95);\n\nvar _loader2 = _interopRequireDefault(_loader);\n\n/**\n * Gets called if a parameter is missing and the expression\n * specifying the default value is evaluated.\n * @function\n */\nfunction throwIfMissing() {\n  throw new Error('Missing parameter');\n}\n\nvar audioContext = undefined;\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\n\ntry {\n  audioContext = new window.AudioContext();\n} catch (e) {}\n\n/**\n * AudioBufferLoader\n * Promise based implementation of XMLHttpRequest Level 2 for GET method and decode audio data for arraybuffer.\n */\n\nvar AudioBufferLoader = (function (_Loader) {\n  /**\n   * Set the responseType to 'arraybuffer' and initialize options.\n   * @param {string} [responseType=\"arraybuffer\"]\n   */\n\n  function AudioBufferLoader() {\n    var responseType = arguments[0] === undefined ? 'arraybuffer' : arguments[0];\n\n    _classCallCheck(this, AudioBufferLoader);\n\n    _get(Object.getPrototypeOf(AudioBufferLoader.prototype), 'constructor', this).call(this, responseType);\n    this.options = {\n      'wrapAroundExtension': 0\n    };\n    this.responseType = responseType;\n  }\n\n  _inherits(AudioBufferLoader, _Loader);\n\n  _createClass(AudioBufferLoader, [{\n    key: 'load',\n\n    /**\n     * Method for promise audio file loading and decoding.\n     * @param {(string|string[])} fileURLs - The URL(s) of the audio files to load. Accepts a URL pointing to the file location or an array of URLs.\n     * @param {{wrapAroundExtension: number}} [options] - Object with a wrapAroundExtension key which set the length, in seconds to be copied from the begining at the end of the returned AudioBuffer\n     * @returns {Promise}\n     */\n    value: function load() {\n      var fileURLs = arguments[0] === undefined ? throwIfMissing() : arguments[0];\n      var options = arguments[1] === undefined ? {} : arguments[1];\n\n      this.options = options;\n      this.options.wrapAroundExtension = this.options.wrapAroundExtension || 0;\n      return _get(Object.getPrototypeOf(AudioBufferLoader.prototype), 'load', this).call(this, fileURLs);\n    }\n  }, {\n    key: 'loadOne',\n\n    /**\n     * Load a single audio file, decode it in an AudioBuffer, return a Promise\n     * @private\n     * @param {string} fileURL - The URL of the audio file location to load.\n     * @returns {Promise}\n     */\n    value: function loadOne(fileURL) {\n      return _get(Object.getPrototypeOf(AudioBufferLoader.prototype), 'loadOne', this).call(this, fileURL).then(this.decodeAudioData.bind(this), function (error) {\n        throw error;\n      });\n    }\n  }, {\n    key: 'loadAll',\n\n    /**\n     * Load all audio files at once in a single array, decode them in an array of AudioBuffers, and return a Promise.\n     * @private\n     * @param {string[]} fileURLs - The URLs array of the audio files to load.\n     * @returns {Promise}\n     */\n    value: function loadAll(fileURLs) {\n      var _this = this;\n\n      return _get(Object.getPrototypeOf(AudioBufferLoader.prototype), 'loadAll', this).call(this, fileURLs).then(function (arraybuffers) {\n        return _Promise.all(arraybuffers.map(function (arraybuffer) {\n          return _this.decodeAudioData.bind(_this)(arraybuffer);\n        }));\n      }, function (error) {\n        throw error; // TODO: better error handler\n      });\n    }\n  }, {\n    key: 'decodeAudioData',\n\n    /**\n     * Decode Audio Data, return a Promise\n     * @private\n     * @param {arraybuffer} - The arraybuffer of the loaded audio file to be decoded.\n     * @returns {Promise}\n     */\n    value: function decodeAudioData(arraybuffer) {\n      var _this2 = this;\n\n      if (arraybuffer instanceof ArrayBuffer) {\n        return new _Promise(function (resolve, reject) {\n          audioContext.decodeAudioData(arraybuffer, // returned audio data array\n          function (buffer) {\n            if (_this2.options.wrapAroundExtension === 0) resolve(buffer);else resolve(_this2.__wrapAround(buffer));\n          }, function (error) {\n            reject(new Error('DecodeAudioData error'));\n          });\n        });\n      } else {\n        return new _Promise(function (resolve, reject) {\n          resolve(arraybuffer);\n        });\n      }\n    }\n  }, {\n    key: '__wrapAround',\n\n    /**\n     * WrapAround, copy the begining input buffer to the end of an output buffer\n     * @private\n     * @param {arraybuffer} inBuffer {arraybuffer} - The input buffer\n     * @returns {arraybuffer} - The processed buffer (with frame copied from the begining to the end)\n     */\n    value: function __wrapAround(inBuffer) {\n      var length = inBuffer.length + this.options.wrapAroundExtension * inBuffer.sampleRate;\n\n      var outBuffer = audioContext.createBuffer(inBuffer.numberOfChannels, length, inBuffer.sampleRate);\n      var arrayChData, arrayOutChData;\n\n      for (var channel = 0; channel < inBuffer.numberOfChannels; channel++) {\n        arrayChData = inBuffer.getChannelData(channel);\n        arrayOutChData = outBuffer.getChannelData(channel);\n\n        arrayOutChData.forEach(function (sample, index) {\n          if (index < inBuffer.length) arrayOutChData[index] = arrayChData[index];else arrayOutChData[index] = arrayChData[index - inBuffer.length];\n        });\n      }\n\n      return outBuffer;\n    }\n  }]);\n\n  return AudioBufferLoader;\n})(_loader2['default']);\n\nexports['default'] = AudioBufferLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVzNi9hdWRpby1idWZmZXItbG9hZGVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3NCQUFtQixVQUFVOzs7Ozs7Ozs7QUFRN0IsU0FBUyxjQUFjLEdBQUc7QUFDeEIsUUFBTSxJQUFJLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0NBQ3RDOztBQUVELElBQUksWUFBWSxZQUFBLENBQUM7O0FBRWpCLE1BQU0sQ0FBQyxZQUFZLEdBQUksTUFBTSxDQUFDLFlBQVksSUFBSSxNQUFNLENBQUMsa0JBQWtCLEFBQUMsQ0FBQzs7QUFFekUsSUFBSTtBQUNGLGNBQVksR0FBRyxJQUFJLE1BQU0sQ0FBQyxZQUFZLEVBQUUsQ0FBQztDQUMxQyxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUU7Ozs7Ozs7SUFPTyxpQkFBaUI7Ozs7OztBQUt6QixXQUxRLGlCQUFpQixHQUtNO1FBQTlCLFlBQVksZ0NBQUcsYUFBYTs7MEJBTHJCLGlCQUFpQjs7QUFNbEMsK0JBTmlCLGlCQUFpQiw2Q0FNNUIsWUFBWSxFQUFFO0FBQ3BCLFFBQUksQ0FBQyxPQUFPLEdBQUc7QUFDYiwyQkFBcUIsRUFBRSxDQUFDO0tBQ3pCLENBQUM7QUFDRixRQUFJLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQztHQUVsQzs7WUFaa0IsaUJBQWlCOztlQUFqQixpQkFBaUI7Ozs7Ozs7OztXQW9CaEMsZ0JBQTRDO1VBQTNDLFFBQVEsZ0NBQUcsY0FBYyxFQUFFO1VBQUUsT0FBTyxnQ0FBRyxFQUFFOztBQUM1QyxVQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztBQUN2QixVQUFJLENBQUMsT0FBTyxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsbUJBQW1CLElBQUksQ0FBQyxDQUFDO0FBQ3pFLHdDQXZCaUIsaUJBQWlCLHNDQXVCaEIsUUFBUSxFQUFFO0tBQzdCOzs7Ozs7Ozs7O1dBUU0saUJBQUMsT0FBTyxFQUFFO0FBQ2YsYUFBTywyQkFqQ1UsaUJBQWlCLHlDQWlDYixPQUFPLEVBQ3pCLElBQUksQ0FDSCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFDL0IsVUFBUyxLQUFLLEVBQUU7QUFDZCxjQUFNLEtBQUssQ0FBQztPQUNiLENBQUMsQ0FBQztLQUNSOzs7Ozs7Ozs7O1dBUU0saUJBQUMsUUFBUSxFQUFFOzs7QUFDaEIsYUFBTywyQkFoRFUsaUJBQWlCLHlDQWdEYixRQUFRLEVBQzFCLElBQUksQ0FDSCxVQUFDLFlBQVksRUFBSztBQUNoQixlQUFPLFNBQVEsR0FBRyxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsVUFBQyxXQUFXLEVBQUs7QUFDbkQsaUJBQU8sTUFBSyxlQUFlLENBQUMsSUFBSSxPQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7U0FDckQsQ0FBQyxDQUFDLENBQUM7T0FDTCxFQUFFLFVBQUMsS0FBSyxFQUFLO0FBQ1osY0FBTSxLQUFLLENBQUM7T0FDYixDQUFDLENBQUM7S0FDUjs7Ozs7Ozs7OztXQVFjLHlCQUFDLFdBQVcsRUFBRTs7O0FBQzNCLFVBQUksV0FBVyxZQUFZLFdBQVcsRUFBRTtBQUN0QyxlQUFPLGFBQVksVUFBQyxPQUFPLEVBQUUsTUFBTSxFQUFLO0FBQ3RDLHNCQUFZLENBQUMsZUFBZSxDQUMxQixXQUFXO0FBQ1gsb0JBQUMsTUFBTSxFQUFLO0FBQ1YsZ0JBQUksT0FBSyxPQUFPLENBQUMsbUJBQW1CLEtBQUssQ0FBQyxFQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUN2RCxPQUFPLENBQUMsT0FBSyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztXQUN6QyxFQUFFLFVBQUMsS0FBSyxFQUFLO0FBQ1osa0JBQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUM7V0FDNUMsQ0FDRixDQUFDO1NBQ0gsQ0FBQyxDQUFDO09BQ0osTUFBTTtBQUNMLGVBQU8sYUFBWSxVQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUs7QUFDdEMsaUJBQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztTQUN0QixDQUFDLENBQUM7T0FDSjtLQUNGOzs7Ozs7Ozs7O1dBUVcsc0JBQUMsUUFBUSxFQUFFO0FBQ3JCLFVBQUksTUFBTSxHQUFHLFFBQVEsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsR0FBRyxRQUFRLENBQUMsVUFBVSxDQUFDOztBQUV0RixVQUFJLFNBQVMsR0FBRyxZQUFZLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ2xHLFVBQUksV0FBVyxFQUFFLGNBQWMsQ0FBQzs7QUFFaEMsV0FBSyxJQUFJLE9BQU8sR0FBRyxDQUFDLEVBQUUsT0FBTyxHQUFHLFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxPQUFPLEVBQUUsRUFBRTtBQUNwRSxtQkFBVyxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDL0Msc0JBQWMsR0FBRyxTQUFTLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDOztBQUVuRCxzQkFBYyxDQUFDLE9BQU8sQ0FBQyxVQUFTLE1BQU0sRUFBRSxLQUFLLEVBQUU7QUFDN0MsY0FBSSxLQUFLLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxjQUFjLENBQUMsS0FBSyxDQUFDLEdBQUcsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBQ25FLGNBQWMsQ0FBQyxLQUFLLENBQUMsR0FBRyxXQUFXLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNuRSxDQUFDLENBQUM7T0FDSjs7QUFFRCxhQUFPLFNBQVMsQ0FBQztLQUNsQjs7O1NBNUdrQixpQkFBaUI7OztxQkFBakIsaUJBQWlCIiwiZmlsZSI6ImVzNi9hdWRpby1idWZmZXItbG9hZGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExvYWRlciBmcm9tICcuL2xvYWRlcic7XG5cblxuLyoqXG4gKiBHZXRzIGNhbGxlZCBpZiBhIHBhcmFtZXRlciBpcyBtaXNzaW5nIGFuZCB0aGUgZXhwcmVzc2lvblxuICogc3BlY2lmeWluZyB0aGUgZGVmYXVsdCB2YWx1ZSBpcyBldmFsdWF0ZWQuXG4gKiBAZnVuY3Rpb25cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZk1pc3NpbmcoKSB7XG4gIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBwYXJhbWV0ZXInKTtcbn1cblxubGV0IGF1ZGlvQ29udGV4dDtcblxud2luZG93LkF1ZGlvQ29udGV4dCA9ICh3aW5kb3cuQXVkaW9Db250ZXh0IHx8IHdpbmRvdy53ZWJraXRBdWRpb0NvbnRleHQpO1xuXG50cnkge1xuICBhdWRpb0NvbnRleHQgPSBuZXcgd2luZG93LkF1ZGlvQ29udGV4dCgpO1xufSBjYXRjaCAoZSkge31cblxuXG4vKipcbiAqIEF1ZGlvQnVmZmVyTG9hZGVyXG4gKiBQcm9taXNlIGJhc2VkIGltcGxlbWVudGF0aW9uIG9mIFhNTEh0dHBSZXF1ZXN0IExldmVsIDIgZm9yIEdFVCBtZXRob2QgYW5kIGRlY29kZSBhdWRpbyBkYXRhIGZvciBhcnJheWJ1ZmZlci5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXVkaW9CdWZmZXJMb2FkZXIgZXh0ZW5kcyBMb2FkZXIge1xuICAvKipcbiAgICogU2V0IHRoZSByZXNwb25zZVR5cGUgdG8gJ2FycmF5YnVmZmVyJyBhbmQgaW5pdGlhbGl6ZSBvcHRpb25zLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gW3Jlc3BvbnNlVHlwZT1cImFycmF5YnVmZmVyXCJdXG4gICAqL1xuICBjb25zdHJ1Y3RvcihyZXNwb25zZVR5cGUgPSAnYXJyYXlidWZmZXInKSB7XG4gICAgc3VwZXIocmVzcG9uc2VUeXBlKTtcbiAgICB0aGlzLm9wdGlvbnMgPSB7XG4gICAgICBcIndyYXBBcm91bmRFeHRlbnNpb25cIjogMFxuICAgIH07XG4gICAgdGhpcy5yZXNwb25zZVR5cGUgPSByZXNwb25zZVR5cGU7XG5cbiAgfVxuXG4gIC8qKlxuICAgKiBNZXRob2QgZm9yIHByb21pc2UgYXVkaW8gZmlsZSBsb2FkaW5nIGFuZCBkZWNvZGluZy5cbiAgICogQHBhcmFtIHsoc3RyaW5nfHN0cmluZ1tdKX0gZmlsZVVSTHMgLSBUaGUgVVJMKHMpIG9mIHRoZSBhdWRpbyBmaWxlcyB0byBsb2FkLiBBY2NlcHRzIGEgVVJMIHBvaW50aW5nIHRvIHRoZSBmaWxlIGxvY2F0aW9uIG9yIGFuIGFycmF5IG9mIFVSTHMuXG4gICAqIEBwYXJhbSB7e3dyYXBBcm91bmRFeHRlbnNpb246IG51bWJlcn19IFtvcHRpb25zXSAtIE9iamVjdCB3aXRoIGEgd3JhcEFyb3VuZEV4dGVuc2lvbiBrZXkgd2hpY2ggc2V0IHRoZSBsZW5ndGgsIGluIHNlY29uZHMgdG8gYmUgY29waWVkIGZyb20gdGhlIGJlZ2luaW5nIGF0IHRoZSBlbmQgb2YgdGhlIHJldHVybmVkIEF1ZGlvQnVmZmVyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfVxuICAgKi9cbiAgbG9hZChmaWxlVVJMcyA9IHRocm93SWZNaXNzaW5nKCksIG9wdGlvbnMgPSB7fSkge1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy5vcHRpb25zLndyYXBBcm91bmRFeHRlbnNpb24gPSB0aGlzLm9wdGlvbnMud3JhcEFyb3VuZEV4dGVuc2lvbiB8fCAwO1xuICAgIHJldHVybiBzdXBlci5sb2FkKGZpbGVVUkxzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBMb2FkIGEgc2luZ2xlIGF1ZGlvIGZpbGUsIGRlY29kZSBpdCBpbiBhbiBBdWRpb0J1ZmZlciwgcmV0dXJuIGEgUHJvbWlzZVxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gZmlsZVVSTCAtIFRoZSBVUkwgb2YgdGhlIGF1ZGlvIGZpbGUgbG9jYXRpb24gdG8gbG9hZC5cbiAgICogQHJldHVybnMge1Byb21pc2V9XG4gICAqL1xuICBsb2FkT25lKGZpbGVVUkwpIHtcbiAgICByZXR1cm4gc3VwZXIubG9hZE9uZShmaWxlVVJMKVxuICAgICAgLnRoZW4oXG4gICAgICAgIHRoaXMuZGVjb2RlQXVkaW9EYXRhLmJpbmQodGhpcyksXG4gICAgICAgIGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIExvYWQgYWxsIGF1ZGlvIGZpbGVzIGF0IG9uY2UgaW4gYSBzaW5nbGUgYXJyYXksIGRlY29kZSB0aGVtIGluIGFuIGFycmF5IG9mIEF1ZGlvQnVmZmVycywgYW5kIHJldHVybiBhIFByb21pc2UuXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7c3RyaW5nW119IGZpbGVVUkxzIC0gVGhlIFVSTHMgYXJyYXkgb2YgdGhlIGF1ZGlvIGZpbGVzIHRvIGxvYWQuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlfVxuICAgKi9cbiAgbG9hZEFsbChmaWxlVVJMcykge1xuICAgIHJldHVybiBzdXBlci5sb2FkQWxsKGZpbGVVUkxzKVxuICAgICAgLnRoZW4oXG4gICAgICAgIChhcnJheWJ1ZmZlcnMpID0+IHtcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoYXJyYXlidWZmZXJzLm1hcCgoYXJyYXlidWZmZXIpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRlY29kZUF1ZGlvRGF0YS5iaW5kKHRoaXMpKGFycmF5YnVmZmVyKTtcbiAgICAgICAgICB9KSk7XG4gICAgICAgIH0sIChlcnJvcikgPT4ge1xuICAgICAgICAgIHRocm93IGVycm9yOyAvLyBUT0RPOiBiZXR0ZXIgZXJyb3IgaGFuZGxlclxuICAgICAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZWNvZGUgQXVkaW8gRGF0YSwgcmV0dXJuIGEgUHJvbWlzZVxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge2FycmF5YnVmZmVyfSAtIFRoZSBhcnJheWJ1ZmZlciBvZiB0aGUgbG9hZGVkIGF1ZGlvIGZpbGUgdG8gYmUgZGVjb2RlZC5cbiAgICogQHJldHVybnMge1Byb21pc2V9XG4gICAqL1xuICBkZWNvZGVBdWRpb0RhdGEoYXJyYXlidWZmZXIpIHtcbiAgICBpZiAoYXJyYXlidWZmZXIgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikge1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgYXVkaW9Db250ZXh0LmRlY29kZUF1ZGlvRGF0YShcbiAgICAgICAgICBhcnJheWJ1ZmZlciwgLy8gcmV0dXJuZWQgYXVkaW8gZGF0YSBhcnJheVxuICAgICAgICAgIChidWZmZXIpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMud3JhcEFyb3VuZEV4dGVuc2lvbiA9PT0gMCkgcmVzb2x2ZShidWZmZXIpO1xuICAgICAgICAgICAgZWxzZSByZXNvbHZlKHRoaXMuX193cmFwQXJvdW5kKGJ1ZmZlcikpO1xuICAgICAgICAgIH0sIChlcnJvcikgPT4ge1xuICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihcIkRlY29kZUF1ZGlvRGF0YSBlcnJvclwiKSk7XG4gICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIHJlc29sdmUoYXJyYXlidWZmZXIpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFdyYXBBcm91bmQsIGNvcHkgdGhlIGJlZ2luaW5nIGlucHV0IGJ1ZmZlciB0byB0aGUgZW5kIG9mIGFuIG91dHB1dCBidWZmZXJcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHthcnJheWJ1ZmZlcn0gaW5CdWZmZXIge2FycmF5YnVmZmVyfSAtIFRoZSBpbnB1dCBidWZmZXJcbiAgICogQHJldHVybnMge2FycmF5YnVmZmVyfSAtIFRoZSBwcm9jZXNzZWQgYnVmZmVyICh3aXRoIGZyYW1lIGNvcGllZCBmcm9tIHRoZSBiZWdpbmluZyB0byB0aGUgZW5kKVxuICAgKi9cbiAgX193cmFwQXJvdW5kKGluQnVmZmVyKSB7XG4gICAgdmFyIGxlbmd0aCA9IGluQnVmZmVyLmxlbmd0aCArIHRoaXMub3B0aW9ucy53cmFwQXJvdW5kRXh0ZW5zaW9uICogaW5CdWZmZXIuc2FtcGxlUmF0ZTtcblxuICAgIHZhciBvdXRCdWZmZXIgPSBhdWRpb0NvbnRleHQuY3JlYXRlQnVmZmVyKGluQnVmZmVyLm51bWJlck9mQ2hhbm5lbHMsIGxlbmd0aCwgaW5CdWZmZXIuc2FtcGxlUmF0ZSk7XG4gICAgdmFyIGFycmF5Q2hEYXRhLCBhcnJheU91dENoRGF0YTtcblxuICAgIGZvciAodmFyIGNoYW5uZWwgPSAwOyBjaGFubmVsIDwgaW5CdWZmZXIubnVtYmVyT2ZDaGFubmVsczsgY2hhbm5lbCsrKSB7XG4gICAgICBhcnJheUNoRGF0YSA9IGluQnVmZmVyLmdldENoYW5uZWxEYXRhKGNoYW5uZWwpO1xuICAgICAgYXJyYXlPdXRDaERhdGEgPSBvdXRCdWZmZXIuZ2V0Q2hhbm5lbERhdGEoY2hhbm5lbCk7XG5cbiAgICAgIGFycmF5T3V0Q2hEYXRhLmZvckVhY2goZnVuY3Rpb24oc2FtcGxlLCBpbmRleCkge1xuICAgICAgICBpZiAoaW5kZXggPCBpbkJ1ZmZlci5sZW5ndGgpIGFycmF5T3V0Q2hEYXRhW2luZGV4XSA9IGFycmF5Q2hEYXRhW2luZGV4XTtcbiAgICAgICAgZWxzZSBhcnJheU91dENoRGF0YVtpbmRleF0gPSBhcnJheUNoRGF0YVtpbmRleCAtIGluQnVmZmVyLmxlbmd0aF07XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gb3V0QnVmZmVyO1xuICB9XG59XG4iXX0=//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = __webpack_require__(97)['default'];\n\nvar _classCallCheck = __webpack_require__(68)['default'];\n\nvar _Object$defineProperty = __webpack_require__(41)['default'];\n\nvar _Promise = __webpack_require__(96)['default'];\n\n_Object$defineProperty(exports, '__esModule', {\n  value: true\n});\n\n/**\n * Gets called if a parameter is missing and the expression\n * specifying the default value is evaluated.\n * @function\n */\nfunction throwIfMissing() {\n  throw new Error('Missing parameter');\n}\n\n/**\n * Promise based implementation of XMLHttpRequest Level 2 for GET method.\n */\n\nvar Loader = (function () {\n  /**\n   * @constructs\n   * @param {string} [responseType=\"\"] - responseType's value, \"text\" (equal to \"\"), \"arraybuffer\", \"blob\", \"document\" or \"json\"\n   */\n\n  function Loader() {\n    var responseType = arguments[0] === undefined ? undefined : arguments[0];\n\n    _classCallCheck(this, Loader);\n\n    /**\n     * @type {string}\n     */\n    this.responseType = responseType;\n    // rename to `onProgress` ?\n    /**\n     * @type {function}\n     */\n    this.progressCb = undefined;\n  }\n\n  _createClass(Loader, [{\n    key: 'load',\n\n    /**\n     * Method for a promise based file loading.\n     * Internally switch between loadOne and loadAll.\n     * @public\n     * @param {(string|string[])} fileURLs - The URL(s) of the files to load. Accepts a URL pointing to the file location or an array of URLs.\n     * @returns {Promise}\n     */\n    value: function load() {\n      var fileURLs = arguments[0] === undefined ? throwIfMissing() : arguments[0];\n\n      if (fileURLs === undefined) throw new Error('load needs at least a url to load');\n      if (Array.isArray(fileURLs)) {\n        return this.loadAll(fileURLs);\n      } else {\n        return this.loadOne(fileURLs);\n      }\n    }\n  }, {\n    key: 'loadOne',\n\n    /**\n     * Load a single file\n     * @private\n     * @param {string} fileURL - The URL of the file to load.\n     * @returns {Promise}\n     */\n    value: function loadOne(fileURL) {\n      return this.fileLoadingRequest(fileURL);\n    }\n  }, {\n    key: 'loadAll',\n\n    /**\n     * Load all files at once in a single array and return a Promise\n     * @private\n     * @param {string[]} fileURLs - The URLs array of the files to load.\n     * @returns {Promise}\n     */\n    value: function loadAll(fileURLs) {\n      var urlsCount = fileURLs.length,\n          promises = [];\n\n      for (var i = 0; i < urlsCount; ++i) {\n        promises.push(this.fileLoadingRequest(fileURLs[i], i));\n      }\n\n      return _Promise.all(promises);\n    }\n  }, {\n    key: 'fileLoadingRequest',\n\n    /**\n     * Load a file asynchronously, return a Promise.\n     * @private\n     * @param {string} url - The URL of the file to load\n     * @param {string} [index] - The index of the file in the array of files to load\n     * @returns {Promise}\n     */\n    value: function fileLoadingRequest(url, index) {\n      var _this = this;\n\n      var promise = new _Promise(function (resolve, reject) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.index = index;\n        if (_this.responseType) {\n          request.responseType = _this.responseType;\n        } else {\n          var suffix = '.json';\n          if (url.indexOf(suffix, _this.length - suffix.length) !== -1) {\n            request.responseType = 'json';\n          } else {\n            request.responseType = 'arraybuffer';\n          }\n        }\n        request.addEventListener('load', function () {\n          // Test request.status value, as 404 will also get there\n          if (request.status === 200 || request.status === 304) {\n            // Hack for iOS 7, to remove as soon as possible\n            if (this.responseType === 'json' && typeof request.response === 'string') {\n              request.response = JSON.parse(request.response);\n            }\n            resolve(request.response);\n          } else {\n            reject(new Error(request.statusText));\n          }\n        });\n        request.addEventListener('progress', function (evt) {\n          if (_this.progressCallback) {\n            if (index !== undefined) {\n              _this.progressCallback({\n                index: index,\n                value: evt.loaded / evt.total,\n                loaded: evt.loaded,\n                total: evt.total\n              });\n            } else {\n              _this.progressCallback({\n                value: evt.loaded / evt.total,\n                loaded: evt.loaded,\n                total: evt.total\n              });\n            }\n          }\n        });\n        // Manage network errors\n        request.addEventListener('error', function () {\n          reject(new Error('Network Error'));\n        });\n\n        request.send();\n      });\n      return promise;\n    }\n  }, {\n    key: 'progressCallback',\n\n    /**\n     * Get the callback function to get the progress of file loading process.\n     * This is only for the file loading progress as decodeAudioData doesn't\n     * expose a decode progress value.\n     * @type {function}\n     */\n    get: function () {\n      return this.progressCb;\n    },\n\n    /**\n     * Set the callback function to get the progress of file loading process.\n     * This is only for the file loading progress as decodeAudioData doesn't\n     * expose a decode progress value.\n     * @type {function} callback - The callback that handles the response.\n     */\n    set: function (callback) {\n      this.progressCb = callback;\n    }\n  }]);\n\n  return Loader;\n})();\n\nexports['default'] = Loader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;base64,//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(183), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZS5qcz8yZjRmIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9wcm9taXNlXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvcHJvbWlzZS5qc1xuLy8gbW9kdWxlIGlkID0gOTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _Object$defineProperty = __webpack_require__(41)[\"default\"];\n\nexports[\"default\"] = (function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n\n      _Object$defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n})();\n\nexports.__esModule = true;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9iYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlLWNsYXNzLmpzPzE4NjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfT2JqZWN0JGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZShcImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5XCIpW1wiZGVmYXVsdFwiXTtcblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSAoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcblxuICAgICAgX09iamVjdCRkZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgIGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gICAgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7XG4gICAgcmV0dXJuIENvbnN0cnVjdG9yO1xuICB9O1xufSkoKTtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jcmVhdGUtY2xhc3MuanNcbi8vIG1vZHVsZSBpZCA9IDk3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _Object$getOwnPropertyDescriptor = __webpack_require__(177)[\"default\"];\n\nexports[\"default\"] = function get(_x, _x2, _x3) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x,\n        property = _x2,\n        receiver = _x3;\n    desc = parent = getter = undefined;\n    _again = false;\n    if (object === null) object = Function.prototype;\n\n    var desc = _Object$getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        continue _function;\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nexports.__esModule = true;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9iYWJlbC1ydW50aW1lL2hlbHBlcnMvZ2V0LmpzPzU2NGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfT2JqZWN0JGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoXCJiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvclwiKVtcImRlZmF1bHRcIl07XG5cbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gZnVuY3Rpb24gZ2V0KF94LCBfeDIsIF94Mykge1xuICB2YXIgX2FnYWluID0gdHJ1ZTtcblxuICBfZnVuY3Rpb246IHdoaWxlIChfYWdhaW4pIHtcbiAgICB2YXIgb2JqZWN0ID0gX3gsXG4gICAgICAgIHByb3BlcnR5ID0gX3gyLFxuICAgICAgICByZWNlaXZlciA9IF94MztcbiAgICBkZXNjID0gcGFyZW50ID0gZ2V0dGVyID0gdW5kZWZpbmVkO1xuICAgIF9hZ2FpbiA9IGZhbHNlO1xuICAgIGlmIChvYmplY3QgPT09IG51bGwpIG9iamVjdCA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcblxuICAgIHZhciBkZXNjID0gX09iamVjdCRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7XG5cbiAgICBpZiAoZGVzYyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7XG5cbiAgICAgIGlmIChwYXJlbnQgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF94ID0gcGFyZW50O1xuICAgICAgICBfeDIgPSBwcm9wZXJ0eTtcbiAgICAgICAgX3gzID0gcmVjZWl2ZXI7XG4gICAgICAgIF9hZ2FpbiA9IHRydWU7XG4gICAgICAgIGNvbnRpbnVlIF9mdW5jdGlvbjtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKFwidmFsdWVcIiBpbiBkZXNjKSB7XG4gICAgICByZXR1cm4gZGVzYy52YWx1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGdldHRlciA9IGRlc2MuZ2V0O1xuXG4gICAgICBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTtcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9iYWJlbC1ydW50aW1lL2hlbHBlcnMvZ2V0LmpzXG4vLyBtb2R1bGUgaWQgPSA5OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _Object$create = __webpack_require__(176)[\"default\"];\n\nvar _Object$setPrototypeOf = __webpack_require__(178)[\"default\"];\n\nexports[\"default\"] = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = _Object$create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _Object$setPrototypeOf ? _Object$setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nexports.__esModule = true;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3dhdmVzLWxvYWRlcnMvfi9iYWJlbC1ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMuanM/N2FlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9PYmplY3QkY3JlYXRlID0gcmVxdWlyZShcImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvY3JlYXRlXCIpW1wiZGVmYXVsdFwiXTtcblxudmFyIF9PYmplY3Qkc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKFwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mXCIpW1wiZGVmYXVsdFwiXTtcblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBmdW5jdGlvbiAoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpO1xuICB9XG5cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gX09iamVjdCRjcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgaWYgKHN1cGVyQ2xhc3MpIF9PYmplY3Qkc2V0UHJvdG90eXBlT2YgPyBfT2JqZWN0JHNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG59O1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzLmpzXG4vLyBtb2R1bGUgaWQgPSA5OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports[\"default\"] = function (obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n};\n\nexports.__esModule = true;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vYmFiZWwtcnVudGltZS9oZWxwZXJzL2ludGVyb3AtcmVxdWlyZS1kZWZhdWx0LmpzPzc0OGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgIFwiZGVmYXVsdFwiOiBvYmpcbiAgfTtcbn07XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9iYWJlbC1ydW50aW1lL2hlbHBlcnMvaW50ZXJvcC1yZXF1aXJlLWRlZmF1bHQuanNcbi8vIG1vZHVsZSBpZCA9IDEwMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

eval("// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(42)\n  , TAG = __webpack_require__(9)('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5jbGFzc29mLmpzPzAxNGQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZ2V0dGluZyB0YWcgZnJvbSAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjb2YgPSByZXF1aXJlKCcuLyQuY29mJylcbiAgLCBUQUcgPSByZXF1aXJlKCcuLyQud2tzJykoJ3RvU3RyaW5nVGFnJylcbiAgLy8gRVMzIHdyb25nIGhlcmVcbiAgLCBBUkcgPSBjb2YoZnVuY3Rpb24oKXsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PSAnQXJndW1lbnRzJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHZhciBPLCBULCBCO1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAoVCA9IChPID0gT2JqZWN0KGl0KSlbVEFHXSkgPT0gJ3N0cmluZycgPyBUXG4gICAgLy8gYnVpbHRpblRhZyBjYXNlXG4gICAgOiBBUkcgPyBjb2YoTylcbiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrXG4gICAgOiAoQiA9IGNvZihPKSkgPT0gJ09iamVjdCcgJiYgdHlwZW9mIE8uY2FsbGVlID09ICdmdW5jdGlvbicgPyAnQXJndW1lbnRzJyA6IEI7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5jbGFzc29mLmpzXG4vLyBtb2R1bGUgaWQgPSAxMDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 102 */
/***/ (function(module, exports) {

eval("// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5kZWZpbmVkLmpzPzk2NzciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4yLjEgUmVxdWlyZU9iamVjdENvZXJjaWJsZShhcmd1bWVudClcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICBpZihpdCA9PSB1bmRlZmluZWQpdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY2FsbCBtZXRob2Qgb24gIFwiICsgaXQpO1xuICByZXR1cm4gaXQ7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5kZWZpbmVkLmpzXG4vLyBtb2R1bGUgaWQgPSAxMDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 103 */
/***/ (function(module, exports) {

eval("module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5mYWlscy5qcz9mMDU4Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZXhlYyl7XG4gIHRyeSB7XG4gICAgcmV0dXJuICEhZXhlYygpO1xuICB9IGNhdGNoKGUpe1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5mYWlscy5qc1xuLy8gbW9kdWxlIGlkID0gMTAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 104 */
/***/ (function(module, exports) {

eval("var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5oYXMuanM/ODMyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaGFzT3duUHJvcGVydHkgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQsIGtleSl7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGl0LCBrZXkpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQuaGFzLmpzXG4vLyBtb2R1bGUgaWQgPSAxMDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar LIBRARY        = __webpack_require__(106)\n  , $export        = __webpack_require__(43)\n  , redefine       = __webpack_require__(108)\n  , hide           = __webpack_require__(71)\n  , has            = __webpack_require__(104)\n  , Iterators      = __webpack_require__(30)\n  , $iterCreate    = __webpack_require__(192)\n  , setToStringTag = __webpack_require__(72)\n  , getProto       = __webpack_require__(8).getProto\n  , ITERATOR       = __webpack_require__(9)('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , methods, key;\n  // Fix native\n  if($native){\n    var IteratorPrototype = getProto($default.call(new Base));\n    // Set @@toStringTag to native iterators\n    setToStringTag(IteratorPrototype, TAG, true);\n    // FF fix\n    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    // fix Array#{values, @@iterator}.name in V8 / FF\n    if(DEF_VALUES && $native.name !== VALUES){\n      VALUES_BUG = true;\n      $default = function values(){ return $native.call(this); };\n    }\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES  ? $default : getMethod(VALUES),\n      keys:    IS_SET      ? $default : getMethod(KEYS),\n      entries: !DEF_VALUES ? $default : getMethod('entries')\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5pdGVyLWRlZmluZS5qcz80YjEwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBMSUJSQVJZICAgICAgICA9IHJlcXVpcmUoJy4vJC5saWJyYXJ5JylcbiAgLCAkZXhwb3J0ICAgICAgICA9IHJlcXVpcmUoJy4vJC5leHBvcnQnKVxuICAsIHJlZGVmaW5lICAgICAgID0gcmVxdWlyZSgnLi8kLnJlZGVmaW5lJylcbiAgLCBoaWRlICAgICAgICAgICA9IHJlcXVpcmUoJy4vJC5oaWRlJylcbiAgLCBoYXMgICAgICAgICAgICA9IHJlcXVpcmUoJy4vJC5oYXMnKVxuICAsIEl0ZXJhdG9ycyAgICAgID0gcmVxdWlyZSgnLi8kLml0ZXJhdG9ycycpXG4gICwgJGl0ZXJDcmVhdGUgICAgPSByZXF1aXJlKCcuLyQuaXRlci1jcmVhdGUnKVxuICAsIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi8kLnNldC10by1zdHJpbmctdGFnJylcbiAgLCBnZXRQcm90byAgICAgICA9IHJlcXVpcmUoJy4vJCcpLmdldFByb3RvXG4gICwgSVRFUkFUT1IgICAgICAgPSByZXF1aXJlKCcuLyQud2tzJykoJ2l0ZXJhdG9yJylcbiAgLCBCVUdHWSAgICAgICAgICA9ICEoW10ua2V5cyAmJiAnbmV4dCcgaW4gW10ua2V5cygpKSAvLyBTYWZhcmkgaGFzIGJ1Z2d5IGl0ZXJhdG9ycyB3L28gYG5leHRgXG4gICwgRkZfSVRFUkFUT1IgICAgPSAnQEBpdGVyYXRvcidcbiAgLCBLRVlTICAgICAgICAgICA9ICdrZXlzJ1xuICAsIFZBTFVFUyAgICAgICAgID0gJ3ZhbHVlcyc7XG5cbnZhciByZXR1cm5UaGlzID0gZnVuY3Rpb24oKXsgcmV0dXJuIHRoaXM7IH07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oQmFzZSwgTkFNRSwgQ29uc3RydWN0b3IsIG5leHQsIERFRkFVTFQsIElTX1NFVCwgRk9SQ0VEKXtcbiAgJGl0ZXJDcmVhdGUoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpO1xuICB2YXIgZ2V0TWV0aG9kID0gZnVuY3Rpb24oa2luZCl7XG4gICAgaWYoIUJVR0dZICYmIGtpbmQgaW4gcHJvdG8pcmV0dXJuIHByb3RvW2tpbmRdO1xuICAgIHN3aXRjaChraW5kKXtcbiAgICAgIGNhc2UgS0VZUzogcmV0dXJuIGZ1bmN0aW9uIGtleXMoKXsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICAgIGNhc2UgVkFMVUVTOiByZXR1cm4gZnVuY3Rpb24gdmFsdWVzKCl7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgfSByZXR1cm4gZnVuY3Rpb24gZW50cmllcygpeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICB9O1xuICB2YXIgVEFHICAgICAgICA9IE5BTUUgKyAnIEl0ZXJhdG9yJ1xuICAgICwgREVGX1ZBTFVFUyA9IERFRkFVTFQgPT0gVkFMVUVTXG4gICAgLCBWQUxVRVNfQlVHID0gZmFsc2VcbiAgICAsIHByb3RvICAgICAgPSBCYXNlLnByb3RvdHlwZVxuICAgICwgJG5hdGl2ZSAgICA9IHByb3RvW0lURVJBVE9SXSB8fCBwcm90b1tGRl9JVEVSQVRPUl0gfHwgREVGQVVMVCAmJiBwcm90b1tERUZBVUxUXVxuICAgICwgJGRlZmF1bHQgICA9ICRuYXRpdmUgfHwgZ2V0TWV0aG9kKERFRkFVTFQpXG4gICAgLCBtZXRob2RzLCBrZXk7XG4gIC8vIEZpeCBuYXRpdmVcbiAgaWYoJG5hdGl2ZSl7XG4gICAgdmFyIEl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG8oJGRlZmF1bHQuY2FsbChuZXcgQmFzZSkpO1xuICAgIC8vIFNldCBAQHRvU3RyaW5nVGFnIHRvIG5hdGl2ZSBpdGVyYXRvcnNcbiAgICBzZXRUb1N0cmluZ1RhZyhJdGVyYXRvclByb3RvdHlwZSwgVEFHLCB0cnVlKTtcbiAgICAvLyBGRiBmaXhcbiAgICBpZighTElCUkFSWSAmJiBoYXMocHJvdG8sIEZGX0lURVJBVE9SKSloaWRlKEl0ZXJhdG9yUHJvdG90eXBlLCBJVEVSQVRPUiwgcmV0dXJuVGhpcyk7XG4gICAgLy8gZml4IEFycmF5I3t2YWx1ZXMsIEBAaXRlcmF0b3J9Lm5hbWUgaW4gVjggLyBGRlxuICAgIGlmKERFRl9WQUxVRVMgJiYgJG5hdGl2ZS5uYW1lICE9PSBWQUxVRVMpe1xuICAgICAgVkFMVUVTX0JVRyA9IHRydWU7XG4gICAgICAkZGVmYXVsdCA9IGZ1bmN0aW9uIHZhbHVlcygpeyByZXR1cm4gJG5hdGl2ZS5jYWxsKHRoaXMpOyB9O1xuICAgIH1cbiAgfVxuICAvLyBEZWZpbmUgaXRlcmF0b3JcbiAgaWYoKCFMSUJSQVJZIHx8IEZPUkNFRCkgJiYgKEJVR0dZIHx8IFZBTFVFU19CVUcgfHwgIXByb3RvW0lURVJBVE9SXSkpe1xuICAgIGhpZGUocHJvdG8sIElURVJBVE9SLCAkZGVmYXVsdCk7XG4gIH1cbiAgLy8gUGx1ZyBmb3IgbGlicmFyeVxuICBJdGVyYXRvcnNbTkFNRV0gPSAkZGVmYXVsdDtcbiAgSXRlcmF0b3JzW1RBR10gID0gcmV0dXJuVGhpcztcbiAgaWYoREVGQVVMVCl7XG4gICAgbWV0aG9kcyA9IHtcbiAgICAgIHZhbHVlczogIERFRl9WQUxVRVMgID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoVkFMVUVTKSxcbiAgICAgIGtleXM6ICAgIElTX1NFVCAgICAgID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoS0VZUyksXG4gICAgICBlbnRyaWVzOiAhREVGX1ZBTFVFUyA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKCdlbnRyaWVzJylcbiAgICB9O1xuICAgIGlmKEZPUkNFRClmb3Ioa2V5IGluIG1ldGhvZHMpe1xuICAgICAgaWYoIShrZXkgaW4gcHJvdG8pKXJlZGVmaW5lKHByb3RvLCBrZXksIG1ldGhvZHNba2V5XSk7XG4gICAgfSBlbHNlICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKEJVR0dZIHx8IFZBTFVFU19CVUcpLCBOQU1FLCBtZXRob2RzKTtcbiAgfVxuICByZXR1cm4gbWV0aG9kcztcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLml0ZXItZGVmaW5lLmpzXG4vLyBtb2R1bGUgaWQgPSAxMDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 106 */
/***/ (function(module, exports) {

eval("module.exports = true;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5saWJyYXJ5LmpzPzMzNmIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB0cnVlO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5saWJyYXJ5LmpzXG4vLyBtb2R1bGUgaWQgPSAxMDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 107 */
/***/ (function(module, exports) {

eval("module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5wcm9wZXJ0eS1kZXNjLmpzPzMzYjYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihiaXRtYXAsIHZhbHVlKXtcbiAgcmV0dXJuIHtcbiAgICBlbnVtZXJhYmxlICA6ICEoYml0bWFwICYgMSksXG4gICAgY29uZmlndXJhYmxlOiAhKGJpdG1hcCAmIDIpLFxuICAgIHdyaXRhYmxlICAgIDogIShiaXRtYXAgJiA0KSxcbiAgICB2YWx1ZSAgICAgICA6IHZhbHVlXG4gIH07XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5wcm9wZXJ0eS1kZXNjLmpzXG4vLyBtb2R1bGUgaWQgPSAxMDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(71);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5yZWRlZmluZS5qcz82OGM0Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi8kLmhpZGUnKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQucmVkZWZpbmUuanNcbi8vIG1vZHVsZSBpZCA9IDEwOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

eval("// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar getDesc  = __webpack_require__(8).getDesc\n  , isObject = __webpack_require__(44)\n  , anObject = __webpack_require__(28);\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = __webpack_require__(29)(Function.call, getDesc(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5zZXQtcHJvdG8uanM/MThkNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBXb3JrcyB3aXRoIF9fcHJvdG9fXyBvbmx5LiBPbGQgdjggY2FuJ3Qgd29yayB3aXRoIG51bGwgcHJvdG8gb2JqZWN0cy5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXByb3RvICovXG52YXIgZ2V0RGVzYyAgPSByZXF1aXJlKCcuLyQnKS5nZXREZXNjXG4gICwgaXNPYmplY3QgPSByZXF1aXJlKCcuLyQuaXMtb2JqZWN0JylcbiAgLCBhbk9iamVjdCA9IHJlcXVpcmUoJy4vJC5hbi1vYmplY3QnKTtcbnZhciBjaGVjayA9IGZ1bmN0aW9uKE8sIHByb3RvKXtcbiAgYW5PYmplY3QoTyk7XG4gIGlmKCFpc09iamVjdChwcm90bykgJiYgcHJvdG8gIT09IG51bGwpdGhyb3cgVHlwZUVycm9yKHByb3RvICsgXCI6IGNhbid0IHNldCBhcyBwcm90b3R5cGUhXCIpO1xufTtcbm1vZHVsZS5leHBvcnRzID0ge1xuICBzZXQ6IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCAoJ19fcHJvdG9fXycgaW4ge30gPyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gICAgZnVuY3Rpb24odGVzdCwgYnVnZ3ksIHNldCl7XG4gICAgICB0cnkge1xuICAgICAgICBzZXQgPSByZXF1aXJlKCcuLyQuY3R4JykoRnVuY3Rpb24uY2FsbCwgZ2V0RGVzYyhPYmplY3QucHJvdG90eXBlLCAnX19wcm90b19fJykuc2V0LCAyKTtcbiAgICAgICAgc2V0KHRlc3QsIFtdKTtcbiAgICAgICAgYnVnZ3kgPSAhKHRlc3QgaW5zdGFuY2VvZiBBcnJheSk7XG4gICAgICB9IGNhdGNoKGUpeyBidWdneSA9IHRydWU7IH1cbiAgICAgIHJldHVybiBmdW5jdGlvbiBzZXRQcm90b3R5cGVPZihPLCBwcm90byl7XG4gICAgICAgIGNoZWNrKE8sIHByb3RvKTtcbiAgICAgICAgaWYoYnVnZ3kpTy5fX3Byb3RvX18gPSBwcm90bztcbiAgICAgICAgZWxzZSBzZXQoTywgcHJvdG8pO1xuICAgICAgICByZXR1cm4gTztcbiAgICAgIH07XG4gICAgfSh7fSwgZmFsc2UpIDogdW5kZWZpbmVkKSxcbiAgY2hlY2s6IGNoZWNrXG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5zZXQtcHJvdG8uanNcbi8vIG1vZHVsZSBpZCA9IDEwOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 110 */
/***/ (function(module, exports) {

eval("// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC50by1pbnRlZ2VyLmpzP2QxYjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4xLjQgVG9JbnRlZ2VyXG52YXIgY2VpbCAgPSBNYXRoLmNlaWxcbiAgLCBmbG9vciA9IE1hdGguZmxvb3I7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIGlzTmFOKGl0ID0gK2l0KSA/IDAgOiAoaXQgPiAwID8gZmxvb3IgOiBjZWlsKShpdCk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC50by1pbnRlZ2VyLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

eval("// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(189)\n  , defined = __webpack_require__(102);\nmodule.exports = function(it){\n  return IObject(defined(it));\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTExLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC50by1pb2JqZWN0LmpzPzQzZGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdG8gaW5kZXhlZCBvYmplY3QsIHRvT2JqZWN0IHdpdGggZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBzdHJpbmdzXG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vJC5pb2JqZWN0JylcbiAgLCBkZWZpbmVkID0gcmVxdWlyZSgnLi8kLmRlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gSU9iamVjdChkZWZpbmVkKGl0KSk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC50by1pb2JqZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSAxMTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var require;var require;!function(e){if(true)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var t;t=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,t.wavesBasicControllers=e()}}(function(){return function e(t,r,n){function i(a,o){if(!r[a]){if(!t[a]){var l=\"function\"==typeof require&&require;if(!o&&l)return require(a,!0);if(s)return s(a,!0);var u=new Error(\"Cannot find module '\"+a+\"'\");throw u.code=\"MODULE_NOT_FOUND\",u}var c=r[a]={exports:{}};t[a][0].call(c.exports,function(e){var r=t[a][1][e];return i(r?r:e)},c,c.exports,e,t,r,n)}return r[a].exports}for(var s=\"function\"==typeof require&&require,a=0;a<n.length;a++)i(n[a]);return i}({1:[function(e,t,r){\"use strict\";var n=(e(\"./dist/utils/styles\"),e(\"./dist/base-controller\")),i={Title:e(\"./dist/title\"),Buttons:e(\"./dist/buttons\"),Toggle:e(\"./dist/toggle\"),Slider:e(\"./dist/slider\"),Breakpoint:e(\"./dist/breakpoint\"),setTheme:function(e){n.theme=e}};t.exports=i},{\"./dist/base-controller\":2,\"./dist/breakpoint\":3,\"./dist/buttons\":4,\"./dist/slider\":6,\"./dist/title\":7,\"./dist/toggle\":8,\"./dist/utils/styles\":9}],2:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"babel-runtime/core-js/set\")[\"default\"],l=e(\"events\"),u=e(\"./utils/styles\"),c=new o,h=void 0;window.addEventListener(\"resize\",function(){c.forEach(function(e){return e.onResize()})});var f=function(e){function t(){a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).call(this),0===c.size&&u.insertStyleSheet(),c.add(this)}return i(t,e),s(t,[{key:\"_applyOptionnalParameters\",value:function(){var e=this,t=arguments.length<=0||void 0===arguments[0]?null:arguments[0],r=arguments.length<=1||void 0===arguments[1]?null:arguments[1];t&&(\"string\"==typeof t&&(t=document.querySelector(t)),t.appendChild(this.render()),setTimeout(function(){return e.onResize()},0)),r&&this.on(\"change\",r)}},{key:\"render\",value:function(){return this.$el=document.createElement(\"label\"),this.$el.classList.add(u.ns,h),this.$el}},{key:\"onResize\",value:function(){var e=this.$el.getBoundingClientRect(),t=e.width,r=t>600?\"remove\":\"add\";this.$el.classList[r](\"small\")}},{key:\"bindEvents\",value:function(){}}],[{key:\"theme\",set:function(e){c.forEach(function(e){return e.$el.classList.remove(h)}),h=e,c.forEach(function(e){return e.$el.classList.add(h)})},get:function(){return h}}]),t}(l.EventEmitter);f.theme=\"light\",t.exports=f},{\"./utils/styles\":9,\"babel-runtime/core-js/set\":14,\"babel-runtime/helpers/class-call-check\":15,\"babel-runtime/helpers/create-class\":16,\"babel-runtime/helpers/get\":17,\"babel-runtime/helpers/inherits\":18,events:159}],3:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"waves-ui/dist/core/timeline\"),l=e(\"waves-ui/dist/core/layer\"),u=e(\"waves-ui/dist/core/layer-time-context\"),c=e(\"waves-ui/dist/shapes/line\"),h=e(\"waves-ui/dist/shapes/dot\"),f=e(\"waves-ui/dist/behaviors/breakpoint-behavior\"),d=e(\"waves-ui/dist/states/base-state\"),p=e(\"./base-controller\"),m=function(e){function t(e){a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).call(this,e),this.currentEditedLayer=null,this.currentTarget=null}return i(t,e),s(t,[{key:\"enter\",value:function(){}},{key:\"exit\",value:function(){}},{key:\"handleEvent\",value:function(e){switch(e.type){case\"mousedown\":this.onMouseDown(e);break;case\"mousemove\":this.onMouseMove(e);break;case\"mouseup\":this.onMouseUp(e)}}},{key:\"onMouseDown\",value:function(e){var t=this;this.mouseDown=!0,this.currentTarget=e.target,this.layers.forEach(function(r){r.unselect();var n=r.getItemFromDOMElement(e.target);if(null===n){var i=[e.x/t.timeline.visibleWidth,1-e.y/r.params.height];r.data.push(i),t.timeline.tracks.render(),t.timeline.tracks.update()}else if(e.originalEvent.shiftKey){var s=r.data,i=r.getDatumFromItem(n);s.splice(s.indexOf(i),1),t.timeline.tracks.render(),t.timeline.tracks.update()}else t.currentEditedLayer=r,r.select(n)})}},{key:\"onMouseMove\",value:function(e){var t=this;if(this.mouseDown&&this.currentEditedLayer){var r=this.currentEditedLayer,n=r.selectedItems;n.forEach(function(n){r.edit(n,e.dx,e.dy,t.currentTarget)}),r.update(n)}}},{key:\"onMouseUp\",value:function(e){this.currentEditedLayer=null,this.mouseDown=!1}}]),t}(d),b=function(e){function t(e){var r=arguments.length<=1||void 0===arguments[1]?[]:arguments[1],i=arguments.length<=2||void 0===arguments[2]?null:arguments[2],s=arguments.length<=3||void 0===arguments[3]?null:arguments[3];a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).call(this),this.type=\"breakpoint\",this.legend=e,this.dots=r,n(Object.getPrototypeOf(t.prototype),\"_applyOptionnalParameters\",this).call(this,i,s)}return i(t,e),s(t,[{key:\"render\",value:function(){var e='\\n      <span class=\"legend\">'+this.legend+'</span>\\n      <div class=\"inner-wrapper timeline\"></div>\\n    ',r=300;this.$el=n(Object.getPrototypeOf(t.prototype),\"render\",this).call(this),this.$el.classList.add(this.type),this.$el.innerHTML=e,this.$track=this.$el.querySelector(\".timeline\"),this.timeline=new o,this.timeline.createTrack(this.$track,r,\"main\");var i=new u(this.timeline.timeContext);this.breakpointLayer=new l(\"collection\",this.dots,{height:r}),this.breakpointLayer.setTimeContext(i);var s=function(e){var t=arguments.length<=1||void 0===arguments[1]?null:arguments[1];return null!==t&&(e[0]=t),e[0]},a=function(e){var t=arguments.length<=1||void 0===arguments[1]?null:arguments[1];return null!==t&&(e[1]=t),e[1]};return this.breakpointLayer.configureShape(h,{color:function(e){return\"#ffffff\"},cx:s,cy:a}),this.breakpointLayer.configureCommonShape(c,{cx:s,cy:a},{color:\"#ffffff\"}),this.breakpointLayer.setBehavior(new f),this.breakpointLayer.on(\"edit\",function(e,t){t[0]=Math.max(0,Math.min(t[0],1)),t[1]=Math.max(0,Math.min(t[1],1))}),this.timeline.addLayer(this.breakpointLayer,\"main\"),this.timeline.tracks.render(),this.timeline.tracks.update(),this.timeline.state=new m(this.timeline),this.bindEvents(),this.$el}},{key:\"onResize\",value:function(){n(Object.getPrototypeOf(t.prototype),\"onResize\",this).call(this);var e=this.$track.getBoundingClientRect().width;this.timeline.visibleWidth=e,this.timeline.pixelsPerSecond=e,this.timeline.tracks.update()}},{key:\"bindEvents\",value:function(){var e=this;this.timeline.on(\"update\",function(){e.emit(\"change\",e.dots)})}}]),t}(p);t.exports=b},{\"./base-controller\":2,\"babel-runtime/helpers/class-call-check\":15,\"babel-runtime/helpers/create-class\":16,\"babel-runtime/helpers/get\":17,\"babel-runtime/helpers/inherits\":18,\"waves-ui/dist/behaviors/breakpoint-behavior\":56,\"waves-ui/dist/core/layer\":59,\"waves-ui/dist/core/layer-time-context\":58,\"waves-ui/dist/core/timeline\":62,\"waves-ui/dist/shapes/dot\":70,\"waves-ui/dist/shapes/line\":71,\"waves-ui/dist/states/base-state\":73}],4:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"babel-runtime/core-js/array/from\")[\"default\"],l=e(\"./base-controller\"),u=function(e){function t(e,r){var i=arguments.length<=2||void 0===arguments[2]?null:arguments[2],s=arguments.length<=3||void 0===arguments[3]?null:arguments[3];a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).call(this),this.type=\"buttons\",this.legend=e,this.labels=r,n(Object.getPrototypeOf(t.prototype),\"_applyOptionnalParameters\",this).call(this,i,s)}return i(t,e),s(t,[{key:\"render\",value:function(){var e='\\n      <span class=\"legend\">'+this.legend+'</span>\\n      <div class=\"inner-wrapper\">\\n        '+this.labels.map(function(e){return'<button data-label=\"'+e+'\">'+e+\"</button>\"}).join(\"\")+\"\\n      </div>\";return this.$el=n(Object.getPrototypeOf(t.prototype),\"render\",this).call(this),this.$el.classList.add(this.type),this.$el.innerHTML=e,this.$buttons=o(this.$el.querySelectorAll(\"button\")),this.bindEvents(),this.$el}},{key:\"bindEvents\",value:function(){var e=this;this.$buttons.forEach(function(t){var r=t.getAttribute(\"data-label\");t.addEventListener(\"mousedown\",function(e){e.preventDefault(),t.classList.add(\"active\")}),t.addEventListener(\"mouseup\",function(n){n.preventDefault(),t.classList.remove(\"active\"),e.emit(\"change\",r)})})}}]),t}(l);t.exports=u},{\"./base-controller\":2,\"babel-runtime/core-js/array/from\":10,\"babel-runtime/helpers/class-call-check\":15,\"babel-runtime/helpers/create-class\":16,\"babel-runtime/helpers/get\":17,\"babel-runtime/helpers/inherits\":18}],5:[function(e,t,r){t.exports=\" .waves-basic-controllers { width: 100%; max-width: 800px; height: 30px; padding: 3px; margin: 4px 0; background-color: #efefef; border: 1px solid #aaaaaa; box-sizing: border-box; border-radius: 2px; display: block; color: #464646; } .waves-basic-controllers .legend { font: italic bold 12px arial; line-height: 22px; overflow: hidden; text-align: right; padding: 0 8px 0 0; display: block; box-sizing: border-box; width: 24%; float: left; white-space: nowrap; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; } .waves-basic-controllers .inner-wrapper { display: -webkit-inline-flex; display: inline-flex; -webkit-flex-wrap: no-wrap; flex-wrap: no-wrap; width: 76%; float: left; } .waves-basic-controllers.small:not(.toggle) { height: auto; } .waves-basic-controllers.small:not(.toggle) .legend { width: 100%; float: none; text-align: left; } .waves-basic-controllers.small:not(.toggle) .inner-wrapper { width: 100%; float: none; } .waves-basic-controllers.small.toggle .legend { display: block; margin-right: 20px; text-align: left; } .waves-basic-controllers.small.toggle .inner-wrapper { display: inline-block; width: auto; } .waves-basic-controllers.title { border: none; margin-bottom: 0; padding-bottom: 0; padding-top: 6px; background-color: transparent; height: 25px; } .waves-basic-controllers.title .legend { font: normal bold 13px arial; line-height: 22px; height: 22px; overflow: hidden; text-align: left; padding: 0; width: 100%; box-sizing: border-box; -webkit-flex-grow: 1; flex-grow: 1; } .waves-basic-controllers.buttons button { font: normal normal 12px arial; height: 22px; border: none; background-color: #464646; color: #ffffff; margin: 0 4px 0 0; box-sizing: border-box; border-radius: 2px; cursor: pointer; -webkit-flex-grow: 1; flex-grow: 1; } .waves-basic-controllers.buttons button:last-child { margin: 0; } .waves-basic-controllers.buttons button.active { background-color: #686868; } .waves-basic-controllers.buttons button:focus { outline: none; } .waves-basic-controllers.toggle .toggle-container { padding: 0; margin: 0; width: 19px; height: 19px; background-color: #464646; flex-row: 1; position: relative; top: 1px; cursor: pointer; border-radius: 2px; } .waves-basic-controllers.toggle .toggle-container .x { width: 1px; height: 19px; background-color: #efefef; position: absolute; left: 9px; display: none; } .waves-basic-controllers.toggle .toggle-container.active .x { display: block; } .waves-basic-controllers.toggle .toggle-container .x.x1 { -webkit-transform: rotate(45deg); transform: rotate(45deg); } .waves-basic-controllers.toggle .toggle-container .x.x2 { -webkit-transform: rotate(-45deg); transform: rotate(-45deg); } .waves-basic-controllers.slider .inner-wrapper .range { height: 22px; display: inline-block; margin: 0; -webkit-flex-grow: 4; flex-grow: 4 } .waves-basic-controllers.slider .inner-wrapper .number-wrapper { display: inline; height: 22px; text-align: right; -webkit-flex-grow: 3; flex-grow: 3; } .waves-basic-controllers.slider .inner-wrapper.large .range { -webkit-flex-grow: 50; flex-grow: 50 } .waves-basic-controllers.slider .inner-wrapper.large .number-wrapper { -webkit-flex-grow: 1; flex-grow: 1; } .waves-basic-controllers.slider .inner-wrapper.small .range { -webkit-flex-grow: 1; flex-grow: 1 } .waves-basic-controllers.slider .inner-wrapper.small .number-wrapper { -webkit-flex-grow: 7; flex-grow: 7; } .waves-basic-controllers.slider .inner-wrapper .number-wrapper .number { height: 22px; width: 54px; position: relative; left: 5px; font: normal normal 12px arial; border: none; background: none; padding: 0 0 0 4px; display: inline-block; text-align: right; vertical-align: top; } .waves-basic-controllers.slider .inner-wrapper .number-wrapper .unit { font: italic normal 12px arial; line-height: 22px; height: 22px; width: 30px; display: inline-block; position: relative; padding-left: 5px; padding-right: 5px; color: #565656; } .waves-basic-controllers.slider .inner-wrapper .number-wrapper .unit sup { line-height: 7px; } .waves-basic-controllers.breakpoint { height: auto; overflow: auto; } .waves-basic-controllers.breakpoint .timeline { background-color: #464646; border-radius: 2px; } .waves-basic-controllers.dark { background-color: #464646; border: 1px solid #686868; color: rgba(255, 255, 255, 0.95); } .waves-basic-controllers.dark.title { background-color: transparent; border: none; } .waves-basic-controllers.dark.toggle .toggle-container { background-color: #efefef; } .waves-basic-controllers.dark.toggle .toggle-container .x { background-color: #464646; } .waves-basic-controllers.dark.buttons button { background-color: #efefef; color: #464646; } .waves-basic-controllers.dark.buttons button.active { background-color: #cdcdcd; } .waves-basic-controllers.dark.slider .inner-wrapper .number-wrapper .number { color: rgba(255, 255, 255, 0.9); } .waves-basic-controllers.dark.slider .inner-wrapper .number-wrapper .unit { color: #bcbcbc; } \"},{}],6:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"./base-controller\"),l=(e(\"./utils/styles\"),function(e){function t(e){var r=arguments.length<=1||void 0===arguments[1]?0:arguments[1],i=arguments.length<=2||void 0===arguments[2]?1:arguments[2],s=arguments.length<=3||void 0===arguments[3]?.01:arguments[3],o=arguments.length<=4||void 0===arguments[4]?0:arguments[4],l=arguments.length<=5||void 0===arguments[5]?\"\":arguments[5],u=arguments.length<=6||void 0===arguments[6]?\"default\":arguments[6],c=arguments.length<=7||void 0===arguments[7]?null:arguments[7],h=arguments.length<=8||void 0===arguments[8]?null:arguments[8];a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).call(this),this.type=\"slider\",this.legend=e,this.min=r,this.max=i,this.step=s,this.unit=l,this.size=u,this._value=o,n(Object.getPrototypeOf(t.prototype),\"_applyOptionnalParameters\",this).call(this,c,h)}return i(t,e),s(t,[{key:\"render\",value:function(){var e='\\n      <span class=\"legend\">'+this.legend+'</span>\\n      <div class=\"inner-wrapper '+this.size+'\">\\n        <input class=\"range\" type=\"range\" min=\"'+this.min+'\" max=\"'+this.max+'\" step=\"'+this.step+'\" value=\"'+this.value+'\" />\\n        <div class=\"number-wrapper\">\\n          <input type=\"number\" class=\"number\" min=\"'+this.min+'\" max=\"'+this.max+'\" step=\"'+this.step+'\" value=\"'+this.value+'\" />\\n          <span class=\"unit\">'+this.unit+\"</span>\\n        </div>\\n      </div>\";return this.$el=n(Object.getPrototypeOf(t.prototype),\"render\",this).call(this),this.$el.classList.add(this.type),this.$el.innerHTML=e,this.$range=this.$el.querySelector('input[type=\"range\"]'),this.$number=this.$el.querySelector('input[type=\"number\"]'),this.bindEvents(),this.$el}},{key:\"bindEvents\",value:function(){var e=this;this.$range.addEventListener(\"input\",function(){var t=parseFloat(e.$range.value);e.$number.value=t,e.value=t,e.emit(\"change\",t)},!1),this.$number.addEventListener(\"change\",function(){var t=parseFloat(e.$number.value);e.$range.value=t,e.value=t,e.emit(\"change\",t)},!1)}},{key:\"value\",set:function(e){this._value=e,this.$number&&this.$range&&(this.$number.value=this.value,this.$range.value=this.value)},get:function(){return this._value}}]),t}(o));t.exports=l},{\"./base-controller\":2,\"./utils/styles\":9,\"babel-runtime/helpers/class-call-check\":15,\"babel-runtime/helpers/create-class\":16,\"babel-runtime/helpers/get\":17,\"babel-runtime/helpers/inherits\":18}],7:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"./base-controller\"),l=(e(\"./utils/styles\"),function(e){function t(e){var r=arguments.length<=1||void 0===arguments[1]?null:arguments[1];a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).call(this),this.type=\"title\",this.legend=e,n(Object.getPrototypeOf(t.prototype),\"_applyOptionnalParameters\",this).call(this,r)}return i(t,e),s(t,[{key:\"render\",value:function(){var e='<span class=\"legend\">'+this.legend+\"</span>\";return this.$el=n(Object.getPrototypeOf(t.prototype),\"render\",this).call(this),this.$el.classList.add(this.type),this.$el.innerHTML=e,this.$el}}]),t}(o));t.exports=l},{\"./base-controller\":2,\"./utils/styles\":9,\"babel-runtime/helpers/class-call-check\":15,\"babel-runtime/helpers/create-class\":16,\"babel-runtime/helpers/get\":17,\"babel-runtime/helpers/inherits\":18}],8:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"./base-controller\"),l=function(e){function t(e){var r=arguments.length<=1||void 0===arguments[1]?!1:arguments[1],i=arguments.length<=2||void 0===arguments[2]?!1:arguments[2],s=arguments.length<=3||void 0===arguments[3]?null:arguments[3];a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).call(this),this.type=\"toggle\",this.legend=e,this._active=r,n(Object.getPrototypeOf(t.prototype),\"_applyOptionnalParameters\",this).call(this,i,s)}return i(t,e),s(t,[{key:\"_updateBtn\",value:function(){var e=this.active?\"add\":\"remove\";this.$toggle.classList[e](\"active\")}},{key:\"render\",value:function(){var e='\\n      <span class=\"legend\">'+this.legend+'</span>\\n      <div class=\"inner-wrapper\">\\n        <div class=\"toggle-container\">\\n          <div class=\"x x1\"></div><div class=\"x x2\"></div>\\n        </div>\\n      </div>';return this.$el=n(Object.getPrototypeOf(t.prototype),\"render\",this).call(this),this.$el.classList.add(this.type),this.$el.innerHTML=e,this.$toggle=this.$el.querySelector(\".toggle-container\"),this.bindEvents(),this.active=this._active,this.$el}},{key:\"bindEvents\",value:function(){var e=this;this.$toggle.addEventListener(\"click\",function(t){t.preventDefault(),e.active=!e.active,e.emit(\"change\",e.active)})}},{key:\"active\",set:function(e){this._active=e,this._updateBtn()},get:function(){return this._active}}]),t}(o);t.exports=l},{\"./base-controller\":2,\"babel-runtime/helpers/class-call-check\":15,\"babel-runtime/helpers/create-class\":16,\"babel-runtime/helpers/get\":17,\"babel-runtime/helpers/inherits\":18}],9:[function(e,t,r){\"use strict\";var n=e(\"../../package.json\"),i=e(\"../css/styles.js\"),s=n.name;t.exports.insertStyleSheet=function(){var e=document.createElement(\"style\");e.setAttribute(\"data-namespace\",s),e.innerHTML=i,document.body.appendChild(e)},t.exports.ns=s},{\"../../package.json\":158,\"../css/styles.js\":5}],10:[function(e,t,r){t.exports={\"default\":e(\"core-js/library/fn/array/from\"),__esModule:!0}},{\"core-js/library/fn/array/from\":19}],11:[function(e,t,r){t.exports={\"default\":e(\"core-js/library/fn/object/create\"),__esModule:!0}},{\"core-js/library/fn/object/create\":20}],12:[function(e,t,r){t.exports={\"default\":e(\"core-js/library/fn/object/define-property\"),__esModule:!0}},{\"core-js/library/fn/object/define-property\":21}],13:[function(e,t,r){t.exports={\"default\":e(\"core-js/library/fn/object/get-own-property-descriptor\"),__esModule:!0}},{\"core-js/library/fn/object/get-own-property-descriptor\":22}],14:[function(e,t,r){t.exports={\"default\":e(\"core-js/library/fn/set\"),__esModule:!0}},{\"core-js/library/fn/set\":23}],15:[function(e,t,r){\"use strict\";r[\"default\"]=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")},r.__esModule=!0},{}],16:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/core-js/object/define-property\")[\"default\"];r[\"default\"]=function(){function e(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),n(e,i.key,i)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),r.__esModule=!0},{\"babel-runtime/core-js/object/define-property\":12}],17:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/core-js/object/get-own-property-descriptor\")[\"default\"];r[\"default\"]=function(e,t,r){for(var i=!0;i;){var s=e,a=t,o=r;l=c=u=void 0,i=!1,null===s&&(s=Function.prototype);var l=n(s,a);if(void 0!==l){if(\"value\"in l)return l.value;var u=l.get;return void 0===u?void 0:u.call(o)}var c=Object.getPrototypeOf(s);if(null===c)return void 0;e=c,t=a,r=o,i=!0}},r.__esModule=!0},{\"babel-runtime/core-js/object/get-own-property-descriptor\":13}],18:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/core-js/object/create\")[\"default\"];r[\"default\"]=function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=n(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(e.__proto__=t)},r.__esModule=!0},{\"babel-runtime/core-js/object/create\":11}],19:[function(e,t,r){e(\"../../modules/es6.string.iterator\"),e(\"../../modules/es6.array.from\"),t.exports=e(\"../../modules/$\").core.Array.from},{\"../../modules/$\":38,\"../../modules/es6.array.from\":47,\"../../modules/es6.string.iterator\":52}],20:[function(e,t,r){var n=e(\"../../modules/$\");t.exports=function(e,t){return n.create(e,t)}},{\"../../modules/$\":38}],21:[function(e,t,r){var n=e(\"../../modules/$\");t.exports=function(e,t,r){return n.setDesc(e,t,r)}},{\"../../modules/$\":38}],22:[function(e,t,r){var n=e(\"../../modules/$\");e(\"../../modules/es6.object.statics-accept-primitives\"),t.exports=function(e,t){return n.getDesc(e,t)}},{\"../../modules/$\":38,\"../../modules/es6.object.statics-accept-primitives\":49}],23:[function(e,t,r){e(\"../modules/es6.object.to-string\"),e(\"../modules/es6.string.iterator\"),e(\"../modules/web.dom.iterable\"),e(\"../modules/es6.set\"),e(\"../modules/es7.set.to-json\"),t.exports=e(\"../modules/$\").core.Set},{\"../modules/$\":38,\"../modules/es6.object.to-string\":50,\"../modules/es6.set\":51,\"../modules/es6.string.iterator\":52,\"../modules/es7.set.to-json\":53,\"../modules/web.dom.iterable\":54}],24:[function(e,t,r){function n(e,t,r){if(!e)throw TypeError(r?t+r:t)}var i=e(\"./$\");n.def=i.assertDefined,n.fn=function(e){if(!i.isFunction(e))throw TypeError(e+\" is not a function!\");return e},n.obj=function(e){if(!i.isObject(e))throw TypeError(e+\" is not an object!\");return e},n.inst=function(e,t,r){if(!(e instanceof t))throw TypeError(r+\": use the 'new' operator!\");return e},t.exports=n},{\"./$\":38}],25:[function(e,t,r){function n(e){return a.call(e).slice(8,-1)}var i=e(\"./$\"),s=e(\"./$.wks\")(\"toStringTag\"),a={}.toString;n.classof=function(e){var t,r;return void 0==e?void 0===e?\"Undefined\":\"Null\":\"string\"==typeof(r=(t=Object(e))[s])?r:n(t)},n.set=function(e,t,r){e&&!i.has(e=r?e:e.prototype,s)&&i.hide(e,s,t)},t.exports=n},{\"./$\":38,\"./$.wks\":46}],26:[function(e,t,r){\"use strict\";function n(e,t){if(!d(e))return\"symbol\"==typeof e?e:(\"string\"==typeof e?\"S\":\"P\")+e;if(!h(e,b)){if(!m(e))return\"F\";if(!t)return\"E\";p(e,b,++_)}return\"O\"+e[b]}function i(e,t){var r,i=n(t);if(\"F\"!==i)return e[g][i];for(r=e[y];r;r=r.n)if(r.k==t)return r}var s=e(\"./$\"),a=e(\"./$.ctx\"),o=e(\"./$.uid\").safe,l=e(\"./$.assert\"),u=e(\"./$.for-of\"),c=e(\"./$.iter\").step,h=s.has,f=s.set,d=s.isObject,p=s.hide,m=Object.isExtensible||d,b=o(\"id\"),g=o(\"O1\"),v=o(\"last\"),y=o(\"first\"),$=o(\"iter\"),x=s.DESC?o(\"size\"):\"size\",_=0;t.exports={getConstructor:function(t,r,n,o){var c=t(function(e,t){l.inst(e,c,r),f(e,g,s.create(null)),f(e,x,0),f(e,v,void 0),f(e,y,void 0),void 0!=t&&u(t,n,e[o],e)});return e(\"./$.mix\")(c.prototype,{clear:function(){for(var e=this,t=e[g],r=e[y];r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete t[r.i];e[y]=e[v]=void 0,e[x]=0},\"delete\":function(e){var t=this,r=i(t,e);if(r){var n=r.n,s=r.p;delete t[g][r.i],r.r=!0,s&&(s.n=n),n&&(n.p=s),t[y]==r&&(t[y]=n),t[v]==r&&(t[v]=s),t[x]--}return!!r},forEach:function(e){for(var t,r=a(e,arguments[1],3);t=t?t.n:this[y];)for(r(t.v,t.k,this);t&&t.r;)t=t.p},has:function(e){return!!i(this,e)}}),s.DESC&&s.setDesc(c.prototype,\"size\",{get:function(){return l.def(this[x])}}),c},def:function(e,t,r){var s,a,o=i(e,t);return o?o.v=r:(e[v]=o={i:a=n(t,!0),k:t,v:r,p:s=e[v],n:void 0,r:!1},e[y]||(e[y]=o),s&&(s.n=o),e[x]++,\"F\"!==a&&(e[g][a]=o)),e},getEntry:i,setIter:function(t,r,n){e(\"./$.iter-define\")(t,r,function(e,t){f(this,$,{o:e,k:t})},function(){for(var e=this[$],t=e.k,r=e.l;r&&r.r;)r=r.p;return e.o&&(e.l=r=r?r.n:e.o[y])?\"keys\"==t?c(0,r.k):\"values\"==t?c(0,r.v):c(0,[r.k,r.v]):(e.o=void 0,c(1))},n?\"entries\":\"values\",!n,!0)}}},{\"./$\":38,\"./$.assert\":24,\"./$.ctx\":29,\"./$.for-of\":31,\"./$.iter\":37,\"./$.iter-define\":35,\"./$.mix\":39,\"./$.uid\":44}],27:[function(e,t,r){var n=e(\"./$.def\"),i=e(\"./$.for-of\");t.exports=function(e){n(n.P,e,{toJSON:function(){var e=[];return i(this,!1,e.push,e),e}})}},{\"./$.def\":30,\"./$.for-of\":31}],28:[function(e,t,r){\"use strict\";var n=e(\"./$\"),i=e(\"./$.def\"),s=e(\"./$.iter\"),a=s.BUGGY,o=e(\"./$.for-of\"),l=e(\"./$.assert\").inst,u=e(\"./$.uid\").safe(\"internal\");t.exports=function(t,r,s,c,h,f){var d=n.g[t],p=d,m=h?\"set\":\"add\",b=p&&p.prototype,g={};return n.DESC&&n.isFunction(p)&&(f||!a&&b.forEach&&b.entries)?(p=r(function(e,r){l(e,p,t),e[u]=new d,void 0!=r&&o(r,h,e[m],e)}),n.each.call(\"add,clear,delete,forEach,get,has,set,keys,values,entries\".split(\",\"),function(e){var t=\"add\"==e||\"set\"==e;e in b&&n.hide(p.prototype,e,function(r,n){var i=this[u][e](0===r?0:r,n);return t?this:i})}),\"size\"in b&&n.setDesc(p.prototype,\"size\",{get:function(){return this[u].size}})):(p=c.getConstructor(r,t,h,m),e(\"./$.mix\")(p.prototype,s)),e(\"./$.cof\").set(p,t),g[t]=p,i(i.G+i.W+i.F,g),e(\"./$.species\")(p),f||c.setIter(p,t,h),p}},{\"./$\":38,\"./$.assert\":24,\"./$.cof\":25,\"./$.def\":30,\"./$.for-of\":31,\"./$.iter\":37,\"./$.mix\":39,\"./$.species\":42,\"./$.uid\":44}],29:[function(e,t,r){var n=e(\"./$.assert\").fn;t.exports=function(e,t,r){if(n(e),~r&&void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,i){return e.call(t,r,n,i)}}return function(){return e.apply(t,arguments)}}},{\"./$.assert\":24}],30:[function(e,t,r){function n(e,t){return function(){return e.apply(t,arguments)}}function i(e,t,r){var s,u,c,h,f=e&i.G,d=e&i.P,p=f?a:e&i.S?a[t]:(a[t]||{}).prototype,m=f?o:o[t]||(o[t]={});f&&(r=t);for(s in r)u=!(e&i.F)&&p&&s in p,u&&s in m||(c=u?p[s]:r[s],f&&!l(p[s])?h=r[s]:e&i.B&&u?h=n(c,a):e&i.W&&p[s]==c?!function(e){h=function(t){return this instanceof e?new e(t):e(t)},h.prototype=e.prototype}(c):h=d&&l(c)?n(Function.call,c):c,m[s]=h,d&&((m.prototype||(m.prototype={}))[s]=c))}var s=e(\"./$\"),a=s.g,o=s.core,l=s.isFunction;i.F=1,i.G=2,i.S=4,i.P=8,i.B=16,i.W=32,t.exports=i},{\"./$\":38}],31:[function(e,t,r){var n=e(\"./$.ctx\"),i=e(\"./$.iter\").get,s=e(\"./$.iter-call\");t.exports=function(e,t,r,a){for(var o,l=i(e),u=n(r,a,t?2:1);!(o=l.next()).done;)if(s(l,u,o.value,t)===!1)return s.close(l)}},{\"./$.ctx\":29,\"./$.iter\":37,\"./$.iter-call\":34}],32:[function(e,t,r){t.exports=function(e){return e.FW=!1,e.path=e.core,e}},{}],33:[function(e,t,r){function n(e){try{return a(e)}catch(t){return o.slice()}}var i=e(\"./$\"),s={}.toString,a=i.getNames,o=\"object\"==typeof window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.get=function(e){return o&&\"[object Window]\"==s.call(e)?n(e):a(i.toObject(e))}},{\"./$\":38}],34:[function(e,t,r){function n(e){var t=e[\"return\"];void 0!==t&&s(t.call(e))}function i(e,t,r,i){try{return i?t(s(r)[0],r[1]):t(r)}catch(a){throw n(e),a}}var s=e(\"./$.assert\").obj;i.close=n,t.exports=i},{\"./$.assert\":24}],35:[function(e,t,r){var n=e(\"./$.def\"),i=e(\"./$.redef\"),s=e(\"./$\"),a=e(\"./$.cof\"),o=e(\"./$.iter\"),l=e(\"./$.wks\")(\"iterator\"),u=\"@@iterator\",c=\"keys\",h=\"values\",f=o.Iterators;t.exports=function(e,t,r,d,p,m,b){function g(e){function t(t){return new r(t,e)}switch(e){case c:return function(){return t(this)};case h:return function(){return t(this)}}return function(){return t(this)}}o.create(r,t,d);var v,y,$=t+\" Iterator\",x=e.prototype,_=x[l]||x[u]||p&&x[p],w=_||g(p);if(_){var k=s.getProto(w.call(new e));a.set(k,$,!0),s.FW&&s.has(x,u)&&o.set(k,s.that)}if((s.FW||b)&&o.set(x,w),f[t]=w,f[$]=s.that,p)if(v={keys:m?w:g(c),values:p==h?w:g(h),entries:p!=h?w:g(\"entries\")},b)for(y in v)y in x||i(x,y,v[y]);else n(n.P+n.F*o.BUGGY,t,v)}},{\"./$\":38,\"./$.cof\":25,\"./$.def\":30,\"./$.iter\":37,\"./$.redef\":40,\"./$.wks\":46}],36:[function(e,t,r){var n=e(\"./$.wks\")(\"iterator\"),i=!1;try{var s=[7][n]();s[\"return\"]=function(){i=!0},Array.from(s,function(){throw 2})}catch(a){}t.exports=function(e){if(!i)return!1;var t=!1;try{var r=[7],s=r[n]();s.next=function(){t=!0},r[n]=function(){return s},e(r)}catch(a){}return t}},{\"./$.wks\":46}],37:[function(e,t,r){\"use strict\";function n(e,t){i.hide(e,u,t),c in[]&&i.hide(e,c,t)}var i=e(\"./$\"),s=e(\"./$.cof\"),a=s.classof,o=e(\"./$.assert\"),l=o.obj,u=e(\"./$.wks\")(\"iterator\"),c=\"@@iterator\",h=e(\"./$.shared\")(\"iterators\"),f={};n(f,i.that),t.exports={BUGGY:\"keys\"in[]&&!(\"next\"in[].keys()),Iterators:h,step:function(e,t){return{value:t,done:!!e}},is:function(e){var t=Object(e),r=i.g.Symbol;return(r&&r.iterator||c)in t||u in t||i.has(h,a(t))},get:function(e){var t,r=i.g.Symbol;return void 0!=e&&(t=e[r&&r.iterator||c]||e[u]||h[a(e)]),o(i.isFunction(t),e,\" is not iterable!\"),l(t.call(e))},set:n,create:function(e,t,r,n){e.prototype=i.create(n||f,{next:i.desc(1,r)}),s.set(e,t+\" Iterator\")}}},{\"./$\":38,\"./$.assert\":24,\"./$.cof\":25,\"./$.shared\":41,\"./$.wks\":46}],38:[function(e,t,r){\"use strict\";function n(e){return isNaN(e=+e)?0:(e>0?m:p)(e)}function i(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}function s(e,t,r){return e[t]=r,e}function a(e){return v?function(t,r,n){return $.setDesc(t,r,i(e,n))}:s}function o(e){return null!==e&&(\"object\"==typeof e||\"function\"==typeof e)}function l(e){return\"function\"==typeof e}function u(e){if(void 0==e)throw TypeError(\"Can't call method on  \"+e);return e}var c=\"undefined\"!=typeof self?self:Function(\"return this\")(),h={},f=Object.defineProperty,d={}.hasOwnProperty,p=Math.ceil,m=Math.floor,b=Math.max,g=Math.min,v=!!function(){try{return 2==f({},\"a\",{get:function(){return 2}}).a}catch(e){}}(),y=a(1),$=t.exports=e(\"./$.fw\")({g:c,core:h,html:c.document&&document.documentElement,isObject:o,isFunction:l,that:function(){return this},toInteger:n,toLength:function(e){return e>0?g(n(e),9007199254740991):0},toIndex:function(e,t){return e=n(e),0>e?b(e+t,0):g(e,t)},has:function(e,t){return d.call(e,t)},create:Object.create,getProto:Object.getPrototypeOf,DESC:v,desc:i,getDesc:Object.getOwnPropertyDescriptor,setDesc:f,setDescs:Object.defineProperties,getKeys:Object.keys,getNames:Object.getOwnPropertyNames,getSymbols:Object.getOwnPropertySymbols,assertDefined:u,ES5Object:Object,toObject:function(e){return $.ES5Object(u(e))},hide:y,def:a(0),set:c.Symbol?s:y,each:[].forEach});\"undefined\"!=typeof __e&&(__e=h),\"undefined\"!=typeof __g&&(__g=c)},{\"./$.fw\":32}],39:[function(e,t,r){var n=e(\"./$.redef\");t.exports=function(e,t){for(var r in t)n(e,r,t[r]);return e}},{\"./$.redef\":40}],40:[function(e,t,r){t.exports=e(\"./$\").hide},{\"./$\":38}],41:[function(e,t,r){var n=e(\"./$\"),i=\"__core-js_shared__\",s=n.g[i]||(n.g[i]={});\nt.exports=function(e){return s[e]||(s[e]={})}},{\"./$\":38}],42:[function(e,t,r){var n=e(\"./$\"),i=e(\"./$.wks\")(\"species\");t.exports=function(e){!n.DESC||i in e||n.setDesc(e,i,{configurable:!0,get:n.that})}},{\"./$\":38,\"./$.wks\":46}],43:[function(e,t,r){var n=e(\"./$\");t.exports=function(e){return function(t,r){var i,s,a=String(n.assertDefined(t)),o=n.toInteger(r),l=a.length;return 0>o||o>=l?e?\"\":void 0:(i=a.charCodeAt(o),55296>i||i>56319||o+1===l||(s=a.charCodeAt(o+1))<56320||s>57343?e?a.charAt(o):i:e?a.slice(o,o+2):(i-55296<<10)+(s-56320)+65536)}}},{\"./$\":38}],44:[function(e,t,r){function n(e){return\"Symbol(\".concat(void 0===e?\"\":e,\")_\",(++i+Math.random()).toString(36))}var i=0;n.safe=e(\"./$\").g.Symbol||n,t.exports=n},{\"./$\":38}],45:[function(e,t,r){t.exports=function(){}},{}],46:[function(e,t,r){var n=e(\"./$\").g,i=e(\"./$.shared\")(\"wks\");t.exports=function(t){return i[t]||(i[t]=n.Symbol&&n.Symbol[t]||e(\"./$.uid\").safe(\"Symbol.\"+t))}},{\"./$\":38,\"./$.shared\":41,\"./$.uid\":44}],47:[function(e,t,r){var n=e(\"./$\"),i=e(\"./$.ctx\"),s=e(\"./$.def\"),a=e(\"./$.iter\"),o=e(\"./$.iter-call\");s(s.S+s.F*!e(\"./$.iter-detect\")(function(e){Array.from(e)}),\"Array\",{from:function(e){var t,r,s,l,u=Object(n.assertDefined(e)),c=arguments[1],h=void 0!==c,f=h?i(c,arguments[2],2):void 0,d=0;if(a.is(u))for(l=a.get(u),r=new(\"function\"==typeof this?this:Array);!(s=l.next()).done;d++)r[d]=h?o(l,f,[s.value,d],!0):s.value;else for(r=new(\"function\"==typeof this?this:Array)(t=n.toLength(u.length));t>d;d++)r[d]=h?f(u[d],d):u[d];return r.length=d,r}})},{\"./$\":38,\"./$.ctx\":29,\"./$.def\":30,\"./$.iter\":37,\"./$.iter-call\":34,\"./$.iter-detect\":36}],48:[function(e,t,r){var n=e(\"./$\"),i=e(\"./$.unscope\"),s=e(\"./$.uid\").safe(\"iter\"),a=e(\"./$.iter\"),o=a.step,l=a.Iterators;e(\"./$.iter-define\")(Array,\"Array\",function(e,t){n.set(this,s,{o:n.toObject(e),i:0,k:t})},function(){var e=this[s],t=e.o,r=e.k,n=e.i++;return!t||n>=t.length?(e.o=void 0,o(1)):\"keys\"==r?o(0,n):\"values\"==r?o(0,t[n]):o(0,[n,t[n]])},\"values\"),l.Arguments=l.Array,i(\"keys\"),i(\"values\"),i(\"entries\")},{\"./$\":38,\"./$.iter\":37,\"./$.iter-define\":35,\"./$.uid\":44,\"./$.unscope\":45}],49:[function(e,t,r){var n=e(\"./$\"),i=e(\"./$.def\"),s=n.isObject,a=n.toObject;n.each.call(\"freeze,seal,preventExtensions,isFrozen,isSealed,isExtensible,getOwnPropertyDescriptor,getPrototypeOf,keys,getOwnPropertyNames\".split(\",\"),function(t,r){var o=(n.core.Object||{})[t]||Object[t],l=0,u={};u[t]=0==r?function(e){return s(e)?o(e):e}:1==r?function(e){return s(e)?o(e):e}:2==r?function(e){return s(e)?o(e):e}:3==r?function(e){return s(e)?o(e):!0}:4==r?function(e){return s(e)?o(e):!0}:5==r?function(e){return s(e)?o(e):!1}:6==r?function(e,t){return o(a(e),t)}:7==r?function(e){return o(Object(n.assertDefined(e)))}:8==r?function(e){return o(a(e))}:e(\"./$.get-names\").get;try{o(\"z\")}catch(c){l=1}i(i.S+i.F*l,\"Object\",u)})},{\"./$\":38,\"./$.def\":30,\"./$.get-names\":33}],50:[function(e,t,r){\"use strict\";var n=e(\"./$.cof\"),i={};i[e(\"./$.wks\")(\"toStringTag\")]=\"z\",e(\"./$\").FW&&\"z\"!=n(i)&&e(\"./$.redef\")(Object.prototype,\"toString\",function(){return\"[object \"+n.classof(this)+\"]\"},!0)},{\"./$\":38,\"./$.cof\":25,\"./$.redef\":40,\"./$.wks\":46}],51:[function(e,t,r){\"use strict\";var n=e(\"./$.collection-strong\");e(\"./$.collection\")(\"Set\",function(e){return function(){return e(this,arguments[0])}},{add:function(e){return n.def(this,e=0===e?0:e,e)}},n)},{\"./$.collection\":28,\"./$.collection-strong\":26}],52:[function(e,t,r){var n=e(\"./$\").set,i=e(\"./$.string-at\")(!0),s=e(\"./$.uid\").safe(\"iter\"),a=e(\"./$.iter\"),o=a.step;e(\"./$.iter-define\")(String,\"String\",function(e){n(this,s,{o:String(e),i:0})},function(){var e,t=this[s],r=t.o,n=t.i;return n>=r.length?o(1):(e=i(r,n),t.i+=e.length,o(0,e))})},{\"./$\":38,\"./$.iter\":37,\"./$.iter-define\":35,\"./$.string-at\":43,\"./$.uid\":44}],53:[function(e,t,r){e(\"./$.collection-to-json\")(\"Set\")},{\"./$.collection-to-json\":27}],54:[function(e,t,r){e(\"./es6.array.iterator\");var n=e(\"./$\"),i=e(\"./$.iter\").Iterators,s=e(\"./$.wks\")(\"iterator\"),a=i.Array,o=n.g.NodeList,l=n.g.HTMLCollection,u=o&&o.prototype,c=l&&l.prototype;n.FW&&(!o||s in u||n.hide(u,s,a),!l||s in c||n.hide(c,s,a)),i.NodeList=i.HTMLCollection=a},{\"./$\":38,\"./$.iter\":37,\"./$.wks\":46,\"./es6.array.iterator\":48}],55:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/create-class\")[\"default\"],i=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],s=e(\"babel-runtime/helpers/to-consumable-array\")[\"default\"],a=e(\"babel-runtime/core-js/set\")[\"default\"],o=e(\"babel-runtime/core-js/object/assign\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var l=function(){function e(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];i(this,e),this._selectedItems=new a,this._selectedClass=t.selectedClass||\"selected\",this._layer=null,this._params=o({},this.getDefaults(),t)}return n(e,[{key:\"initialize\",value:function(e){this._layer=e}},{key:\"destroy\",value:function(){}},{key:\"getDefaults\",value:function(){return{}}},{key:\"select\",value:function(e,t){e.classList.add(this.selectedClass),this._selectedItems.add(e)}},{key:\"unselect\",value:function(e,t){e.classList.remove(this.selectedClass),this._selectedItems[\"delete\"](e)}},{key:\"toggleSelection\",value:function(e,t){var r=this._selectedItems.has(e)?\"unselect\":\"select\";this[r](e)}},{key:\"edit\",value:function(e,t,r,n,i,s){}},{key:\"selectedClass\",set:function(e){this._selectedClass=e},get:function(){return this._selectedClass}},{key:\"selectedItems\",get:function(){return[].concat(s(this._selectedItems))}}]),e}();r[\"default\"]=l,t.exports=r[\"default\"]},{\"babel-runtime/core-js/object/assign\":79,\"babel-runtime/core-js/set\":86,\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/to-consumable-array\":95}],56:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"babel-runtime/helpers/interop-require-default\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var l=e(\"./base-behavior\"),u=o(l),c=function(e){function t(){a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).apply(this,arguments)}return i(t,e),s(t,[{key:\"edit\",value:function(e,t,r,n,i,s){var a=this._layer.data,o=e.height,l=e.timeToPixel(t.cx(r)),u=e.valueToPixel(t.cy(r)),c=l+n,h=u-i;if(a.length>2){var f=a.map(function(r){return e.timeToPixel(t.cx(r))});f.sort(function(e,t){return t>e?-1:1});var d=f.indexOf(l);(c<f[d-1]||c>f[d+1])&&(c=l)}0>h?h=0:h>o&&(h=o),t.cx(r,e.timeToPixel.invert(c)),t.cy(r,e.valueToPixel.invert(h))}}]),t}(u[\"default\"]);r[\"default\"]=c,t.exports=r[\"default\"]},{\"./base-behavior\":55,\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/get\":91,\"babel-runtime/helpers/inherits\":92,\"babel-runtime/helpers/interop-require-default\":93}],57:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/create-class\")[\"default\"],i=e(\"babel-runtime/helpers/class-call-check\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var s=function(){function e(){i(this,e)}return n(e,[{key:\"edit\",value:function(e,t,r,n){var i=e.timeContext;n.classList.contains(\"handler\")&&n.classList.contains(\"left\")?this._editLeft(i,t):n.classList.contains(\"handler\")&&n.classList.contains(\"right\")?this._editRight(i,t):n.classList.contains(\"segment\")&&this._move(i,t)}},{key:\"_editLeft\",value:function(e,t){var r=e.parent.timeToPixel(e.start),n=e.timeToPixel(e.offset),i=e.timeToPixel(e.duration),s=r+t,a=n-t,o=Math.max(i-t,1);e.start=e.parent.timeToPixel.invert(s),e.offset=e.timeToPixel.invert(a),e.duration=e.timeToPixel.invert(o)}},{key:\"_editRight\",value:function(e,t){var r=e.timeToPixel(e.duration),n=Math.max(r+t,1);e.duration=e.timeToPixel.invert(n)}},{key:\"_move\",value:function(e,t){var r=e.parent.timeToPixel(e.start),n=Math.max(r+t,0);e.start=e.parent.timeToPixel.invert(n)}},{key:\"stretch\",value:function(e,t,r,n){var i=e.timeContext,s=i.duration,a=i.offset;this.edit(e,t,r,n);var o=i.duration,l=o/s;i.stretchRatio*=l,i.offset=a,i.duration=s}}]),e}();r[\"default\"]=s,t.exports=r[\"default\"]},{\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90}],58:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/create-class\")[\"default\"],i=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],s=e(\"babel-runtime/helpers/interop-require-default\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var a=e(\"../utils/scales\"),o=s(a),l=function(){function e(t){if(i(this,e),!t)throw new Error(\"LayerTimeContext must have a parent\");this.parent=t,this._timeToPixel=null,this._start=0,this._duration=t.visibleDuration,this._offset=0,this._stretchRatio=1,this.parent._children.push(this)}return n(e,[{key:\"clone\",value:function(){var e=new this;return e.parent=this.parent,e.start=this.start,e.duration=this.duration,e.offset=this.offset,e.stretchRatio=this.stretchRatio,e}},{key:\"start\",get:function(){return this._start},set:function(e){this._start=e}},{key:\"duration\",get:function(){return this._duration},set:function(e){this._duration=e}},{key:\"offset\",get:function(){return this._offset},set:function(e){this._offset=e}},{key:\"stretchRatio\",get:function(){return this._stretchRatio},set:function(e){if(1===e)return void(this._timeToPixel=null);var t=this._timeToPixel?this._timeToPixel:o[\"default\"].linear().domain([0,1]);t.range([0,this.parent.computedPixelsPerSecond*e]),this._timeToPixel=t,this._stretchRatio=e}},{key:\"timeToPixel\",get:function(){return this._timeToPixel?this._timeToPixel:this.parent.timeToPixel}}]),e}();r[\"default\"]=l,t.exports=r[\"default\"]},{\"../utils/scales\":74,\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/interop-require-default\":93}],59:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"babel-runtime/helpers/sliced-to-array\")[\"default\"],l=e(\"babel-runtime/core-js/object/assign\")[\"default\"],u=e(\"babel-runtime/core-js/map\")[\"default\"],c=e(\"babel-runtime/core-js/get-iterator\")[\"default\"],h=e(\"babel-runtime/helpers/interop-require-default\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var f=e(\"../utils/scales\"),d=h(f),p=e(\"events\"),m=h(p),b=e(\"./namespace\"),g=h(b),v=e(\"../shapes/segment\"),y=h(v),$=e(\"../behaviors/time-context-behavior\"),x=h($),_=null,w=x[\"default\"],k=function(e){function t(e,r){var i=arguments.length<=2||void 0===arguments[2]?{}:arguments[2];a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).call(this),this.dataType=e,this.data=r;var s={height:100,top:0,id:\"\",yDomain:[0,1],opacity:1,contextHandlerWidth:2,className:null};this.params=l({},s,i),this.timeContext=null,this.$el=null,this.$boundingBox=null,this.$offset=null,this.$interactions=null,this._shapeConfiguration=null,this._commonShapeConfiguration=null,this._$itemShapeMap=new u,this._$itemDataMap=new u,this._$itemCommonShapeMap=new u,this._isContextEditable=!1,this._behavior=null,this._valueToPixel=d[\"default\"].linear().domain(this.params.yDomain).range([0,this.params.height]),this.contextBehavior=\"\",this._renderContainer(),null===_&&(_=new w)}return i(t,e),s(t,[{key:\"destroy\",value:function(){this.timeContext=null,this.data=null,this.params=null,this._behavior=null,this._$itemShapeMap.clear(),this._$itemDataMap.clear(),this._$itemCommonShapeMap.clear(),this.removeAllListeners()}},{key:\"setTimeContext\",value:function(e){this.timeContext=e,this._renderingContext={},this._updateRenderingContext()}},{key:\"_renderContainer\",value:function(){var e=this;this.$el=document.createElementNS(g[\"default\"],\"g\"),null!==this.params.className&&this.$el.classList.add(\"layer\",this.params.className),this.$boundingBox=document.createElementNS(g[\"default\"],\"svg\"),this.$boundingBox.classList.add(\"bounding-box\"),this.$offset=document.createElementNS(g[\"default\"],\"g\"),this.$offset.classList.add(\"offset\",\"items\"),this.$background=document.createElementNS(g[\"default\"],\"rect\"),this.$background.setAttributeNS(null,\"height\",\"100%\"),this.$background.setAttributeNS(null,\"width\",\"100%\"),this.$background.classList.add(\"background\"),this.$background.style.fillOpacity=0,this.$background.style.pointerEvents=\"none\",this.$interactions=document.createElementNS(g[\"default\"],\"g\"),this.$interactions.classList.add(\"interactions\"),this.$interactions.style.display=\"none\",this.contextShape=new y[\"default\"],this.contextShape.install({opacity:function(){return.1},color:function(){return\"#787878\"},width:function(){return e.timeContext.duration},height:function(){return e._renderingContext.valueToPixel.domain()[1]},y:function(){return e._renderingContext.valueToPixel.domain()[0]}}),this.$interactions.appendChild(this.contextShape.render()),this.$el.appendChild(this.$boundingBox),this.$boundingBox.appendChild(this.$offset),this.$offset.appendChild(this.$background),this.$boundingBox.appendChild(this.$interactions)}},{key:\"configureShape\",value:function(e){var t=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],r=arguments.length<=2||void 0===arguments[2]?{}:arguments[2];this._shapeConfiguration={ctor:e,accessors:t,options:r}}},{key:\"configureCommonShape\",value:function(e){var t=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],r=arguments.length<=2||void 0===arguments[2]?{}:arguments[2];this._commonShapeConfiguration={ctor:e,accessors:t,options:r}}},{key:\"setBehavior\",value:function(e){e.initialize(this),this._behavior=e}},{key:\"_updateRenderingContext\",value:function(){this._renderingContext.timeToPixel=this.timeContext.timeToPixel,this._renderingContext.valueToPixel=this._valueToPixel,this._renderingContext.height=this.params.height,this._renderingContext.width=this.timeContext.timeToPixel(this.timeContext.duration),this._renderingContext.offsetX=this.timeContext.timeToPixel(this.timeContext.offset),this._renderingContext.trackOffsetX=this.timeContext.parent.timeToPixel(this.timeContext.parent.offset),this._renderingContext.visibleWidth=this.timeContext.parent.visibleWidth}},{key:\"select\",value:function(){for(var e=arguments.length,t=Array(e),r=0;e>r;r++)t[r]=arguments[r];if(this._behavior){t.length||(t=this._$itemDataMap.keys()),Array.isArray(t[0])&&(t=t[0]);var n=!0,i=!1,s=void 0;try{for(var a,o=c(t);!(n=(a=o.next()).done);n=!0){var l=a.value,u=this._$itemDataMap.get(l);this._behavior.select(l,u),this._toFront(l)}}catch(h){i=!0,s=h}finally{try{!n&&o[\"return\"]&&o[\"return\"]()}finally{if(i)throw s}}}}},{key:\"unselect\",value:function(){for(var e=arguments.length,t=Array(e),r=0;e>r;r++)t[r]=arguments[r];if(this._behavior){t.length||(t=this._$itemDataMap.keys()),Array.isArray(t[0])&&(t=t[0]);var n=!0,i=!1,s=void 0;try{for(var a,o=c(t);!(n=(a=o.next()).done);n=!0){var l=a.value,u=this._$itemDataMap.get(l);this._behavior.unselect(l,u)}}catch(h){i=!0,s=h}finally{try{!n&&o[\"return\"]&&o[\"return\"]()}finally{if(i)throw s}}}}},{key:\"toggleSelection\",value:function(){for(var e=arguments.length,t=Array(e),r=0;e>r;r++)t[r]=arguments[r];if(this._behavior){t.length||(t=this._$itemDataMap.keys()),Array.isArray(t[0])&&(t=t[0]);var n=!0,i=!1,s=void 0;try{for(var a,o=c(t);!(n=(a=o.next()).done);n=!0){var l=a.value,u=this._$itemDataMap.get(l);this._behavior.toggleSelection(l,u)}}catch(h){i=!0,s=h}finally{try{!n&&o[\"return\"]&&o[\"return\"]()}finally{if(i)throw s}}}}},{key:\"edit\",value:function(e,t,r,n){if(this._behavior){e=Array.isArray(e)?e:[e];var i=!0,s=!1,a=void 0;try{for(var o,l=c(e);!(i=(o=l.next()).done);i=!0){var u=o.value,h=this._$itemShapeMap.get(u),f=this._$itemDataMap.get(u);this._behavior.edit(this._renderingContext,h,f,t,r,n),this.emit(\"edit\",h,f)}}catch(d){s=!0,a=d}finally{try{!i&&l[\"return\"]&&l[\"return\"]()}finally{if(s)throw a}}}}},{key:\"setContextEditable\",value:function(){var e=arguments.length<=0||void 0===arguments[0]?!0:arguments[0],t=e?\"block\":\"none\";this.$interactions.style.display=t,this._isContextEditable=e}},{key:\"editContext\",value:function(e,t,r){_.edit(this,e,t,r)}},{key:\"stretchContext\",value:function(e,t,r){_.stretch(this,e,t,r)}},{key:\"_toFront\",value:function(e){this.$offset.appendChild(e)}},{key:\"getItemFromDOMElement\",value:function(e){var t=void 0;do{if(e.classList&&e.classList.contains(\"item\")){t=e;break}e=e.parentNode}while(null!==e);return this.hasItem(t)?t:null}},{key:\"getDatumFromItem\",value:function(e){return this._$itemDataMap.get(e)}},{key:\"getDatumFromDOMElement\",value:function(e){var t=this.getItemFromDOMElement(e);return null===t?null:this.getDatumFromItem(t)}},{key:\"hasItem\",value:function(e){return this._$itemDataMap.has(e)}},{key:\"hasElement\",value:function(e){do{if(e===this.$el)return!0;e=e.parentNode}while(null!==e);return!1}},{key:\"getItemsInArea\",value:function(e){var t=this.timeContext.timeToPixel(this.timeContext.start),r=this.timeContext.timeToPixel(this.timeContext.duration),n=this.timeContext.timeToPixel(this.timeContext.offset),i=(this.params.top,Math.max(e.left,t)),s=Math.min(e.left+e.width,t+r);i-=t+n,s-=t+n;var a=this.params.height-(e.top+e.height),l=this.params.height-e.top;a+=this.params.top,l+=this.params.top;var u=[],h=!0,f=!1,d=void 0;try{for(var p,m=c(this._$itemDataMap.entries());!(h=(p=m.next()).done);h=!0){var b=o(p.value,2),g=b[0],v=b[1],y=this._$itemShapeMap.get(g),$=y.inArea(this._renderingContext,v,i,a,s,l);$&&u.push(g)}}catch(x){f=!0,d=x}finally{try{!h&&m[\"return\"]&&m[\"return\"]()}finally{if(f)throw d}}return u}},{key:\"render\",value:function(){var e=this;if(null!==this._commonShapeConfiguration&&0===this._$itemCommonShapeMap.size){var t=this._commonShapeConfiguration,r=t.ctor,n=t.accessors,i=t.options,s=document.createElementNS(g[\"default\"],\"g\"),a=new r(i);a.install(n),s.appendChild(a.render()),s.classList.add(\"item\",\"common\",a.getClassName()),this._$itemCommonShapeMap.set(s,a),this.$offset.appendChild(s)}var l=document.createDocumentFragment(),u=this._$itemDataMap.values();this.data.forEach(function(t){var r=!0,n=!1,i=void 0;try{for(var s,a=c(u);!(r=(s=a.next()).done);r=!0){var o=s.value;if(o===t)return}}catch(h){n=!0,i=h}finally{try{!r&&a[\"return\"]&&a[\"return\"]()}finally{if(n)throw i}}var f=e._shapeConfiguration,d=f.ctor,p=f.accessors,m=f.options,b=new d(m);b.install(p);var g=b.render(e._renderingContext);g.classList.add(\"item\",b.getClassName()),e._$itemShapeMap.set(g,b),e._$itemDataMap.set(g,t),l.appendChild(g)}),this.$offset.appendChild(l);var h=!0,f=!1,d=void 0;try{for(var p,m=c(this._$itemDataMap.entries());!(h=(p=m.next()).done);h=!0){var b=o(p.value,2),v=b[0],y=b[1];if(-1===this.data.indexOf(y)){this.$offset.removeChild(v);var a=this._$itemShapeMap.get(v);a.destroy(),this._behavior.unselect(v,y),this._$itemDataMap[\"delete\"](v),this._$itemShapeMap[\"delete\"](v)}}}catch($){f=!0,d=$}finally{try{!h&&m[\"return\"]&&m[\"return\"]()}finally{if(f)throw d}}}},{key:\"update\",value:function(){this.updateContainer(),this.updateShapes()}},{key:\"updateContainer\",value:function(){this._updateRenderingContext();var e=this.timeContext,t=e.timeToPixel(e.duration),r=e.parent.timeToPixel(e.start),n=e.timeToPixel(e.offset),i=this.params.top,s=this.params.height,a=\"matrix(1, 0, 0, -1, \"+r+\", \"+(i+s)+\")\";this.$el.setAttributeNS(null,\"transform\",a),this.$boundingBox.setAttributeNS(null,\"width\",t),this.$boundingBox.setAttributeNS(null,\"height\",s),this.$boundingBox.style.opacity=this.params.opacity,this.$offset.setAttributeNS(null,\"transform\",\"translate(\"+n+\", 0)\"),this.contextShape.update(this._renderingContext,this.timeContext,0)}},{key:\"updateShapes\",value:function(){var e=this;arguments.length<=0||void 0===arguments[0]?null:arguments[0];this._updateRenderingContext(),this._$itemCommonShapeMap.forEach(function(t,r){t.update(e._renderingContext,e.data)});var t=!0,r=!1,n=void 0;try{for(var i,s=c(this._$itemDataMap.entries());!(t=(i=s.next()).done);t=!0){var a=o(i.value,2),l=a[0],u=a[1],h=this._$itemShapeMap.get(l);h.update(this._renderingContext,u)}}catch(f){r=!0,n=f}finally{try{!t&&s[\"return\"]&&s[\"return\"]()}finally{if(r)throw n}}}},{key:\"start\",get:function(){return this.timeContext.start},set:function(e){this.timeContext.start=e}},{key:\"offset\",get:function(){return this.timeContext.offset},set:function(e){this.timeContext.offset=e}},{key:\"duration\",get:function(){return this.timeContext.duration},set:function(e){this.timeContext.duration=e}},{key:\"stretchRatio\",get:function(){return this.timeContext.stretchRatio},set:function(e){this.timeContext.stretchRatio=e}},{key:\"yDomain\",set:function(e){this.params.yDomain=e,this._valueToPixel.domain(e)},get:function(){return this.params.yDomain}},{key:\"opacity\",set:function(e){this.params.opacity=e},get:function(){return this.params.opacity}},{key:\"items\",get:function(){var e=[],t=!0,r=!1,n=void 0;try{for(var i,s=c(this._$itemDataMap.keys());!(t=(i=s.next()).done);t=!0){var a=i.value;e.push(a)}}catch(o){r=!0,n=o}finally{try{!t&&s[\"return\"]&&s[\"return\"]()}finally{if(r)throw n}}return e}},{key:\"data\",get:function(){return this._data},set:function(e){switch(this.dataType){case\"entity\":this._data?this._data[0]=e:this._data=[e];break;case\"collection\":this._data=e}}},{key:\"selectedItems\",get:function(){return this._behavior?this._behavior.selectedItems:[]}}],[{key:\"configureTimeContextBehavior\",value:function(e){w=e}}]),t}(m[\"default\"].EventEmitter);r[\"default\"]=k,t.exports=r[\"default\"]},{\"../behaviors/time-context-behavior\":57,\"../shapes/segment\":72,\"../utils/scales\":74,\"./namespace\":60,\"babel-runtime/core-js/get-iterator\":76,\"babel-runtime/core-js/map\":78,\"babel-runtime/core-js/object/assign\":79,\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/get\":91,\"babel-runtime/helpers/inherits\":92,\"babel-runtime/helpers/interop-require-default\":93,\"babel-runtime/helpers/sliced-to-array\":94,events:159}],60:[function(e,t,r){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0}),r[\"default\"]=\"http://www.w3.org/2000/svg\",t.exports=r[\"default\"]},{}],61:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/create-class\")[\"default\"],i=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],s=e(\"babel-runtime/helpers/interop-require-default\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var a=e(\"../utils/scales\"),o=s(a),l=function(){function e(t,r){i(this,e),this._children=[],this._timeToPixel=null,this._offset=0,this._zoom=1,this._computedPixelsPerSecond=t,this._visibleWidth=r,this._visibleDuration=this.visibleWidth/this._computedPixelsPerSecond,this._maintainVisibleDuration=!1;var n=o[\"default\"].linear().domain([0,1]).range([0,t]);this.timeToPixel=n,this._originalPixelsPerSecond=this._computedPixelsPerSecond}return n(e,[{key:\"_updateTimeToPixelRange\",value:function(){this._visibleDuration=this.visibleWidth/this._computedPixelsPerSecond,this.timeToPixel.range([0,this._computedPixelsPerSecond])}},{key:\"pixelsPerSecond\",get:function(){return this._originalPixelsPerSecond},set:function(e){this._computedPixelsPerSecond=e*this.zoom,this._originalPixelsPerSecond=e,this._updateTimeToPixelRange(),this._children.forEach(function(e){e._timeToPixel&&(e.stretchRatio=e.stretchRatio)})}},{key:\"computedPixelsPerSecond\",get:function(){return this._computedPixelsPerSecond}},{key:\"offset\",get:function(){return this._offset},set:function(e){this._offset=e}},{key:\"zoom\",get:function(){return this._zoom},set:function(e){var t=e/this._zoom;this._zoom=e,this._computedPixelsPerSecond=this._originalPixelsPerSecond*e,this._updateTimeToPixelRange(),this._children.forEach(function(e){e._timeToPixel&&(e.stretchRatio=e.stretchRatio*t)})}},{key:\"visibleWidth\",get:function(){return this._visibleWidth},set:function(e){var t=e/this.visibleWidth;this._visibleWidth=e,this._visibleDuration=this.visibleWidth/this._computedPixelsPerSecond,this.maintainVisibleDuration&&(this.pixelsPerSecond=this._computedPixelsPerSecond*t)}},{key:\"visibleDuration\",get:function(){return this._visibleDuration}},{key:\"maintainVisibleDuration\",get:function(){return this._maintainVisibleDuration},set:function(e){this._maintainVisibleDuration=e}},{key:\"timeToPixel\",get:function(){return this._timeToPixel},set:function(e){this._timeToPixel=e}}]),e}();r[\"default\"]=l,t.exports=r[\"default\"]},{\"../utils/scales\":74,\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/interop-require-default\":93}],62:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"babel-runtime/core-js/symbol/iterator\")[\"default\"],l=e(\"babel-runtime/regenerator\")[\"default\"],u=e(\"babel-runtime/core-js/get-iterator\")[\"default\"],c=e(\"babel-runtime/helpers/interop-require-default\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var h=e(\"events\"),f=c(h),d=e(\"../interactions/keyboard\"),p=c(d),m=e(\"./layer-time-context\"),b=c(m),g=e(\"../interactions/surface\"),v=c(g),y=e(\"./timeline-time-context\"),$=c(y),x=e(\"./track\"),_=c(x),w=e(\"./track-collection\"),k=c(w),j=function(e){function t(){var e=arguments.length<=0||void 0===arguments[0]?100:arguments[0],r=arguments.length<=1||void 0===arguments[1]?1e3:arguments[1],i=arguments.length<=2||void 0===arguments[2]?{}:arguments[2],s=i.registerKeyboard,o=void 0===s?!0:s;a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).call(this),this._tracks=new k[\"default\"](this),this._state=null,this._surfaceCtor=v[\"default\"],o&&this.createInteraction(p[\"default\"],document),this._trackById={},this._groupedLayers={},this.timeContext=new $[\"default\"](e,r)}return i(t,e),s(t,[{key:\"configureSurface\",value:function(e){this._surfaceCtor=e}},{key:\"createInteraction\",value:function(e,t){var r=this,n=arguments.length<=2||void 0===arguments[2]?{}:arguments[2],i=new e(t,n);i.on(\"event\",function(e){return r._handleEvent(e)})}},{key:\"_handleEvent\",value:function(e){this.emit(\"event\",e),this._state&&this._state.handleEvent(e)}},{key:\"add\",value:function(e){if(-1!==this.tracks.indexOf(e))throw new Error(\"track already added to the timeline\");e.configure(this.timeContext),this.tracks.push(e),this.createInteraction(this._surfaceCtor,e.$el)}},{key:\"remove\",value:function(e){}},{key:\"createTrack\",value:function(e){var t=arguments.length<=1||void 0===arguments[1]?100:arguments[1],r=arguments.length<=2||void 0===arguments[2]?null:arguments[2],n=new _[\"default\"](e,t);if(null!==r){if(void 0!==this._trackById[r])throw new Error('trackId: \"'+r+'\" is already used');this._trackById[r]=n}return this.add(n),n.render(),n.update(),n}},{key:\"addLayer\",value:function(e,t){var r=arguments.length<=2||void 0===arguments[2]?\"default\":arguments[2],n=arguments.length<=3||void 0===arguments[3]?!1:arguments[3],i=t;if(\"string\"==typeof t&&(i=this.getTrackById(t)),!e.timeContext){var s=n?this.timeContext:new b[\"default\"](this.timeContext);e.setTimeContext(s)}i.add(e),this._groupedLayers[r]||(this._groupedLayers[r]=[]),this._groupedLayers[r].push(e),e.render(),e.update()}},{key:\"removeLayer\",value:function(e){this.tracks.forEach(function(t){var r=t.layers.indexOf(e);-1!==r&&t.remove(e)});for(var t in this._groupedLayers){var r=this._groupedLayers[t],n=r.indexOf(e);-1!==n&&r.splice(e,1),r.length||delete this._groupedLayers[t]}}},{key:\"getTrackById\",value:function(e){return this._trackById[e]}},{key:\"getTrackFromDOMElement\",value:function(e){var t=null,r=null;do e.classList.contains(\"track\")&&(t=e),e=e.parentNode;while(null===t);return this.tracks.forEach(function(e){e.$svg===t&&(r=e)}),r}},{key:\"getLayersByGroup\",value:function(e){return this._groupedLayers[e]}},{key:o,value:l.mark(function r(){return l.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.delegateYield(u(this.tracks),\"t0\",1);case 1:case\"end\":return e.stop()}},r,this)})},{key:\"offset\",get:function(){return this.timeContext.offset},set:function(e){this.timeContext.offset=e}},{key:\"zoom\",get:function(){return this.timeContext.zoom},set:function(e){this.timeContext.zoom=e}},{key:\"pixelsPerSecond\",get:function(){return this.timeContext.pixelsPerSecond},set:function(e){this.timeContext.pixelsPerSecond=e}},{key:\"visibleWidth\",get:function(){return this.timeContext.visibleWidth},set:function(e){this.timeContext.visibleWidth=e}},{key:\"timeToPixel\",get:function(){return this.timeContext.timeToPixel}},{key:\"visibleDuration\",get:function(){return this.timeContext.visibleDuration}},{key:\"maintainVisibleDuration\",set:function(e){this.timeContext.maintainVisibleDuration=e},get:function(){return this.timeContext.maintainVisibleDuration}},{key:\"groupedLayers\",get:function(){return this._groupedLayers}},{key:\"state\",set:function(e){this._state&&this._state.exit(),this._state=e,this._state&&this._state.enter()},get:function(){return this._state}},{key:\"tracks\",get:function(){return this._tracks}},{key:\"layers\",get:function(){return this._tracks.layers}}]),t}(f[\"default\"].EventEmitter);r[\"default\"]=j,t.exports=r[\"default\"]},{\"../interactions/keyboard\":66,\"../interactions/surface\":67,\"./layer-time-context\":58,\"./timeline-time-context\":61,\"./track\":64,\"./track-collection\":63,\"babel-runtime/core-js/get-iterator\":76,\"babel-runtime/core-js/symbol/iterator\":88,\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/get\":91,\"babel-runtime/helpers/inherits\":92,\"babel-runtime/helpers/interop-require-default\":93,\"babel-runtime/regenerator\":156,events:159}],63:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"babel-runtime/helpers/interop-require-default\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var l=e(\"./layer\"),u=o(l),c=function(e){function t(e){a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).call(this),this._timeline=e}return i(t,e),s(t,[{key:\"_getLayersOrGroups\",value:function(){var e=arguments.length<=0||void 0===arguments[0]?null:arguments[0],t=null;return t=\"string\"==typeof e?this._timeline.groupedLayers[e]:e instanceof u[\"default\"]?[e]:this.layers}},{key:\"render\",value:function(){this.forEach(function(e){return e.render()}),this._timeline.emit(\"render\")}},{key:\"update\",value:function(e){var t=this._getLayersOrGroups(e);this.forEach(function(e){return e.update(t)}),this._timeline.emit(\"update\",t)}},{key:\"updateContainer\",value:function(e){this.forEach(function(e){return e.updateContainer()}),this._timeline.emit(\"update:containers\")}},{key:\"updateLayers\",value:function(e){var t=this._getLayersOrGroups(e);this.forEach(function(e){return e.updateLayers(t)}),this._timeline.emit(\"update:layers\",t)}},{key:\"height\",set:function(e){this.forEach(function(t){return t.height=e})}},{key:\"layers\",get:function(){var e=[];return this.forEach(function(t){return e=e.concat(t.layers)}),e}}]),t}(Array);r[\"default\"]=c,t.exports=r[\"default\"]},{\"./layer\":59,\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/get\":91,\"babel-runtime/helpers/inherits\":92,\"babel-runtime/helpers/interop-require-default\":93}],64:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/create-class\")[\"default\"],i=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],s=e(\"babel-runtime/core-js/get-iterator\")[\"default\"],a=e(\"babel-runtime/core-js/symbol/iterator\")[\"default\"],o=e(\"babel-runtime/regenerator\")[\"default\"],l=e(\"babel-runtime/helpers/interop-require-default\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var u=e(\"./namespace\"),c=l(u),h=function(){function e(t){var r=arguments.length<=1||void 0===arguments[1]?100:arguments[1];i(this,e),this.$el=t,this.layers=[],this._height=r,this.renderingContext=null,this._createContainer()}return n(e,[{key:\"configure\",\nvalue:function(e){this.renderingContext=e}},{key:\"destroy\",value:function(){var e=this;this.$el.removeChild(this.$svg),this.layers.forEach(function(t){return e.$layout.removeChild(t.$el)}),this.$el=null,this.renderingContext=null,this.layers.length=0}},{key:\"_createContainer\",value:function(){var e=document.createElementNS(c[\"default\"],\"svg\");e.setAttributeNS(null,\"shape-rendering\",\"optimizeSpeed\"),e.setAttributeNS(null,\"height\",this.height),e.setAttribute(\"xmlns:xhtml\",\"http://www.w3.org/1999/xhtml\"),e.classList.add(\"track\");var t=document.createElementNS(c[\"default\"],\"rect\");t.setAttributeNS(null,\"height\",\"100%\"),t.setAttributeNS(null,\"width\",\"100%\"),t.setAttributeNS(null,\"style\",\"fill-opacity:0\");var r=document.createElementNS(c[\"default\"],\"defs\"),n=document.createElementNS(c[\"default\"],\"g\");n.classList.add(\"offset\");var i=document.createElementNS(c[\"default\"],\"g\");i.classList.add(\"layout\");var s=document.createElementNS(c[\"default\"],\"g\");s.classList.add(\"interactions\"),e.appendChild(r),e.appendChild(t),n.appendChild(i),e.appendChild(n),e.appendChild(s),this.$el.appendChild(e),this.$el.style.fontSize=0,this.$el.style.transform=\"translateZ(0)\",this.$layout=i,this.$offset=n,this.$interactions=s,this.$svg=e,this.$background=t}},{key:\"add\",value:function(e){this.layers.push(e),this.$layout.appendChild(e.$el)}},{key:\"remove\",value:function(e){this.layers.splice(this.layers.indexOf(e),1),this.$layout.removeChild(e.$el)}},{key:\"render\",value:function(){var e=!0,t=!1,r=void 0;try{for(var n,i=s(this);!(e=(n=i.next()).done);e=!0){var a=n.value;a.render()}}catch(o){t=!0,r=o}finally{try{!e&&i[\"return\"]&&i[\"return\"]()}finally{if(t)throw r}}}},{key:\"update\",value:function(){var e=arguments.length<=0||void 0===arguments[0]?null:arguments[0];this.updateContainer(),this.updateLayers(e)}},{key:\"updateContainer\",value:function(){var e=this.$svg,t=this.$offset,r=this.renderingContext,n=this.height,i=r.visibleWidth,s=r.timeToPixel(r.offset),a=\"translate(\"+s+\", 0)\";e.setAttributeNS(null,\"height\",n),e.setAttributeNS(null,\"width\",i),e.setAttributeNS(null,\"viewbox\",\"0 0 \"+i+\" \"+n),t.setAttributeNS(null,\"transform\",a)}},{key:\"updateLayers\",value:function(){var e=this,t=arguments.length<=0||void 0===arguments[0]?null:arguments[0];t=null===t?this.layers:t,t.forEach(function(t){-1!==e.layers.indexOf(t)&&t.update()})}},{key:a,value:o.mark(function t(){return o.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.delegateYield(s(this.layers),\"t0\",1);case 1:case\"end\":return e.stop()}},t,this)})},{key:\"height\",get:function(){return this._height},set:function(e){this._height=e}}]),e}();r[\"default\"]=h,t.exports=r[\"default\"]},{\"./namespace\":60,\"babel-runtime/core-js/get-iterator\":76,\"babel-runtime/core-js/symbol/iterator\":88,\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/interop-require-default\":93,\"babel-runtime/regenerator\":156}],65:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"babel-runtime/helpers/interop-require-default\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var l=e(\"events\"),u=o(l),c=function(e){function t(e){a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).call(this),this.el=e,this._bindEvents()}return i(t,e),s(t,[{key:\"_createEvent\",value:function(e,t){}},{key:\"_bindEvents\",value:function(){}}]),t}(u[\"default\"].EventEmitter);r[\"default\"]=c,t.exports=r[\"default\"]},{\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/get\":91,\"babel-runtime/helpers/inherits\":92,\"babel-runtime/helpers/interop-require-default\":93,events:159}],66:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"babel-runtime/helpers/interop-require-default\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var l=e(\"./event-source\"),u=o(l),c=e(\"./wave-event\"),h=o(c),f=function(e){function t(e){return a(this,t),t._instance?t._instance:(n(Object.getPrototypeOf(t.prototype),\"constructor\",this).call(this,e),this.sourceName=\"keyboard\",void(t._instance=this))}return i(t,e),s(t,[{key:\"_createEvent\",value:function(e,t){var r=new h[\"default\"](this.sourceName,e,t);return r.shiftKey=t.shiftKey,r.ctrlKey=t.ctrlKey,r.altKey=t.altKey,r.metaKey=t.metaKey,r[\"char\"]=String.fromCharCode(t.keyCode),r}},{key:\"_bindEvents\",value:function(){var e=this,t=function(t){var r=e._createEvent(\"keydown\",t);e.emit(\"event\",r)},r=function(t){var r=e._createEvent(\"keyup\",t);e.emit(\"event\",r)};this.el.addEventListener(\"keydown\",t,!1),this.el.addEventListener(\"keyup\",r,!1)}}]),t}(u[\"default\"]);r[\"default\"]=f,t.exports=r[\"default\"]},{\"./event-source\":65,\"./wave-event\":68,\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/get\":91,\"babel-runtime/helpers/inherits\":92,\"babel-runtime/helpers/interop-require-default\":93}],67:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"babel-runtime/helpers/interop-require-default\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var l=e(\"./event-source\"),u=o(l),c=e(\"./wave-event\"),h=o(c),f=(window.document.body,function(e){function t(e){a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).call(this,e),this.sourceName=\"surface\",this.mouseDownEvent=null,this.lastEvent=null}return i(t,e),s(t,[{key:\"_createEvent\",value:function(e,t){var r=new h[\"default\"](this.sourceName,e,t),n=this._getRelativePosition(t);return r.x=n.x,r.y=n.y,this.dx=null,this.dy=null,this.area=null,r}},{key:\"_getRelativePosition\",value:function(e){var t=0,r=0,n=this.el.getBoundingClientRect(),i=document.body.scrollLeft+document.documentElement.scrollLeft,s=document.body.scrollTop+document.documentElement.scrollTop;return e.pageX||e.pageY?(t=e.pageX,r=e.pageY):(e.clientX||e.clientY)&&(t=e.clientX+i,r=e.clientY+s),t-=n.left+i,r-=n.top+s,{x:t,y:r}}},{key:\"_defineArea\",value:function(e,t,r){if(t&&r){e.dx=e.x-r.x,e.dy=e.y-r.y;var n=t.x<e.x?t.x:e.x,i=t.y<e.y?t.y:e.y,s=Math.abs(Math.round(e.x-t.x)),a=Math.abs(Math.round(e.y-t.y));e.area={left:n,top:i,width:s,height:a}}}},{key:\"_bindEvents\",value:function(){var e=this,t=function(t){window.getSelection().removeAllRanges();var i=e._createEvent(\"mousedown\",t);e.isMouseDown=!0,e.mouseDownEvent=i,e.lastEvent=i,window.addEventListener(\"mousemove\",r,!1),window.addEventListener(\"mouseup\",n,!1),e.emit(\"event\",i)},r=function(t){var r=e._createEvent(\"mousemove\",t);e._defineArea(r,e.mouseDownEvent,e.lastEvent),e.lastEvent=r,e.emit(\"event\",r)},n=function l(t){var n=e._createEvent(\"mouseup\",t);e._defineArea(n,e.mouseDownEvent,e.lastEvent),e.isMouseDown=!1,e.mouseDownEvent=null,e.lastEvent=null,window.removeEventListener(\"mousemove\",r),window.removeEventListener(\"mouseup\",l),e.emit(\"event\",n)},i=function(t){var r=e._createEvent(\"click\",t);e.emit(\"event\",r)},s=function(t){var r=e._createEvent(\"dblclick\",t);e.emit(\"event\",r)},a=function(t){var r=e._createEvent(\"mouseover\",t);e.emit(\"event\",r)},o=function(t){var r=e._createEvent(\"mouseout\",t);e.emit(\"event\",r)};this.el.addEventListener(\"mousedown\",t,!1),this.el.addEventListener(\"click\",i,!1),this.el.addEventListener(\"dblclick\",s,!1),this.el.addEventListener(\"mouseover\",a,!1),this.el.addEventListener(\"mouseout\",o,!1)}}]),t}(u[\"default\"]));r[\"default\"]=f,t.exports=r[\"default\"]},{\"./event-source\":65,\"./wave-event\":68,\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/get\":91,\"babel-runtime/helpers/inherits\":92,\"babel-runtime/helpers/interop-require-default\":93}],68:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/class-call-check\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var i=function s(e,t,r){n(this,s),this.source=e,this.type=t,this.originalEvent=r,this.target=r.target,this.currentTarget=r.currentTarget};r[\"default\"]=i,t.exports=r[\"default\"]},{\"babel-runtime/helpers/class-call-check\":89}],69:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/create-class\")[\"default\"],i=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],s=e(\"babel-runtime/core-js/object/assign\")[\"default\"],a=e(\"babel-runtime/core-js/object/keys\")[\"default\"],o=e(\"babel-runtime/core-js/object/define-property\")[\"default\"],l=e(\"babel-runtime/helpers/interop-require-default\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var u=e(\"../core/namespace\"),c=l(u),h=function(){function e(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];i(this,e),this.$el=null,this.ns=c[\"default\"],this.params=s({},this._getDefaults(),t);var r=this._getAccessorList();this._createAccessors(r),this._setDefaultAccessors(r)}return n(e,[{key:\"_getDefaults\",value:function(){return{}}},{key:\"destroy\",value:function(){this.$el=null}},{key:\"getClassName\",value:function(){return\"shape\"}},{key:\"_getAccessorList\",value:function(){return{}}},{key:\"install\",value:function(e){for(var t in e)this[t]=e[t]}},{key:\"_createAccessors\",value:function(e){this._accessors={};var t=Object.getPrototypeOf(this);a(e).forEach(function(e){t.hasOwnProperty(e)||o(t,e,{get:function(){return this._accessors[e]},set:function(t){this._accessors[e]=t}})})}},{key:\"_setDefaultAccessors\",value:function(e){var t=this;a(e).forEach(function(r){var n=e[r],i=function(e){var t=arguments.length<=1||void 0===arguments[1]?null:arguments[1];return null===t?e[r]||n:void(e[r]=t)};t[r]=i})}},{key:\"render\",value:function(e){}},{key:\"update\",value:function(e,t){}},{key:\"inArea\",value:function(e,t,r,n,i,s){}}]),e}();r[\"default\"]=h,t.exports=r[\"default\"]},{\"../core/namespace\":60,\"babel-runtime/core-js/object/assign\":79,\"babel-runtime/core-js/object/define-property\":81,\"babel-runtime/core-js/object/keys\":83,\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/interop-require-default\":93}],70:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"babel-runtime/helpers/interop-require-default\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var l=e(\"./base-shape\"),u=o(l),c=function(e){function t(){a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).apply(this,arguments)}return i(t,e),s(t,[{key:\"getClassName\",value:function(){return\"dot\"}},{key:\"_getAccessorList\",value:function(){return{cx:0,cy:0,r:3,color:\"#000000\"}}},{key:\"render\",value:function(){return this.$el?this.$el:(this.$el=document.createElementNS(this.ns,\"circle\"),this.$el)}},{key:\"update\",value:function(e,t){var r=e.timeToPixel(this.cx(t)),n=e.valueToPixel(this.cy(t)),i=this.r(t),s=this.color(t);this.$el.setAttributeNS(null,\"transform\",\"translate(\"+r+\", \"+n+\")\"),this.$el.setAttributeNS(null,\"r\",i),this.$el.style.fill=s}},{key:\"inArea\",value:function(e,t,r,n,i,s){var a=e.timeToPixel(this.cx(t)),o=e.valueToPixel(this.cy(t));return a>r&&i>a&&o>n&&s>o?!0:!1}}]),t}(u[\"default\"]);r[\"default\"]=c,t.exports=r[\"default\"]},{\"./base-shape\":69,\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/get\":91,\"babel-runtime/helpers/inherits\":92,\"babel-runtime/helpers/interop-require-default\":93}],71:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"babel-runtime/helpers/interop-require-default\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var l=e(\"./base-shape\"),u=o(l),c=function(e){function t(){a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).apply(this,arguments)}return i(t,e),s(t,[{key:\"getClassName\",value:function(){return\"line\"}},{key:\"_getAccessorList\",value:function(){return{cx:0,cy:0}}},{key:\"_getDefaults\",value:function(){return{color:\"#000000\"}}},{key:\"render\",value:function(e){return this.$el?this.$el:(this.$el=document.createElementNS(this.ns,\"path\"),this.$el)}},{key:\"update\",value:function(e,t){var r=this;t=t.slice(0),t.sort(function(e,t){return r.cx(e)<r.cx(t)?-1:1}),this.$el.setAttributeNS(null,\"d\",this._buildLine(e,t)),this.$el.style.stroke=this.params.color,this.$el.style.fill=\"none\",t=null}},{key:\"_buildLine\",value:function(e,t){var r=this;if(!t.length)return\"\";var n=t.map(function(t,n){var i=e.timeToPixel(r.cx(t)),s=e.valueToPixel(r.cy(t));return i+\",\"+s});return\"M\"+n.join(\"L\")}}]),t}(u[\"default\"]);r[\"default\"]=c,t.exports=r[\"default\"]},{\"./base-shape\":69,\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/get\":91,\"babel-runtime/helpers/inherits\":92,\"babel-runtime/helpers/interop-require-default\":93}],72:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/get\")[\"default\"],i=e(\"babel-runtime/helpers/inherits\")[\"default\"],s=e(\"babel-runtime/helpers/create-class\")[\"default\"],a=e(\"babel-runtime/helpers/class-call-check\")[\"default\"],o=e(\"babel-runtime/helpers/interop-require-default\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var l=e(\"./base-shape\"),u=o(l),c=function(e){function t(){a(this,t),n(Object.getPrototypeOf(t.prototype),\"constructor\",this).apply(this,arguments)}return i(t,e),s(t,[{key:\"getClassName\",value:function(){return\"segment\"}},{key:\"_getAccessorList\",value:function(){return{x:0,y:0,width:0,height:1,color:\"#000000\",opacity:1}}},{key:\"_getDefaults\",value:function(){return{displayHandlers:!0,handlerWidth:2,handlerOpacity:.8,opacity:.6}}},{key:\"render\",value:function(e){return this.$el?this.$el:(this.$el=document.createElementNS(this.ns,\"g\"),this.$segment=document.createElementNS(this.ns,\"rect\"),this.$segment.classList.add(\"segment\"),this.$segment.style.opacity=this.params.opacity,this.$segment.setAttributeNS(null,\"shape-rendering\",\"crispEdges\"),this.$el.appendChild(this.$segment),this.params.displayHandlers&&(this.$leftHandler=document.createElementNS(this.ns,\"rect\"),this.$leftHandler.classList.add(\"left\",\"handler\"),this.$leftHandler.setAttributeNS(null,\"width\",this.params.handlerWidth),this.$leftHandler.setAttributeNS(null,\"shape-rendering\",\"crispEdges\"),this.$leftHandler.style.opacity=this.params.handlerOpacity,this.$leftHandler.style.cursor=\"ew-resize\",this.$rightHandler=document.createElementNS(this.ns,\"rect\"),this.$rightHandler.classList.add(\"right\",\"handler\"),this.$rightHandler.setAttributeNS(null,\"width\",this.params.handlerWidth),this.$rightHandler.setAttributeNS(null,\"shape-rendering\",\"crispEdges\"),this.$rightHandler.style.opacity=this.params.handlerOpacity,this.$rightHandler.style.cursor=\"ew-resize\",this.$el.appendChild(this.$leftHandler),this.$el.appendChild(this.$rightHandler)),this.$el)}},{key:\"update\",value:function(e,t){var r=e.timeToPixel(this.x(t)),n=e.valueToPixel(this.y(t)),i=e.timeToPixel(this.width(t)),s=e.valueToPixel(this.height(t)),a=this.color(t),o=this.opacity(t);if(this.$el.setAttributeNS(null,\"transform\",\"translate(\"+r+\", \"+n+\")\"),this.$el.style.opacity=o,this.$segment.setAttributeNS(null,\"width\",Math.max(i,0)),this.$segment.setAttributeNS(null,\"height\",s),this.$segment.style.fill=a,this.params.displayHandlers){this.$leftHandler.setAttributeNS(null,\"height\",s),this.$leftHandler.setAttributeNS(null,\"transform\",\"translate(0, 0)\"),this.$leftHandler.style.fill=a;var l=\"translate(\"+(i-this.params.handlerWidth)+\", 0)\";this.$rightHandler.setAttributeNS(null,\"height\",s),this.$rightHandler.setAttributeNS(null,\"transform\",l),this.$rightHandler.style.fill=a}}},{key:\"inArea\",value:function(e,t,r,n,i,s){var a=e.timeToPixel(this.x(t)),o=e.timeToPixel(this.x(t)+this.width(t)),l=e.valueToPixel(this.y(t)),u=e.valueToPixel(this.y(t)+this.height(t)),c=Math.max(0,Math.min(i,o)-Math.max(r,a)),h=Math.max(0,Math.min(s,u)-Math.max(n,l)),f=c*h;return f>0}}]),t}(u[\"default\"]);r[\"default\"]=c,t.exports=r[\"default\"]},{\"./base-shape\":69,\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90,\"babel-runtime/helpers/get\":91,\"babel-runtime/helpers/inherits\":92,\"babel-runtime/helpers/interop-require-default\":93}],73:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/helpers/create-class\")[\"default\"],i=e(\"babel-runtime/helpers/class-call-check\")[\"default\"];Object.defineProperty(r,\"__esModule\",{value:!0});var s=function(){function e(t){arguments.length<=1||void 0===arguments[1]?{}:arguments[1];i(this,e),this.timeline=t}return n(e,[{key:\"enter\",value:function(){}},{key:\"exit\",value:function(){}},{key:\"handleEvent\",value:function(e){}},{key:\"tracks\",get:function(){return this.timeline.tracks}},{key:\"layers\",get:function(){return this.timeline.tracks.layers}}]),e}();r[\"default\"]=s,t.exports=r[\"default\"]},{\"babel-runtime/helpers/class-call-check\":89,\"babel-runtime/helpers/create-class\":90}],74:[function(e,t,r){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0}),r[\"default\"]={linear:function(){function e(){i=(n[1]-n[0])/(r[1]-r[0]),s=n[0]-i*r[0]}function t(e){return i*e+s}var r=[0,1],n=[0,1],i=1,s=0;return t.invert=function(e){return(e-s)/i},t.domain=function(){var n=arguments.length<=0||void 0===arguments[0]?null:arguments[0];return null===n?r:(r=n,e(),t)},t.range=function(){var r=arguments.length<=0||void 0===arguments[0]?null:arguments[0];return null===r?n:(n=r,e(),t)},t}},t.exports=r[\"default\"]},{}],75:[function(e,t,r){arguments[4][10][0].apply(r,arguments)},{\"core-js/library/fn/array/from\":96,dup:10}],76:[function(e,t,r){t.exports={\"default\":e(\"core-js/library/fn/get-iterator\"),__esModule:!0}},{\"core-js/library/fn/get-iterator\":97}],77:[function(e,t,r){t.exports={\"default\":e(\"core-js/library/fn/is-iterable\"),__esModule:!0}},{\"core-js/library/fn/is-iterable\":98}],78:[function(e,t,r){t.exports={\"default\":e(\"core-js/library/fn/map\"),__esModule:!0}},{\"core-js/library/fn/map\":99}],79:[function(e,t,r){t.exports={\"default\":e(\"core-js/library/fn/object/assign\"),__esModule:!0}},{\"core-js/library/fn/object/assign\":100}],80:[function(e,t,r){arguments[4][11][0].apply(r,arguments)},{\"core-js/library/fn/object/create\":101,dup:11}],81:[function(e,t,r){arguments[4][12][0].apply(r,arguments)},{\"core-js/library/fn/object/define-property\":102,dup:12}],82:[function(e,t,r){arguments[4][13][0].apply(r,arguments)},{\"core-js/library/fn/object/get-own-property-descriptor\":103,dup:13}],83:[function(e,t,r){t.exports={\"default\":e(\"core-js/library/fn/object/keys\"),__esModule:!0}},{\"core-js/library/fn/object/keys\":104}],84:[function(e,t,r){t.exports={\"default\":e(\"core-js/library/fn/object/set-prototype-of\"),__esModule:!0}},{\"core-js/library/fn/object/set-prototype-of\":105}],85:[function(e,t,r){t.exports={\"default\":e(\"core-js/library/fn/promise\"),__esModule:!0}},{\"core-js/library/fn/promise\":106}],86:[function(e,t,r){arguments[4][14][0].apply(r,arguments)},{\"core-js/library/fn/set\":107,dup:14}],87:[function(e,t,r){t.exports={\"default\":e(\"core-js/library/fn/symbol\"),__esModule:!0}},{\"core-js/library/fn/symbol\":108}],88:[function(e,t,r){t.exports={\"default\":e(\"core-js/library/fn/symbol/iterator\"),__esModule:!0}},{\"core-js/library/fn/symbol/iterator\":109}],89:[function(e,t,r){arguments[4][15][0].apply(r,arguments)},{dup:15}],90:[function(e,t,r){arguments[4][16][0].apply(r,arguments)},{\"babel-runtime/core-js/object/define-property\":81,dup:16}],91:[function(e,t,r){arguments[4][17][0].apply(r,arguments)},{\"babel-runtime/core-js/object/get-own-property-descriptor\":82,dup:17}],92:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/core-js/object/create\")[\"default\"],i=e(\"babel-runtime/core-js/object/set-prototype-of\")[\"default\"];r[\"default\"]=function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=n(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(i?i(e,t):e.__proto__=t)},r.__esModule=!0},{\"babel-runtime/core-js/object/create\":80,\"babel-runtime/core-js/object/set-prototype-of\":84}],93:[function(e,t,r){\"use strict\";r[\"default\"]=function(e){return e&&e.__esModule?e:{\"default\":e}},r.__esModule=!0},{}],94:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/core-js/get-iterator\")[\"default\"],i=e(\"babel-runtime/core-js/is-iterable\")[\"default\"];r[\"default\"]=function(){function e(e,t){var r=[],i=!0,s=!1,a=void 0;try{for(var o,l=n(e);!(i=(o=l.next()).done)&&(r.push(o.value),!t||r.length!==t);i=!0);}catch(u){s=!0,a=u}finally{try{!i&&l[\"return\"]&&l[\"return\"]()}finally{if(s)throw a}}return r}return function(t,r){if(Array.isArray(t))return t;if(i(Object(t)))return e(t,r);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),r.__esModule=!0},{\"babel-runtime/core-js/get-iterator\":76,\"babel-runtime/core-js/is-iterable\":77}],95:[function(e,t,r){\"use strict\";var n=e(\"babel-runtime/core-js/array/from\")[\"default\"];r[\"default\"]=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return n(e)},r.__esModule=!0},{\"babel-runtime/core-js/array/from\":75}],96:[function(e,t,r){arguments[4][19][0].apply(r,arguments)},{\"../../modules/$\":128,\"../../modules/es6.array.from\":142,\"../../modules/es6.string.iterator\":151,dup:19}],97:[function(e,t,r){e(\"../modules/web.dom.iterable\"),e(\"../modules/es6.string.iterator\"),e(\"../modules/core.iter-helpers\"),t.exports=e(\"../modules/$\").core.getIterator},{\"../modules/$\":128,\"../modules/core.iter-helpers\":141,\"../modules/es6.string.iterator\":151,\"../modules/web.dom.iterable\":155}],98:[function(e,t,r){e(\"../modules/web.dom.iterable\"),e(\"../modules/es6.string.iterator\"),e(\"../modules/core.iter-helpers\"),t.exports=e(\"../modules/$\").core.isIterable},{\"../modules/$\":128,\"../modules/core.iter-helpers\":141,\"../modules/es6.string.iterator\":151,\"../modules/web.dom.iterable\":155}],99:[function(e,t,r){e(\"../modules/es6.object.to-string\"),e(\"../modules/es6.string.iterator\"),e(\"../modules/web.dom.iterable\"),e(\"../modules/es6.map\"),e(\"../modules/es7.map.to-json\"),t.exports=e(\"../modules/$\").core.Map},{\"../modules/$\":128,\"../modules/es6.map\":144,\"../modules/es6.object.to-string\":148,\"../modules/es6.string.iterator\":151,\"../modules/es7.map.to-json\":153,\"../modules/web.dom.iterable\":155}],100:[function(e,t,r){e(\"../../modules/es6.object.assign\"),t.exports=e(\"../../modules/$\").core.Object.assign},{\"../../modules/$\":128,\"../../modules/es6.object.assign\":145}],101:[function(e,t,r){arguments[4][20][0].apply(r,arguments)},{\"../../modules/$\":128,dup:20}],102:[function(e,t,r){arguments[4][21][0].apply(r,arguments)},{\"../../modules/$\":128,dup:21}],103:[function(e,t,r){arguments[4][22][0].apply(r,arguments)},{\"../../modules/$\":128,\"../../modules/es6.object.statics-accept-primitives\":147,dup:22}],104:[function(e,t,r){e(\"../../modules/es6.object.statics-accept-primitives\"),t.exports=e(\"../../modules/$\").core.Object.keys},{\"../../modules/$\":128,\"../../modules/es6.object.statics-accept-primitives\":147}],105:[function(e,t,r){e(\"../../modules/es6.object.set-prototype-of\"),t.exports=e(\"../../modules/$\").core.Object.setPrototypeOf},{\"../../modules/$\":128,\"../../modules/es6.object.set-prototype-of\":146}],106:[function(e,t,r){e(\"../modules/es6.object.to-string\"),e(\"../modules/es6.string.iterator\"),e(\"../modules/web.dom.iterable\"),e(\"../modules/es6.promise\"),t.exports=e(\"../modules/$\").core.Promise},{\"../modules/$\":128,\"../modules/es6.object.to-string\":148,\"../modules/es6.promise\":149,\"../modules/es6.string.iterator\":151,\"../modules/web.dom.iterable\":155}],107:[function(e,t,r){arguments[4][23][0].apply(r,arguments)},{\"../modules/$\":128,\"../modules/es6.object.to-string\":148,\"../modules/es6.set\":150,\"../modules/es6.string.iterator\":151,\"../modules/es7.set.to-json\":154,\"../modules/web.dom.iterable\":155,dup:23}],108:[function(e,t,r){e(\"../../modules/es6.symbol\"),t.exports=e(\"../../modules/$\").core.Symbol},{\"../../modules/$\":128,\"../../modules/es6.symbol\":152}],109:[function(e,t,r){e(\"../../modules/es6.string.iterator\"),e(\"../../modules/web.dom.iterable\"),t.exports=e(\"../../modules/$.wks\")(\"iterator\")},{\"../../modules/$.wks\":140,\"../../modules/es6.string.iterator\":151,\"../../modules/web.dom.iterable\":155}],110:[function(e,t,r){arguments[4][24][0].apply(r,arguments)},{\"./$\":128,dup:24}],111:[function(e,t,r){var n=e(\"./$\"),i=e(\"./$.enum-keys\");t.exports=Object.assign||function(e,t){for(var r=Object(n.assertDefined(e)),s=arguments.length,a=1;s>a;)for(var o,l=n.ES5Object(arguments[a++]),u=i(l),c=u.length,h=0;c>h;)r[o=u[h++]]=l[o];return r}},{\"./$\":128,\"./$.enum-keys\":119}],112:[function(e,t,r){arguments[4][25][0].apply(r,arguments)},{\"./$\":128,\"./$.wks\":140,dup:25}],113:[function(e,t,r){arguments[4][26][0].apply(r,arguments)},{\"./$\":128,\"./$.assert\":110,\"./$.ctx\":116,\"./$.for-of\":120,\"./$.iter\":127,\"./$.iter-define\":125,\"./$.mix\":130,\"./$.uid\":138,dup:26}],114:[function(e,t,r){arguments[4][27][0].apply(r,arguments)},{\"./$.def\":117,\"./$.for-of\":120,dup:27}],115:[function(e,t,r){arguments[4][28][0].apply(r,arguments)},{\"./$\":128,\"./$.assert\":110,\"./$.cof\":112,\"./$.def\":117,\"./$.for-of\":120,\"./$.iter\":127,\"./$.mix\":130,\"./$.species\":135,\"./$.uid\":138,dup:28}],116:[function(e,t,r){arguments[4][29][0].apply(r,arguments)},{\"./$.assert\":110,dup:29}],117:[function(e,t,r){arguments[4][30][0].apply(r,arguments)},{\"./$\":128,dup:30}],118:[function(e,t,r){var n=e(\"./$\"),i=n.g.document,s=n.isObject,a=s(i)&&s(i.createElement);t.exports=function(e){return a?i.createElement(e):{}}},{\"./$\":128}],119:[function(e,t,r){var n=e(\"./$\");t.exports=function(e){var t=n.getKeys(e),r=n.getDesc,i=n.getSymbols;return i&&n.each.call(i(e),function(n){r(e,n).enumerable&&t.push(n)}),t}},{\"./$\":128}],120:[function(e,t,r){arguments[4][31][0].apply(r,arguments)},{\"./$.ctx\":116,\"./$.iter\":127,\"./$.iter-call\":124,dup:31}],121:[function(e,t,r){arguments[4][32][0].apply(r,arguments)},{dup:32}],122:[function(e,t,r){arguments[4][33][0].apply(r,arguments)},{\"./$\":128,dup:33}],123:[function(e,t,r){t.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3]);case 5:return n?e(t[0],t[1],t[2],t[3],t[4]):e.call(r,t[0],t[1],t[2],t[3],t[4])}return e.apply(r,t)}},{}],124:[function(e,t,r){arguments[4][34][0].apply(r,arguments)},{\"./$.assert\":110,dup:34}],125:[function(e,t,r){arguments[4][35][0].apply(r,arguments)},{\"./$\":128,\"./$.cof\":112,\"./$.def\":117,\"./$.iter\":127,\"./$.redef\":131,\"./$.wks\":140,dup:35}],126:[function(e,t,r){arguments[4][36][0].apply(r,arguments)},{\"./$.wks\":140,dup:36}],127:[function(e,t,r){arguments[4][37][0].apply(r,arguments)},{\"./$\":128,\"./$.assert\":110,\"./$.cof\":112,\"./$.shared\":134,\"./$.wks\":140,dup:37}],128:[function(e,t,r){arguments[4][38][0].apply(r,arguments)},{\"./$.fw\":121,dup:38}],129:[function(e,t,r){var n=e(\"./$\");t.exports=function(e,t){for(var r,i=n.toObject(e),s=n.getKeys(i),a=s.length,o=0;a>o;)if(i[r=s[o++]]===t)return r}},{\"./$\":128}],130:[function(e,t,r){arguments[4][39][0].apply(r,arguments)},{\"./$.redef\":131,dup:39}],131:[function(e,t,r){arguments[4][40][0].apply(r,arguments)},{\"./$\":128,dup:40}],132:[function(e,t,r){t.exports=Object.is||function(e,t){return e===t?0!==e||1/e===1/t:e!=e&&t!=t}},{}],133:[function(e,t,r){function n(e,t){s.obj(e),s(null===t||i.isObject(t),t,\": can't set as prototype!\")}var i=e(\"./$\"),s=e(\"./$.assert\");t.exports={set:Object.setPrototypeOf||(\"__proto__\"in{}?function(t,r){try{r=e(\"./$.ctx\")(Function.call,i.getDesc(Object.prototype,\"__proto__\").set,2),r({},[])}catch(s){t=!0}return function(e,i){return n(e,i),t?e.__proto__=i:r(e,i),e}}():void 0),check:n}},{\"./$\":128,\"./$.assert\":110,\"./$.ctx\":116}],134:[function(e,t,r){arguments[4][41][0].apply(r,arguments)},{\"./$\":128,dup:41}],135:[function(e,t,r){arguments[4][42][0].apply(r,arguments)},{\"./$\":128,\"./$.wks\":140,dup:42}],136:[function(e,t,r){arguments[4][43][0].apply(r,arguments)},{\"./$\":128,dup:43}],137:[function(e,t,r){\"use strict\";function n(){var e=+this;if(l.has(x,e)){var t=x[e];delete x[e],t()}}function i(e){n.call(e.data)}var s,a,o,l=e(\"./$\"),u=e(\"./$.ctx\"),c=e(\"./$.cof\"),h=e(\"./$.invoke\"),f=e(\"./$.dom-create\"),d=l.g,p=l.isFunction,m=l.html,b=d.process,g=d.setImmediate,v=d.clearImmediate,y=d.MessageChannel,$=0,x={},_=\"onreadystatechange\";p(g)&&p(v)||(g=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return x[++$]=function(){h(p(e)?e:Function(e),t)},s($),$},v=function(e){delete x[e]},\"process\"==c(b)?s=function(e){b.nextTick(u(n,e,1))}:d.addEventListener&&p(d.postMessage)&&!d.importScripts?(s=function(e){d.postMessage(e,\"*\")},d.addEventListener(\"message\",i,!1)):p(y)?(a=new y,o=a.port2,a.port1.onmessage=i,s=u(o.postMessage,o,1)):s=_ in f(\"script\")?function(e){m.appendChild(f(\"script\"))[_]=function(){m.removeChild(this),n.call(e)}}:function(e){setTimeout(u(n,e,1),0)}),t.exports={set:g,clear:v}},{\"./$\":128,\"./$.cof\":112,\"./$.ctx\":116,\"./$.dom-create\":118,\"./$.invoke\":123}],138:[function(e,t,r){arguments[4][44][0].apply(r,arguments)},{\"./$\":128,dup:44}],139:[function(e,t,r){arguments[4][45][0].apply(r,arguments)},{dup:45}],140:[function(e,t,r){arguments[4][46][0].apply(r,arguments)},{\"./$\":128,\"./$.shared\":134,\"./$.uid\":138,dup:46}],141:[function(e,t,r){var n=e(\"./$\").core,i=e(\"./$.iter\");n.isIterable=i.is,n.getIterator=i.get},{\"./$\":128,\"./$.iter\":127}],142:[function(e,t,r){arguments[4][47][0].apply(r,arguments)},{\"./$\":128,\"./$.ctx\":116,\"./$.def\":117,\"./$.iter\":127,\"./$.iter-call\":124,\"./$.iter-detect\":126,dup:47}],143:[function(e,t,r){arguments[4][48][0].apply(r,arguments)},{\"./$\":128,\"./$.iter\":127,\"./$.iter-define\":125,\"./$.uid\":138,\"./$.unscope\":139,dup:48}],144:[function(e,t,r){\"use strict\";var n=e(\"./$.collection-strong\");e(\"./$.collection\")(\"Map\",function(e){return function(){return e(this,arguments[0])}},{get:function(e){var t=n.getEntry(this,e);return t&&t.v},set:function(e,t){return n.def(this,0===e?0:e,t)}},n,!0)},{\"./$.collection\":115,\"./$.collection-strong\":113}],145:[function(e,t,r){var n=e(\"./$.def\");n(n.S,\"Object\",{assign:e(\"./$.assign\")})},{\"./$.assign\":111,\"./$.def\":117}],146:[function(e,t,r){var n=e(\"./$.def\");n(n.S,\"Object\",{setPrototypeOf:e(\"./$.set-proto\").set})},{\"./$.def\":117,\"./$.set-proto\":133}],147:[function(e,t,r){arguments[4][49][0].apply(r,arguments)},{\"./$\":128,\"./$.def\":117,\"./$.get-names\":122,dup:49}],148:[function(e,t,r){arguments[4][50][0].apply(r,arguments)},{\"./$\":128,\"./$.cof\":112,\"./$.redef\":131,\"./$.wks\":140,dup:50}],149:[function(e,t,r){\"use strict\";function n(e){var t=new S(function(){});return e&&(t.constructor=Object),S.resolve(t)===t}function i(e){return L(e)&&(D?\"Promise\"==m.classof(e):w in e)}function s(e,t){return d.FW||e!==S||t!==f?$(e,t):!0}function a(e){var t=T(e)[_];return void 0!=t?t:e}function o(e){var t;return L(e)&&(t=e.then),C(t)?t:!1}function l(e){var t=e.c;t.length&&O.call(j,function(){function r(t){var r,s,a=i?t.ok:t.fail;try{a?(i||(e.h=!0),r=a===!0?n:a(n),r===t.P?t.rej(TypeError(\"Promise-chain cycle\")):(s=o(r))?s.call(r,t.res,t.rej):t.res(r)):t.rej(n)}catch(l){t.rej(l)}}for(var n=e.v,i=1==e.s,s=0;t.length>s;)r(t[s++]);t.length=0})}function u(e){var t,r=e[w],n=r.a||r.c,i=0;if(r.h)return!1;for(;n.length>i;)if(t=n[i++],t.fail||!u(t.P))return!1;return!0}function c(e){var t,r=this;r.d||(r.d=!0,r=r.r||r,r.v=e,r.s=2,r.a=r.c.slice(),setTimeout(function(){O.call(j,function(){u(t=r.p)&&(P?E.emit(\"unhandledRejection\",e,t):j.console&&console.error&&console.error(\"Unhandled promise rejection\",e)),\nr.a=void 0})},1),l(r))}function h(e){var t,r=this;if(!r.d){r.d=!0,r=r.r||r;try{(t=o(e))?O.call(j,function(){var n={r:r,d:!1};try{t.call(e,p(h,n,1),p(c,n,1))}catch(i){c.call(n,i)}}):(r.v=e,r.s=1,l(r))}catch(n){c.call({r:r,d:!1},n)}}}var f,d=e(\"./$\"),p=e(\"./$.ctx\"),m=e(\"./$.cof\"),b=e(\"./$.def\"),g=e(\"./$.assert\"),v=e(\"./$.for-of\"),y=e(\"./$.set-proto\").set,$=e(\"./$.same\"),x=e(\"./$.species\"),_=e(\"./$.wks\")(\"species\"),w=e(\"./$.uid\").safe(\"record\"),k=\"Promise\",j=d.g,E=j.process,P=\"process\"==m(E),O=E&&E.nextTick||e(\"./$.task\").set,S=j[k],C=d.isFunction,L=d.isObject,M=g.fn,T=g.obj,D=function(){function e(t){var r=new S(t);return y(r,e.prototype),r}var t=!1;try{if(t=C(S)&&C(S.resolve)&&n(),y(e,S),e.prototype=d.create(S.prototype,{constructor:{value:e}}),e.resolve(5).then(function(){})instanceof e||(t=!1),t&&d.DESC){var r=!1;S.resolve(d.setDesc({},\"then\",{get:function(){r=!0}})),t=r}}catch(i){t=!1}return t}();D||(S=function(e){M(e);var t={p:g.inst(this,S,k),c:[],a:void 0,s:0,d:!1,v:void 0,h:!1};d.hide(this,w,t);try{e(p(h,t,1),p(c,t,1))}catch(r){c.call(t,r)}},e(\"./$.mix\")(S.prototype,{then:function(e,t){var r=T(T(this).constructor)[_],n={ok:C(e)?e:!0,fail:C(t)?t:!1},i=n.P=new(void 0!=r?r:S)(function(e,t){n.res=M(e),n.rej=M(t)}),s=this[w];return s.c.push(n),s.a&&s.a.push(n),s.s&&l(s),i},\"catch\":function(e){return this.then(void 0,e)}})),b(b.G+b.W+b.F*!D,{Promise:S}),m.set(S,k),x(S),x(f=d.core[k]),b(b.S+b.F*!D,k,{reject:function(e){return new(a(this))(function(t,r){r(e)})}}),b(b.S+b.F*(!D||n(!0)),k,{resolve:function(e){return i(e)&&s(e.constructor,this)?e:new this(function(t){t(e)})}}),b(b.S+b.F*!(D&&e(\"./$.iter-detect\")(function(e){S.all(e)[\"catch\"](function(){})})),k,{all:function(e){var t=a(this),r=[];return new t(function(n,i){v(e,!1,r.push,r);var s=r.length,a=Array(s);s?d.each.call(r,function(e,r){t.resolve(e).then(function(e){a[r]=e,--s||n(a)},i)}):n(a)})},race:function(e){var t=a(this);return new t(function(r,n){v(e,!1,function(e){t.resolve(e).then(r,n)})})}})},{\"./$\":128,\"./$.assert\":110,\"./$.cof\":112,\"./$.ctx\":116,\"./$.def\":117,\"./$.for-of\":120,\"./$.iter-detect\":126,\"./$.mix\":130,\"./$.same\":132,\"./$.set-proto\":133,\"./$.species\":135,\"./$.task\":137,\"./$.uid\":138,\"./$.wks\":140}],150:[function(e,t,r){arguments[4][51][0].apply(r,arguments)},{\"./$.collection\":115,\"./$.collection-strong\":113,dup:51}],151:[function(e,t,r){arguments[4][52][0].apply(r,arguments)},{\"./$\":128,\"./$.iter\":127,\"./$.iter-define\":125,\"./$.string-at\":136,\"./$.uid\":138,dup:52}],152:[function(e,t,r){\"use strict\";function n(e){var t=N[e]=h.set(w(C.prototype),M,e);return x&&L&&I($,e,{configurable:!0,set:function(t){_(this,T)&&_(this[T],e)&&(this[T][e]=!1),I(this,e,E(1,t))}}),t}function i(e,t,r){return r&&_(N,t)?(r.enumerable?(_(e,T)&&e[T][t]&&(e[T][t]=!1),r=w(r,{enumerable:E(0,!1)})):(_(e,T)||j(e,T,E(1,{})),e[T][t]=!0),I(e,t,r)):j(e,t,r)}function s(e,t){y(e);for(var r,n=v(t=S(t)),s=0,a=n.length;a>s;)i(e,r=n[s++],t[r]);return e}function a(e,t){return void 0===t?w(e):s(w(e),t)}function o(e){var t=D.call(this,e);return t||!_(this,e)||!_(N,e)||_(this,T)&&this[T][e]?t:!0}function l(e,t){var r=k(e=S(e),t);return!r||!_(N,t)||_(e,T)&&e[T][t]||(r.enumerable=!0),r}function u(e){for(var t,r=O(S(e)),n=[],i=0;r.length>i;)_(N,t=r[i++])||t==T||n.push(t);return n}function c(e){for(var t,r=O(S(e)),n=[],i=0;r.length>i;)_(N,t=r[i++])&&n.push(N[t]);return n}var h=e(\"./$\"),f=e(\"./$.cof\").set,d=e(\"./$.uid\"),p=e(\"./$.shared\"),m=e(\"./$.def\"),b=e(\"./$.redef\"),g=e(\"./$.keyof\"),v=e(\"./$.enum-keys\"),y=e(\"./$.assert\").obj,$=Object.prototype,x=h.DESC,_=h.has,w=h.create,k=h.getDesc,j=h.setDesc,E=h.desc,P=e(\"./$.get-names\"),O=P.get,S=h.toObject,C=h.g.Symbol,L=!1,M=d(\"tag\"),T=d(\"hidden\"),D={}.propertyIsEnumerable,A=p(\"symbol-registry\"),N=p(\"symbols\"),F=h.isFunction(C),I=x?function(){try{return w(j({},T,{get:function(){return j(this,T,{value:!1})[T]}}))[T]||j}catch(e){return function(e,t,r){var n=k($,t);n&&delete $[t],j(e,t,r),n&&e!==$&&j($,t,n)}}}():j;F||(C=function(){if(this instanceof C)throw TypeError(\"Symbol is not a constructor\");return n(d(arguments[0]))},b(C.prototype,\"toString\",function(){return this[M]}),h.create=a,h.setDesc=i,h.getDesc=l,h.setDescs=s,h.getNames=P.get=u,h.getSymbols=c,h.DESC&&h.FW&&b($,\"propertyIsEnumerable\",o,!0));var R={\"for\":function(e){return _(A,e+=\"\")?A[e]:A[e]=C(e)},keyFor:function(e){return g(A,e)},useSetter:function(){L=!0},useSimple:function(){L=!1}};h.each.call(\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"),function(t){var r=e(\"./$.wks\")(t);R[t]=F?r:n(r)}),L=!0,m(m.G+m.W,{Symbol:C}),m(m.S,\"Symbol\",R),m(m.S+m.F*!F,\"Object\",{create:a,defineProperty:i,defineProperties:s,getOwnPropertyDescriptor:l,getOwnPropertyNames:u,getOwnPropertySymbols:c}),f(C,\"Symbol\"),f(Math,\"Math\",!0),f(h.g.JSON,\"JSON\",!0)},{\"./$\":128,\"./$.assert\":110,\"./$.cof\":112,\"./$.def\":117,\"./$.enum-keys\":119,\"./$.get-names\":122,\"./$.keyof\":129,\"./$.redef\":131,\"./$.shared\":134,\"./$.uid\":138,\"./$.wks\":140}],153:[function(e,t,r){e(\"./$.collection-to-json\")(\"Map\")},{\"./$.collection-to-json\":114}],154:[function(e,t,r){arguments[4][53][0].apply(r,arguments)},{\"./$.collection-to-json\":114,dup:53}],155:[function(e,t,r){arguments[4][54][0].apply(r,arguments)},{\"./$\":128,\"./$.iter\":127,\"./$.wks\":140,\"./es6.array.iterator\":143,dup:54}],156:[function(e,t,r){(function(r){var n=\"object\"==typeof r?r:\"object\"==typeof window?window:\"object\"==typeof self?self:this,i=n.regeneratorRuntime&&Object.getOwnPropertyNames(n).indexOf(\"regeneratorRuntime\")>=0,s=i&&n.regeneratorRuntime;n.regeneratorRuntime=void 0,t.exports=e(\"./runtime\"),i?n.regeneratorRuntime=s:delete n.regeneratorRuntime,t.exports={\"default\":t.exports,__esModule:!0}}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{\"./runtime\":157}],157:[function(e,t,r){(function(r,n){\"use strict\";var i=e(\"babel-runtime/core-js/symbol\")[\"default\"],s=e(\"babel-runtime/core-js/symbol/iterator\")[\"default\"],a=e(\"babel-runtime/core-js/object/create\")[\"default\"],o=e(\"babel-runtime/core-js/promise\")[\"default\"];!function(e){function n(e,t,r,n){var i=a((t||u).prototype);return i._invoke=m(e,r||null,new v(n||[])),i}function l(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(n){return{type:\"throw\",arg:n}}}function u(){}function c(){}function h(){}function f(e){[\"next\",\"throw\",\"return\"].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function d(e){this.arg=e}function p(e){function t(t,r){var n=e[t](r),i=n.value;return i instanceof d?o.resolve(i.arg).then(s,a):o.resolve(i).then(function(e){return n.value=e,n})}function n(e,r){var n=i?i.then(function(){return t(e,r)}):new o(function(n){n(t(e,r))});return i=n[\"catch\"](function(e){}),n}\"object\"==typeof r&&r.domain&&(t=r.domain.bind(t));var i,s=t.bind(e,\"next\"),a=t.bind(e,\"throw\");t.bind(e,\"return\");this._invoke=n}function m(e,t,r){var n=E;return function(i,s){if(n===O)throw new Error(\"Generator is already running\");if(n===S){if(\"throw\"===i)throw s;return $()}for(;;){var a=r.delegate;if(a){if(\"return\"===i||\"throw\"===i&&a.iterator[i]===x){r.delegate=null;var o=a.iterator[\"return\"];if(o){var u=l(o,a.iterator,s);if(\"throw\"===u.type){i=\"throw\",s=u.arg;continue}}if(\"return\"===i)continue}var u=l(a.iterator[i],a.iterator,s);if(\"throw\"===u.type){r.delegate=null,i=\"throw\",s=u.arg;continue}i=\"next\",s=x;var c=u.arg;if(!c.done)return n=P,c;r[a.resultName]=c.value,r.next=a.nextLoc,r.delegate=null}if(\"next\"===i)n===P?r.sent=s:r.sent=x;else if(\"throw\"===i){if(n===E)throw n=S,s;r.dispatchException(s)&&(i=\"next\",s=x)}else\"return\"===i&&r.abrupt(\"return\",s);n=O;var u=l(e,t,r);if(\"normal\"===u.type){n=r.done?S:P;var c={value:u.arg,done:r.done};if(u.arg!==C)return c;r.delegate&&\"next\"===i&&(s=x)}else\"throw\"===u.type&&(n=S,i=\"throw\",s=u.arg)}}}function b(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function g(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function v(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(b,this),this.reset(!0)}function y(e){if(e){var t=e[w];if(t)return t.call(e);if(\"function\"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,n=function i(){for(;++r<e.length;)if(_.call(e,r))return i.value=e[r],i.done=!1,i;return i.value=x,i.done=!0,i};return n.next=n}}return{next:$}}function $(){return{value:x,done:!0}}var x,_=Object.prototype.hasOwnProperty,w=\"function\"==typeof i&&s||\"@@iterator\",k=\"object\"==typeof t,j=e.regeneratorRuntime;if(j)return void(k&&(t.exports=j));j=e.regeneratorRuntime=k?t.exports:{},j.wrap=n;var E=\"suspendedStart\",P=\"suspendedYield\",O=\"executing\",S=\"completed\",C={},L=h.prototype=u.prototype;c.prototype=L.constructor=h,h.constructor=c,c.displayName=\"GeneratorFunction\",j.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return t?t===c||\"GeneratorFunction\"===(t.displayName||t.name):!1},j.mark=function(e){return e.__proto__=h,e.prototype=a(L),e},j.awrap=function(e){return new d(e)},f(p.prototype),j.async=function(e,t,r,i){var s=new p(n(e,t,r,i));return j.isGeneratorFunction(t)?s:s.next().then(function(e){return e.done?e.value:s.next()})},f(L),L[w]=function(){return this},L.toString=function(){return\"[object Generator]\"},j.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},j.values=y,v.prototype={constructor:v,reset:function(e){if(this.prev=0,this.next=0,this.sent=x,this.done=!1,this.delegate=null,this.tryEntries.forEach(g),!e)for(var t in this)\"t\"===t.charAt(0)&&_.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=x)},stop:function(){this.done=!0;var e=this.tryEntries[0],t=e.completion;if(\"throw\"===t.type)throw t.arg;return this.rval},dispatchException:function(e){function t(t,n){return s.type=\"throw\",s.arg=e,r.next=t,!!n}if(this.done)throw e;for(var r=this,n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n],s=i.completion;if(\"root\"===i.tryLoc)return t(\"end\");if(i.tryLoc<=this.prev){var a=_.call(i,\"catchLoc\"),o=_.call(i,\"finallyLoc\");if(a&&o){if(this.prev<i.catchLoc)return t(i.catchLoc,!0);if(this.prev<i.finallyLoc)return t(i.finallyLoc)}else if(a){if(this.prev<i.catchLoc)return t(i.catchLoc,!0)}else{if(!o)throw new Error(\"try statement without catch or finally\");if(this.prev<i.finallyLoc)return t(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&_.call(n,\"finallyLoc\")&&this.prev<n.finallyLoc){var i=n;break}}i&&(\"break\"===e||\"continue\"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var s=i?i.completion:{};return s.type=e,s.arg=t,i?this.next=i.finallyLoc:this.complete(s),C},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=e.arg,this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t)},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),g(r),C}},\"catch\":function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var i=n.arg;g(r)}return i}}throw new Error(\"illegal catch attempt\")},delegateYield:function(e,t,r){return this.delegate={iterator:y(e),resultName:t,nextLoc:r},C}}}(\"object\"==typeof n?n:\"object\"==typeof window?window:\"object\"==typeof self?self:void 0)}).call(this,e(\"_process\"),\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{_process:160,\"babel-runtime/core-js/object/create\":80,\"babel-runtime/core-js/promise\":85,\"babel-runtime/core-js/symbol\":87,\"babel-runtime/core-js/symbol/iterator\":88}],158:[function(e,t,r){t.exports={name:\"waves-basic-controllers\",version:\"0.4.1\",description:\"basic-controllers for rapid prototyping\",main:\"waves-basic-controllers.js\",standalone:\"wavesBasicControllers\",scripts:{transpile:\"./bin/scripts --transpile\",prebundle:\"npm run hint && npm run transpile\",bundle:\"./bin/scripts --bundle\",postbundle:\"npm run uglify\",uglify:\"./bin/scripts --uglify\",watch:\"./bin/scripts --watch\",test:\"tac6\",pretest:\"npm run hint\",hint:\"jshint ./es6; true\",pretag:\"branch=$(git symbolic-ref -q HEAD); if [ $branch != 'refs/heads/master' ]; then echo '=> You must be in master branch to run this command'; exit 1; fi && npm run bundle && git commit -am 'rebundled'\",tag:\"npm version $1\",posttag:\"git push origin master && git push origin --tags\"},license:\"BSD-3\",repository:{type:\"git\",url:\"https://github.com/wavesjs/basic-controllers.git\"},jshintConfig:{esnext:!0,browser:!0,node:!0,devel:!0},dependencies:{\"babel-runtime\":\"^5.4.4\",\"waves-ui\":\"git://github.com/wavesjs/ui\"},devDependencies:{\"fs-extra\":\"^0.16.3\",jshint:\"^2.6.0\",\"node-watch\":\"^0.3.4\",\"uglify-js\":\"^2.4.16\"}}},{}],159:[function(e,t,r){function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function i(e){return\"function\"==typeof e}function s(e){return\"number\"==typeof e}function a(e){return\"object\"==typeof e&&null!==e}function o(e){return void 0===e}t.exports=n,n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(e){if(!s(e)||0>e||isNaN(e))throw TypeError(\"n must be a positive number\");return this._maxListeners=e,this},n.prototype.emit=function(e){var t,r,n,s,l,u;if(this._events||(this._events={}),\"error\"===e&&(!this._events.error||a(this._events.error)&&!this._events.error.length)){if(t=arguments[1],t instanceof Error)throw t;throw TypeError('Uncaught, unspecified \"error\" event.')}if(r=this._events[e],o(r))return!1;if(i(r))switch(arguments.length){case 1:r.call(this);break;case 2:r.call(this,arguments[1]);break;case 3:r.call(this,arguments[1],arguments[2]);break;default:for(n=arguments.length,s=new Array(n-1),l=1;n>l;l++)s[l-1]=arguments[l];r.apply(this,s)}else if(a(r)){for(n=arguments.length,s=new Array(n-1),l=1;n>l;l++)s[l-1]=arguments[l];for(u=r.slice(),n=u.length,l=0;n>l;l++)u[l].apply(this,s)}return!0},n.prototype.addListener=function(e,t){var r;if(!i(t))throw TypeError(\"listener must be a function\");if(this._events||(this._events={}),this._events.newListener&&this.emit(\"newListener\",e,i(t.listener)?t.listener:t),this._events[e]?a(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,a(this._events[e])&&!this._events[e].warned){var r;r=o(this._maxListeners)?n.defaultMaxListeners:this._maxListeners,r&&r>0&&this._events[e].length>r&&(this._events[e].warned=!0,console.error(\"(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.\",this._events[e].length),\"function\"==typeof console.trace&&console.trace())}return this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(e,t){function r(){this.removeListener(e,r),n||(n=!0,t.apply(this,arguments))}if(!i(t))throw TypeError(\"listener must be a function\");var n=!1;return r.listener=t,this.on(e,r),this},n.prototype.removeListener=function(e,t){var r,n,s,o;if(!i(t))throw TypeError(\"listener must be a function\");if(!this._events||!this._events[e])return this;if(r=this._events[e],s=r.length,n=-1,r===t||i(r.listener)&&r.listener===t)delete this._events[e],this._events.removeListener&&this.emit(\"removeListener\",e,t);else if(a(r)){for(o=s;o-->0;)if(r[o]===t||r[o].listener&&r[o].listener===t){n=o;break}if(0>n)return this;1===r.length?(r.length=0,delete this._events[e]):r.splice(n,1),this._events.removeListener&&this.emit(\"removeListener\",e,t)}return this},n.prototype.removeAllListeners=function(e){var t,r;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)\"removeListener\"!==t&&this.removeAllListeners(t);return this.removeAllListeners(\"removeListener\"),this._events={},this}if(r=this._events[e],i(r))this.removeListener(e,r);else for(;r.length;)this.removeListener(e,r[r.length-1]);return delete this._events[e],this},n.prototype.listeners=function(e){var t;return t=this._events&&this._events[e]?i(this._events[e])?[this._events[e]]:this._events[e].slice():[]},n.listenerCount=function(e,t){var r;return r=e._events&&e._events[t]?i(e._events[t])?1:e._events[t].length:0}},{}],160:[function(e,t,r){function n(){c=!1,o.length?u=o.concat(u):h=-1,u.length&&i()}function i(){if(!c){var e=setTimeout(n);c=!0;for(var t=u.length;t;){for(o=u,u=[];++h<t;)o[h].run();h=-1,t=u.length}o=null,c=!1,clearTimeout(e)}}function s(e,t){this.fun=e,this.array=t}function a(){}var o,l=t.exports={},u=[],c=!1,h=-1;l.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];u.push(new s(e,t)),c||setTimeout(i,0)},s.prototype.run=function(){this.fun.apply(null,this.array)},l.title=\"browser\",l.browser=!0,l.env={},l.argv=[],l.version=\"\",l.versions={},l.on=a,l.addListener=a,l.once=a,l.off=a,l.removeListener=a,l.removeAllListeners=a,l.emit=a,l.binding=function(e){throw new Error(\"process.binding is not supported\")},l.cwd=function(){return\"/\"},l.chdir=function(e){throw new Error(\"process.chdir is not supported\")},l.umask=function(){return 0}},{}]},{},[1])(1)});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(221)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(121), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvZ2V0LWl0ZXJhdG9yLmpzPzFiMDgiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL2dldC1pdGVyYXRvclwiKSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvZ2V0LWl0ZXJhdG9yLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(122), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2NyZWF0ZS5qcz9hYTRiIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvY3JlYXRlXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvY3JlYXRlLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(123), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eS5qcz81ZjcwIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZGVmaW5lLXByb3BlcnR5XCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5LmpzXG4vLyBtb2R1bGUgaWQgPSAxMTVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(124), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcz8zMjIzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0geyBcImRlZmF1bHRcIjogcmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(126), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L3NldC1wcm90b3R5cGUtb2YuanM/YmIwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2ZcIiksIF9fZXNNb2R1bGU6IHRydWUgfTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(128), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvc3ltYm9sLmpzP2E3MGQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbFwiKSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvc3ltYm9sLmpzXG4vLyBtb2R1bGUgaWQgPSAxMThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(129), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvc3ltYm9sL2l0ZXJhdG9yLmpzP2QxNmIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL3N5bWJvbC9pdGVyYXRvclwiKSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvc3ltYm9sL2l0ZXJhdG9yLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(130), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvd2Vhay1tYXAuanM/MWVhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vd2Vhay1tYXBcIiksIF9fZXNNb2R1bGU6IHRydWUgfTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL3dlYWstbWFwLmpzXG4vLyBtb2R1bGUgaWQgPSAxMjBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(39);\n__webpack_require__(65);\nmodule.exports = __webpack_require__(153);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vZ2V0LWl0ZXJhdG9yLmpzPzJjZjciXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi4vbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3InKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vbW9kdWxlcy9jb3JlLmdldC1pdGVyYXRvcicpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vZ2V0LWl0ZXJhdG9yLmpzXG4vLyBtb2R1bGUgaWQgPSAxMjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(155);\nvar $Object = __webpack_require__(0).Object;\nmodule.exports = function create(P, D){\n  return $Object.create(P, D);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZS5qcz83MzhjIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUnKTtcbnZhciAkT2JqZWN0ID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdDtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3JlYXRlKFAsIEQpe1xuICByZXR1cm4gJE9iamVjdC5jcmVhdGUoUCwgRCk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZS5qc1xuLy8gbW9kdWxlIGlkID0gMTIyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(156);\nvar $Object = __webpack_require__(0).Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eS5qcz9iN2Q4Il0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHknKTtcbnZhciAkT2JqZWN0ID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdDtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoaXQsIGtleSwgZGVzYyl7XG4gIHJldHVybiAkT2JqZWN0LmRlZmluZVByb3BlcnR5KGl0LCBrZXksIGRlc2MpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkuanNcbi8vIG1vZHVsZSBpZCA9IDEyM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(157);\nvar $Object = __webpack_require__(0).Object;\nmodule.exports = function getOwnPropertyDescriptor(it, key){\n  return $Object.getOwnPropertyDescriptor(it, key);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcz83NTA0Il0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnZhciAkT2JqZWN0ID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLk9iamVjdDtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpe1xuICByZXR1cm4gJE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qc1xuLy8gbW9kdWxlIGlkID0gMTI0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(158);\nmodule.exports = __webpack_require__(0).Object.getPrototypeOf;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1wcm90b3R5cGUtb2YuanM/NTE5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZicpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1wcm90b3R5cGUtb2YuanNcbi8vIG1vZHVsZSBpZCA9IDEyNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(159);\nmodule.exports = __webpack_require__(0).Object.setPrototypeOf;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2YuanM/ZjkwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZicpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LnNldFByb3RvdHlwZU9mO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2YuanNcbi8vIG1vZHVsZSBpZCA9IDEyNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(64);\n__webpack_require__(65);\n__webpack_require__(39);\n__webpack_require__(160);\n__webpack_require__(163);\nmodule.exports = __webpack_require__(0).Set;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vc2V0LmpzPzJjNmMiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnNldCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczcuc2V0LnRvLWpzb24nKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vbW9kdWxlcy9fY29yZScpLlNldDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L2ZuL3NldC5qc1xuLy8gbW9kdWxlIGlkID0gMTI3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(161);\n__webpack_require__(64);\n__webpack_require__(164);\n__webpack_require__(165);\nmodule.exports = __webpack_require__(0).Symbol;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sL2luZGV4LmpzP2YwN2EiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYuc3ltYm9sJyk7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LnN5bWJvbC5vYnNlcnZhYmxlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5TeW1ib2w7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDEyOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(65);\n__webpack_require__(39);\nmodule.exports = __webpack_require__(63).f('iterator');//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vc3ltYm9sL2l0ZXJhdG9yLmpzPzIzOGQiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yJyk7XG5yZXF1aXJlKCcuLi8uLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fd2tzLWV4dCcpLmYoJ2l0ZXJhdG9yJyk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9mbi9zeW1ib2wvaXRlcmF0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDEyOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(64);\n__webpack_require__(39);\n__webpack_require__(162);\nmodule.exports = __webpack_require__(0).WeakMap;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vd2Vhay1tYXAuanM/ZDAyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LndlYWstbWFwJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL21vZHVsZXMvX2NvcmUnKS5XZWFrTWFwO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvZm4vd2Vhay1tYXAuanNcbi8vIG1vZHVsZSBpZCA9IDEzMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 131 */
/***/ (function(module, exports) {

eval("module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYS1mdW5jdGlvbi5qcz9kNTNlIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICBpZih0eXBlb2YgaXQgIT0gJ2Z1bmN0aW9uJyl0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhIGZ1bmN0aW9uIScpO1xuICByZXR1cm4gaXQ7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYS1mdW5jdGlvbi5qc1xuLy8gbW9kdWxlIGlkID0gMTMxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 132 */
/***/ (function(module, exports) {

eval("module.exports = function(){ /* empty */ };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYWRkLXRvLXVuc2NvcGFibGVzLmpzP2Q1ZTgiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpeyAvKiBlbXB0eSAqLyB9O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYWRkLXRvLXVuc2NvcGFibGVzLmpzXG4vLyBtb2R1bGUgaWQgPSAxMzJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

eval("var forOf = __webpack_require__(32);\n\nmodule.exports = function(iter, ITERATOR){\n  var result = [];\n  forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYXJyYXktZnJvbS1pdGVyYWJsZS5qcz9lYzBlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0ZXIsIElURVJBVE9SKXtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBmb3JPZihpdGVyLCBmYWxzZSwgcmVzdWx0LnB1c2gsIHJlc3VsdCwgSVRFUkFUT1IpO1xuICByZXR1cm4gcmVzdWx0O1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYXJyYXktZnJvbS1pdGVyYWJsZS5qc1xuLy8gbW9kdWxlIGlkID0gMTMzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

eval("// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(17)\n  , toLength  = __webpack_require__(60)\n  , toIndex   = __webpack_require__(152);\nmodule.exports = function(IS_INCLUDES){\n  return function($this, el, fromIndex){\n    var O      = toIObject($this)\n      , length = toLength(O.length)\n      , index  = toIndex(fromIndex, length)\n      , value;\n    // Array#includes uses SameValueZero equality algorithm\n    if(IS_INCLUDES && el != el)while(length > index){\n      value = O[index++];\n      if(value != value)return true;\n    // Array#toIndex ignores holes, Array#includes - not\n    } else for(;length > index; index++)if(IS_INCLUDES || index in O){\n      if(O[index] === el)return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYXJyYXktaW5jbHVkZXMuanM/NjE5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmYWxzZSAtPiBBcnJheSNpbmRleE9mXG4vLyB0cnVlICAtPiBBcnJheSNpbmNsdWRlc1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKVxuICAsIHRvTGVuZ3RoICA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpXG4gICwgdG9JbmRleCAgID0gcmVxdWlyZSgnLi9fdG8taW5kZXgnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oSVNfSU5DTFVERVMpe1xuICByZXR1cm4gZnVuY3Rpb24oJHRoaXMsIGVsLCBmcm9tSW5kZXgpe1xuICAgIHZhciBPICAgICAgPSB0b0lPYmplY3QoJHRoaXMpXG4gICAgICAsIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKVxuICAgICAgLCBpbmRleCAgPSB0b0luZGV4KGZyb21JbmRleCwgbGVuZ3RoKVxuICAgICAgLCB2YWx1ZTtcbiAgICAvLyBBcnJheSNpbmNsdWRlcyB1c2VzIFNhbWVWYWx1ZVplcm8gZXF1YWxpdHkgYWxnb3JpdGhtXG4gICAgaWYoSVNfSU5DTFVERVMgJiYgZWwgIT0gZWwpd2hpbGUobGVuZ3RoID4gaW5kZXgpe1xuICAgICAgdmFsdWUgPSBPW2luZGV4KytdO1xuICAgICAgaWYodmFsdWUgIT0gdmFsdWUpcmV0dXJuIHRydWU7XG4gICAgLy8gQXJyYXkjdG9JbmRleCBpZ25vcmVzIGhvbGVzLCBBcnJheSNpbmNsdWRlcyAtIG5vdFxuICAgIH0gZWxzZSBmb3IoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKWlmKElTX0lOQ0xVREVTIHx8IGluZGV4IGluIE8pe1xuICAgICAgaWYoT1tpbmRleF0gPT09IGVsKXJldHVybiBJU19JTkNMVURFUyB8fCBpbmRleCB8fCAwO1xuICAgIH0gcmV0dXJuICFJU19JTkNMVURFUyAmJiAtMTtcbiAgfTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hcnJheS1pbmNsdWRlcy5qc1xuLy8gbW9kdWxlIGlkID0gMTM0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

eval("var isObject = __webpack_require__(13)\n  , isArray  = __webpack_require__(84)\n  , SPECIES  = __webpack_require__(3)('species');\n\nmodule.exports = function(original){\n  var C;\n  if(isArray(original)){\n    C = original.constructor;\n    // cross-realm fallback\n    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;\n    if(isObject(C)){\n      C = C[SPECIES];\n      if(C === null)C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYXJyYXktc3BlY2llcy1jb25zdHJ1Y3Rvci5qcz9kNmFhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpXG4gICwgaXNBcnJheSAgPSByZXF1aXJlKCcuL19pcy1hcnJheScpXG4gICwgU1BFQ0lFUyAgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9yaWdpbmFsKXtcbiAgdmFyIEM7XG4gIGlmKGlzQXJyYXkob3JpZ2luYWwpKXtcbiAgICBDID0gb3JpZ2luYWwuY29uc3RydWN0b3I7XG4gICAgLy8gY3Jvc3MtcmVhbG0gZmFsbGJhY2tcbiAgICBpZih0eXBlb2YgQyA9PSAnZnVuY3Rpb24nICYmIChDID09PSBBcnJheSB8fCBpc0FycmF5KEMucHJvdG90eXBlKSkpQyA9IHVuZGVmaW5lZDtcbiAgICBpZihpc09iamVjdChDKSl7XG4gICAgICBDID0gQ1tTUEVDSUVTXTtcbiAgICAgIGlmKEMgPT09IG51bGwpQyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH0gcmV0dXJuIEMgPT09IHVuZGVmaW5lZCA/IEFycmF5IDogQztcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hcnJheS1zcGVjaWVzLWNvbnN0cnVjdG9yLmpzXG4vLyBtb2R1bGUgaWQgPSAxMzVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = __webpack_require__(135);\n\nmodule.exports = function(original, length){\n  return new (speciesConstructor(original))(length);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYXJyYXktc3BlY2llcy1jcmVhdGUuanM/NTExNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA5LjQuMi4zIEFycmF5U3BlY2llc0NyZWF0ZShvcmlnaW5hbEFycmF5LCBsZW5ndGgpXG52YXIgc3BlY2llc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi9fYXJyYXktc3BlY2llcy1jb25zdHJ1Y3RvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9yaWdpbmFsLCBsZW5ndGgpe1xuICByZXR1cm4gbmV3IChzcGVjaWVzQ29uc3RydWN0b3Iob3JpZ2luYWwpKShsZW5ndGgpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2FycmF5LXNwZWNpZXMtY3JlYXRlLmpzXG4vLyBtb2R1bGUgaWQgPSAxMzZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar dP          = __webpack_require__(7).f\n  , create      = __webpack_require__(33)\n  , redefineAll = __webpack_require__(55)\n  , ctx         = __webpack_require__(23)\n  , anInstance  = __webpack_require__(46)\n  , defined     = __webpack_require__(31)\n  , forOf       = __webpack_require__(32)\n  , $iterDefine = __webpack_require__(51)\n  , step        = __webpack_require__(85)\n  , setSpecies  = __webpack_require__(150)\n  , DESCRIPTORS = __webpack_require__(5)\n  , fastKey     = __webpack_require__(25).fastKey\n  , SIZE        = DESCRIPTORS ? '_s' : 'size';\n\nvar getEntry = function(that, key){\n  // fast case\n  var index = fastKey(key), entry;\n  if(index !== 'F')return that._i[index];\n  // frozen object case\n  for(entry = that._f; entry; entry = entry.n){\n    if(entry.k == key)return entry;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      anInstance(that, C, NAME, '_i');\n      that._i = create(null); // index\n      that._f = undefined;    // first entry\n      that._l = undefined;    // last entry\n      that[SIZE] = 0;         // size\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear(){\n        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){\n          entry.r = true;\n          if(entry.p)entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function(key){\n        var that  = this\n          , entry = getEntry(that, key);\n        if(entry){\n          var next = entry.n\n            , prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if(prev)prev.n = next;\n          if(next)next.p = prev;\n          if(that._f == entry)that._f = next;\n          if(that._l == entry)that._l = prev;\n          that[SIZE]--;\n        } return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /*, that = undefined */){\n        anInstance(this, C, 'forEach');\n        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)\n          , entry;\n        while(entry = entry ? entry.n : this._f){\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while(entry && entry.r)entry = entry.p;\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key){\n        return !!getEntry(this, key);\n      }\n    });\n    if(DESCRIPTORS)dP(C.prototype, 'size', {\n      get: function(){\n        return defined(this[SIZE]);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var entry = getEntry(that, key)\n      , prev, index;\n    // change existing entry\n    if(entry){\n      entry.v = value;\n    // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key,                        // <- key\n        v: value,                      // <- value\n        p: prev = that._l,             // <- previous entry\n        n: undefined,                  // <- next entry\n        r: false                       // <- removed\n      };\n      if(!that._f)that._f = entry;\n      if(prev)prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if(index !== 'F')that._i[index] = entry;\n    } return that;\n  },\n  getEntry: getEntry,\n  setStrong: function(C, NAME, IS_MAP){\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    $iterDefine(C, NAME, function(iterated, kind){\n      this._t = iterated;  // target\n      this._k = kind;      // kind\n      this._l = undefined; // previous\n    }, function(){\n      var that  = this\n        , kind  = that._k\n        , entry = that._l;\n      // revert to the last existing entry\n      while(entry && entry.r)entry = entry.p;\n      // get next entry\n      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){\n        // or finish the iteration\n        that._t = undefined;\n        return step(1);\n      }\n      // return step by kind\n      if(kind == 'keys'  )return step(0, entry.k);\n      if(kind == 'values')return step(0, entry.v);\n      return step(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    setSpecies(NAME);\n  }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY29sbGVjdGlvbi1zdHJvbmcuanM/MWEzNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgZFAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mXG4gICwgY3JlYXRlICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJylcbiAgLCByZWRlZmluZUFsbCA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpXG4gICwgY3R4ICAgICAgICAgPSByZXF1aXJlKCcuL19jdHgnKVxuICAsIGFuSW5zdGFuY2UgID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKVxuICAsIGRlZmluZWQgICAgID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpXG4gICwgZm9yT2YgICAgICAgPSByZXF1aXJlKCcuL19mb3Itb2YnKVxuICAsICRpdGVyRGVmaW5lID0gcmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKVxuICAsIHN0ZXAgICAgICAgID0gcmVxdWlyZSgnLi9faXRlci1zdGVwJylcbiAgLCBzZXRTcGVjaWVzICA9IHJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJylcbiAgLCBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJylcbiAgLCBmYXN0S2V5ICAgICA9IHJlcXVpcmUoJy4vX21ldGEnKS5mYXN0S2V5XG4gICwgU0laRSAgICAgICAgPSBERVNDUklQVE9SUyA/ICdfcycgOiAnc2l6ZSc7XG5cbnZhciBnZXRFbnRyeSA9IGZ1bmN0aW9uKHRoYXQsIGtleSl7XG4gIC8vIGZhc3QgY2FzZVxuICB2YXIgaW5kZXggPSBmYXN0S2V5KGtleSksIGVudHJ5O1xuICBpZihpbmRleCAhPT0gJ0YnKXJldHVybiB0aGF0Ll9pW2luZGV4XTtcbiAgLy8gZnJvemVuIG9iamVjdCBjYXNlXG4gIGZvcihlbnRyeSA9IHRoYXQuX2Y7IGVudHJ5OyBlbnRyeSA9IGVudHJ5Lm4pe1xuICAgIGlmKGVudHJ5LmsgPT0ga2V5KXJldHVybiBlbnRyeTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldENvbnN0cnVjdG9yOiBmdW5jdGlvbih3cmFwcGVyLCBOQU1FLCBJU19NQVAsIEFEREVSKXtcbiAgICB2YXIgQyA9IHdyYXBwZXIoZnVuY3Rpb24odGhhdCwgaXRlcmFibGUpe1xuICAgICAgYW5JbnN0YW5jZSh0aGF0LCBDLCBOQU1FLCAnX2knKTtcbiAgICAgIHRoYXQuX2kgPSBjcmVhdGUobnVsbCk7IC8vIGluZGV4XG4gICAgICB0aGF0Ll9mID0gdW5kZWZpbmVkOyAgICAvLyBmaXJzdCBlbnRyeVxuICAgICAgdGhhdC5fbCA9IHVuZGVmaW5lZDsgICAgLy8gbGFzdCBlbnRyeVxuICAgICAgdGhhdFtTSVpFXSA9IDA7ICAgICAgICAgLy8gc2l6ZVxuICAgICAgaWYoaXRlcmFibGUgIT0gdW5kZWZpbmVkKWZvck9mKGl0ZXJhYmxlLCBJU19NQVAsIHRoYXRbQURERVJdLCB0aGF0KTtcbiAgICB9KTtcbiAgICByZWRlZmluZUFsbChDLnByb3RvdHlwZSwge1xuICAgICAgLy8gMjMuMS4zLjEgTWFwLnByb3RvdHlwZS5jbGVhcigpXG4gICAgICAvLyAyMy4yLjMuMiBTZXQucHJvdG90eXBlLmNsZWFyKClcbiAgICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcigpe1xuICAgICAgICBmb3IodmFyIHRoYXQgPSB0aGlzLCBkYXRhID0gdGhhdC5faSwgZW50cnkgPSB0aGF0Ll9mOyBlbnRyeTsgZW50cnkgPSBlbnRyeS5uKXtcbiAgICAgICAgICBlbnRyeS5yID0gdHJ1ZTtcbiAgICAgICAgICBpZihlbnRyeS5wKWVudHJ5LnAgPSBlbnRyeS5wLm4gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgZGVsZXRlIGRhdGFbZW50cnkuaV07XG4gICAgICAgIH1cbiAgICAgICAgdGhhdC5fZiA9IHRoYXQuX2wgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoYXRbU0laRV0gPSAwO1xuICAgICAgfSxcbiAgICAgIC8vIDIzLjEuMy4zIE1hcC5wcm90b3R5cGUuZGVsZXRlKGtleSlcbiAgICAgIC8vIDIzLjIuMy40IFNldC5wcm90b3R5cGUuZGVsZXRlKHZhbHVlKVxuICAgICAgJ2RlbGV0ZSc6IGZ1bmN0aW9uKGtleSl7XG4gICAgICAgIHZhciB0aGF0ICA9IHRoaXNcbiAgICAgICAgICAsIGVudHJ5ID0gZ2V0RW50cnkodGhhdCwga2V5KTtcbiAgICAgICAgaWYoZW50cnkpe1xuICAgICAgICAgIHZhciBuZXh0ID0gZW50cnkublxuICAgICAgICAgICAgLCBwcmV2ID0gZW50cnkucDtcbiAgICAgICAgICBkZWxldGUgdGhhdC5faVtlbnRyeS5pXTtcbiAgICAgICAgICBlbnRyeS5yID0gdHJ1ZTtcbiAgICAgICAgICBpZihwcmV2KXByZXYubiA9IG5leHQ7XG4gICAgICAgICAgaWYobmV4dCluZXh0LnAgPSBwcmV2O1xuICAgICAgICAgIGlmKHRoYXQuX2YgPT0gZW50cnkpdGhhdC5fZiA9IG5leHQ7XG4gICAgICAgICAgaWYodGhhdC5fbCA9PSBlbnRyeSl0aGF0Ll9sID0gcHJldjtcbiAgICAgICAgICB0aGF0W1NJWkVdLS07XG4gICAgICAgIH0gcmV0dXJuICEhZW50cnk7XG4gICAgICB9LFxuICAgICAgLy8gMjMuMi4zLjYgU2V0LnByb3RvdHlwZS5mb3JFYWNoKGNhbGxiYWNrZm4sIHRoaXNBcmcgPSB1bmRlZmluZWQpXG4gICAgICAvLyAyMy4xLjMuNSBNYXAucHJvdG90eXBlLmZvckVhY2goY2FsbGJhY2tmbiwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbiAgICAgIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goY2FsbGJhY2tmbiAvKiwgdGhhdCA9IHVuZGVmaW5lZCAqLyl7XG4gICAgICAgIGFuSW5zdGFuY2UodGhpcywgQywgJ2ZvckVhY2gnKTtcbiAgICAgICAgdmFyIGYgPSBjdHgoY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIDMpXG4gICAgICAgICAgLCBlbnRyeTtcbiAgICAgICAgd2hpbGUoZW50cnkgPSBlbnRyeSA/IGVudHJ5Lm4gOiB0aGlzLl9mKXtcbiAgICAgICAgICBmKGVudHJ5LnYsIGVudHJ5LmssIHRoaXMpO1xuICAgICAgICAgIC8vIHJldmVydCB0byB0aGUgbGFzdCBleGlzdGluZyBlbnRyeVxuICAgICAgICAgIHdoaWxlKGVudHJ5ICYmIGVudHJ5LnIpZW50cnkgPSBlbnRyeS5wO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLy8gMjMuMS4zLjcgTWFwLnByb3RvdHlwZS5oYXMoa2V5KVxuICAgICAgLy8gMjMuMi4zLjcgU2V0LnByb3RvdHlwZS5oYXModmFsdWUpXG4gICAgICBoYXM6IGZ1bmN0aW9uIGhhcyhrZXkpe1xuICAgICAgICByZXR1cm4gISFnZXRFbnRyeSh0aGlzLCBrZXkpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGlmKERFU0NSSVBUT1JTKWRQKEMucHJvdG90eXBlLCAnc2l6ZScsIHtcbiAgICAgIGdldDogZnVuY3Rpb24oKXtcbiAgICAgICAgcmV0dXJuIGRlZmluZWQodGhpc1tTSVpFXSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIEM7XG4gIH0sXG4gIGRlZjogZnVuY3Rpb24odGhhdCwga2V5LCB2YWx1ZSl7XG4gICAgdmFyIGVudHJ5ID0gZ2V0RW50cnkodGhhdCwga2V5KVxuICAgICAgLCBwcmV2LCBpbmRleDtcbiAgICAvLyBjaGFuZ2UgZXhpc3RpbmcgZW50cnlcbiAgICBpZihlbnRyeSl7XG4gICAgICBlbnRyeS52ID0gdmFsdWU7XG4gICAgLy8gY3JlYXRlIG5ldyBlbnRyeVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGF0Ll9sID0gZW50cnkgPSB7XG4gICAgICAgIGk6IGluZGV4ID0gZmFzdEtleShrZXksIHRydWUpLCAvLyA8LSBpbmRleFxuICAgICAgICBrOiBrZXksICAgICAgICAgICAgICAgICAgICAgICAgLy8gPC0ga2V5XG4gICAgICAgIHY6IHZhbHVlLCAgICAgICAgICAgICAgICAgICAgICAvLyA8LSB2YWx1ZVxuICAgICAgICBwOiBwcmV2ID0gdGhhdC5fbCwgICAgICAgICAgICAgLy8gPC0gcHJldmlvdXMgZW50cnlcbiAgICAgICAgbjogdW5kZWZpbmVkLCAgICAgICAgICAgICAgICAgIC8vIDwtIG5leHQgZW50cnlcbiAgICAgICAgcjogZmFsc2UgICAgICAgICAgICAgICAgICAgICAgIC8vIDwtIHJlbW92ZWRcbiAgICAgIH07XG4gICAgICBpZighdGhhdC5fZil0aGF0Ll9mID0gZW50cnk7XG4gICAgICBpZihwcmV2KXByZXYubiA9IGVudHJ5O1xuICAgICAgdGhhdFtTSVpFXSsrO1xuICAgICAgLy8gYWRkIHRvIGluZGV4XG4gICAgICBpZihpbmRleCAhPT0gJ0YnKXRoYXQuX2lbaW5kZXhdID0gZW50cnk7XG4gICAgfSByZXR1cm4gdGhhdDtcbiAgfSxcbiAgZ2V0RW50cnk6IGdldEVudHJ5LFxuICBzZXRTdHJvbmc6IGZ1bmN0aW9uKEMsIE5BTUUsIElTX01BUCl7XG4gICAgLy8gYWRkIC5rZXlzLCAudmFsdWVzLCAuZW50cmllcywgW0BAaXRlcmF0b3JdXG4gICAgLy8gMjMuMS4zLjQsIDIzLjEuMy44LCAyMy4xLjMuMTEsIDIzLjEuMy4xMiwgMjMuMi4zLjUsIDIzLjIuMy44LCAyMy4yLjMuMTAsIDIzLjIuMy4xMVxuICAgICRpdGVyRGVmaW5lKEMsIE5BTUUsIGZ1bmN0aW9uKGl0ZXJhdGVkLCBraW5kKXtcbiAgICAgIHRoaXMuX3QgPSBpdGVyYXRlZDsgIC8vIHRhcmdldFxuICAgICAgdGhpcy5fayA9IGtpbmQ7ICAgICAgLy8ga2luZFxuICAgICAgdGhpcy5fbCA9IHVuZGVmaW5lZDsgLy8gcHJldmlvdXNcbiAgICB9LCBmdW5jdGlvbigpe1xuICAgICAgdmFyIHRoYXQgID0gdGhpc1xuICAgICAgICAsIGtpbmQgID0gdGhhdC5fa1xuICAgICAgICAsIGVudHJ5ID0gdGhhdC5fbDtcbiAgICAgIC8vIHJldmVydCB0byB0aGUgbGFzdCBleGlzdGluZyBlbnRyeVxuICAgICAgd2hpbGUoZW50cnkgJiYgZW50cnkucillbnRyeSA9IGVudHJ5LnA7XG4gICAgICAvLyBnZXQgbmV4dCBlbnRyeVxuICAgICAgaWYoIXRoYXQuX3QgfHwgISh0aGF0Ll9sID0gZW50cnkgPSBlbnRyeSA/IGVudHJ5Lm4gOiB0aGF0Ll90Ll9mKSl7XG4gICAgICAgIC8vIG9yIGZpbmlzaCB0aGUgaXRlcmF0aW9uXG4gICAgICAgIHRoYXQuX3QgPSB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybiBzdGVwKDEpO1xuICAgICAgfVxuICAgICAgLy8gcmV0dXJuIHN0ZXAgYnkga2luZFxuICAgICAgaWYoa2luZCA9PSAna2V5cycgIClyZXR1cm4gc3RlcCgwLCBlbnRyeS5rKTtcbiAgICAgIGlmKGtpbmQgPT0gJ3ZhbHVlcycpcmV0dXJuIHN0ZXAoMCwgZW50cnkudik7XG4gICAgICByZXR1cm4gc3RlcCgwLCBbZW50cnkuaywgZW50cnkudl0pO1xuICAgIH0sIElTX01BUCA/ICdlbnRyaWVzJyA6ICd2YWx1ZXMnICwgIUlTX01BUCwgdHJ1ZSk7XG5cbiAgICAvLyBhZGQgW0BAc3BlY2llc10sIDIzLjEuMi4yLCAyMy4yLjIuMlxuICAgIHNldFNwZWNpZXMoTkFNRSk7XG4gIH1cbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb2xsZWN0aW9uLXN0cm9uZy5qc1xuLy8gbW9kdWxlIGlkID0gMTM3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

eval("// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar classof = __webpack_require__(80)\n  , from    = __webpack_require__(133);\nmodule.exports = function(NAME){\n  return function toJSON(){\n    if(classof(this) != NAME)throw TypeError(NAME + \"#toJSON isn't generic\");\n    return from(this);\n  };\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY29sbGVjdGlvbi10by1qc29uLmpzPzk0YTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaHR0cHM6Ly9naXRodWIuY29tL0RhdmlkQnJ1YW50L01hcC1TZXQucHJvdG90eXBlLnRvSlNPTlxudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuL19jbGFzc29mJylcbiAgLCBmcm9tICAgID0gcmVxdWlyZSgnLi9fYXJyYXktZnJvbS1pdGVyYWJsZScpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihOQU1FKXtcbiAgcmV0dXJuIGZ1bmN0aW9uIHRvSlNPTigpe1xuICAgIGlmKGNsYXNzb2YodGhpcykgIT0gTkFNRSl0aHJvdyBUeXBlRXJyb3IoTkFNRSArIFwiI3RvSlNPTiBpc24ndCBnZW5lcmljXCIpO1xuICAgIHJldHVybiBmcm9tKHRoaXMpO1xuICB9O1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NvbGxlY3Rpb24tdG8tanNvbi5qc1xuLy8gbW9kdWxlIGlkID0gMTM4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar redefineAll       = __webpack_require__(55)\n  , getWeak           = __webpack_require__(25).getWeak\n  , anObject          = __webpack_require__(12)\n  , isObject          = __webpack_require__(13)\n  , anInstance        = __webpack_require__(46)\n  , forOf             = __webpack_require__(32)\n  , createArrayMethod = __webpack_require__(47)\n  , $has              = __webpack_require__(15)\n  , arrayFind         = createArrayMethod(5)\n  , arrayFindIndex    = createArrayMethod(6)\n  , id                = 0;\n\n// fallback for uncaught frozen keys\nvar uncaughtFrozenStore = function(that){\n  return that._l || (that._l = new UncaughtFrozenStore);\n};\nvar UncaughtFrozenStore = function(){\n  this.a = [];\n};\nvar findUncaughtFrozen = function(store, key){\n  return arrayFind(store.a, function(it){\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function(key){\n    var entry = findUncaughtFrozen(this, key);\n    if(entry)return entry[1];\n  },\n  has: function(key){\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function(key, value){\n    var entry = findUncaughtFrozen(this, key);\n    if(entry)entry[1] = value;\n    else this.a.push([key, value]);\n  },\n  'delete': function(key){\n    var index = arrayFindIndex(this.a, function(it){\n      return it[0] === key;\n    });\n    if(~index)this.a.splice(index, 1);\n    return !!~index;\n  }\n};\n\nmodule.exports = {\n  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){\n    var C = wrapper(function(that, iterable){\n      anInstance(that, C, NAME, '_i');\n      that._i = id++;      // collection id\n      that._l = undefined; // leak store for uncaught frozen objects\n      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      // 23.3.3.2 WeakMap.prototype.delete(key)\n      // 23.4.3.3 WeakSet.prototype.delete(value)\n      'delete': function(key){\n        if(!isObject(key))return false;\n        var data = getWeak(key);\n        if(data === true)return uncaughtFrozenStore(this)['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      // 23.3.3.4 WeakMap.prototype.has(key)\n      // 23.4.3.4 WeakSet.prototype.has(value)\n      has: function has(key){\n        if(!isObject(key))return false;\n        var data = getWeak(key);\n        if(data === true)return uncaughtFrozenStore(this).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function(that, key, value){\n    var data = getWeak(anObject(key), true);\n    if(data === true)uncaughtFrozenStore(that).set(key, value);\n    else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY29sbGVjdGlvbi13ZWFrLmpzPzhjMzAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIHJlZGVmaW5lQWxsICAgICAgID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJylcbiAgLCBnZXRXZWFrICAgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGEnKS5nZXRXZWFrXG4gICwgYW5PYmplY3QgICAgICAgICAgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKVxuICAsIGlzT2JqZWN0ICAgICAgICAgID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JylcbiAgLCBhbkluc3RhbmNlICAgICAgICA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJylcbiAgLCBmb3JPZiAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2Zvci1vZicpXG4gICwgY3JlYXRlQXJyYXlNZXRob2QgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJylcbiAgLCAkaGFzICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2hhcycpXG4gICwgYXJyYXlGaW5kICAgICAgICAgPSBjcmVhdGVBcnJheU1ldGhvZCg1KVxuICAsIGFycmF5RmluZEluZGV4ICAgID0gY3JlYXRlQXJyYXlNZXRob2QoNilcbiAgLCBpZCAgICAgICAgICAgICAgICA9IDA7XG5cbi8vIGZhbGxiYWNrIGZvciB1bmNhdWdodCBmcm96ZW4ga2V5c1xudmFyIHVuY2F1Z2h0RnJvemVuU3RvcmUgPSBmdW5jdGlvbih0aGF0KXtcbiAgcmV0dXJuIHRoYXQuX2wgfHwgKHRoYXQuX2wgPSBuZXcgVW5jYXVnaHRGcm96ZW5TdG9yZSk7XG59O1xudmFyIFVuY2F1Z2h0RnJvemVuU3RvcmUgPSBmdW5jdGlvbigpe1xuICB0aGlzLmEgPSBbXTtcbn07XG52YXIgZmluZFVuY2F1Z2h0RnJvemVuID0gZnVuY3Rpb24oc3RvcmUsIGtleSl7XG4gIHJldHVybiBhcnJheUZpbmQoc3RvcmUuYSwgZnVuY3Rpb24oaXQpe1xuICAgIHJldHVybiBpdFswXSA9PT0ga2V5O1xuICB9KTtcbn07XG5VbmNhdWdodEZyb3plblN0b3JlLnByb3RvdHlwZSA9IHtcbiAgZ2V0OiBmdW5jdGlvbihrZXkpe1xuICAgIHZhciBlbnRyeSA9IGZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICAgIGlmKGVudHJ5KXJldHVybiBlbnRyeVsxXTtcbiAgfSxcbiAgaGFzOiBmdW5jdGlvbihrZXkpe1xuICAgIHJldHVybiAhIWZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uKGtleSwgdmFsdWUpe1xuICAgIHZhciBlbnRyeSA9IGZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICAgIGlmKGVudHJ5KWVudHJ5WzFdID0gdmFsdWU7XG4gICAgZWxzZSB0aGlzLmEucHVzaChba2V5LCB2YWx1ZV0pO1xuICB9LFxuICAnZGVsZXRlJzogZnVuY3Rpb24oa2V5KXtcbiAgICB2YXIgaW5kZXggPSBhcnJheUZpbmRJbmRleCh0aGlzLmEsIGZ1bmN0aW9uKGl0KXtcbiAgICAgIHJldHVybiBpdFswXSA9PT0ga2V5O1xuICAgIH0pO1xuICAgIGlmKH5pbmRleCl0aGlzLmEuc3BsaWNlKGluZGV4LCAxKTtcbiAgICByZXR1cm4gISF+aW5kZXg7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRDb25zdHJ1Y3RvcjogZnVuY3Rpb24od3JhcHBlciwgTkFNRSwgSVNfTUFQLCBBRERFUil7XG4gICAgdmFyIEMgPSB3cmFwcGVyKGZ1bmN0aW9uKHRoYXQsIGl0ZXJhYmxlKXtcbiAgICAgIGFuSW5zdGFuY2UodGhhdCwgQywgTkFNRSwgJ19pJyk7XG4gICAgICB0aGF0Ll9pID0gaWQrKzsgICAgICAvLyBjb2xsZWN0aW9uIGlkXG4gICAgICB0aGF0Ll9sID0gdW5kZWZpbmVkOyAvLyBsZWFrIHN0b3JlIGZvciB1bmNhdWdodCBmcm96ZW4gb2JqZWN0c1xuICAgICAgaWYoaXRlcmFibGUgIT0gdW5kZWZpbmVkKWZvck9mKGl0ZXJhYmxlLCBJU19NQVAsIHRoYXRbQURERVJdLCB0aGF0KTtcbiAgICB9KTtcbiAgICByZWRlZmluZUFsbChDLnByb3RvdHlwZSwge1xuICAgICAgLy8gMjMuMy4zLjIgV2Vha01hcC5wcm90b3R5cGUuZGVsZXRlKGtleSlcbiAgICAgIC8vIDIzLjQuMy4zIFdlYWtTZXQucHJvdG90eXBlLmRlbGV0ZSh2YWx1ZSlcbiAgICAgICdkZWxldGUnOiBmdW5jdGlvbihrZXkpe1xuICAgICAgICBpZighaXNPYmplY3Qoa2V5KSlyZXR1cm4gZmFsc2U7XG4gICAgICAgIHZhciBkYXRhID0gZ2V0V2VhayhrZXkpO1xuICAgICAgICBpZihkYXRhID09PSB0cnVlKXJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHRoaXMpWydkZWxldGUnXShrZXkpO1xuICAgICAgICByZXR1cm4gZGF0YSAmJiAkaGFzKGRhdGEsIHRoaXMuX2kpICYmIGRlbGV0ZSBkYXRhW3RoaXMuX2ldO1xuICAgICAgfSxcbiAgICAgIC8vIDIzLjMuMy40IFdlYWtNYXAucHJvdG90eXBlLmhhcyhrZXkpXG4gICAgICAvLyAyMy40LjMuNCBXZWFrU2V0LnByb3RvdHlwZS5oYXModmFsdWUpXG4gICAgICBoYXM6IGZ1bmN0aW9uIGhhcyhrZXkpe1xuICAgICAgICBpZighaXNPYmplY3Qoa2V5KSlyZXR1cm4gZmFsc2U7XG4gICAgICAgIHZhciBkYXRhID0gZ2V0V2VhayhrZXkpO1xuICAgICAgICBpZihkYXRhID09PSB0cnVlKXJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHRoaXMpLmhhcyhrZXkpO1xuICAgICAgICByZXR1cm4gZGF0YSAmJiAkaGFzKGRhdGEsIHRoaXMuX2kpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBDO1xuICB9LFxuICBkZWY6IGZ1bmN0aW9uKHRoYXQsIGtleSwgdmFsdWUpe1xuICAgIHZhciBkYXRhID0gZ2V0V2Vhayhhbk9iamVjdChrZXkpLCB0cnVlKTtcbiAgICBpZihkYXRhID09PSB0cnVlKXVuY2F1Z2h0RnJvemVuU3RvcmUodGhhdCkuc2V0KGtleSwgdmFsdWUpO1xuICAgIGVsc2UgZGF0YVt0aGF0Ll9pXSA9IHZhbHVlO1xuICAgIHJldHVybiB0aGF0O1xuICB9LFxuICB1ZnN0b3JlOiB1bmNhdWdodEZyb3plblN0b3JlXG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY29sbGVjdGlvbi13ZWFrLmpzXG4vLyBtb2R1bGUgaWQgPSAxMzlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

eval("// all enumerable object keys, includes symbols\nvar getKeys = __webpack_require__(26)\n  , gOPS    = __webpack_require__(54)\n  , pIE     = __webpack_require__(34);\nmodule.exports = function(it){\n  var result     = getKeys(it)\n    , getSymbols = gOPS.f;\n  if(getSymbols){\n    var symbols = getSymbols(it)\n      , isEnum  = pIE.f\n      , i       = 0\n      , key;\n    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);\n  } return result;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZW51bS1rZXlzLmpzPzcyN2EiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gYWxsIGVudW1lcmFibGUgb2JqZWN0IGtleXMsIGluY2x1ZGVzIHN5bWJvbHNcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKVxuICAsIGdPUFMgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpXG4gICwgcElFICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXQpe1xuICB2YXIgcmVzdWx0ICAgICA9IGdldEtleXMoaXQpXG4gICAgLCBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICBpZihnZXRTeW1ib2xzKXtcbiAgICB2YXIgc3ltYm9scyA9IGdldFN5bWJvbHMoaXQpXG4gICAgICAsIGlzRW51bSAgPSBwSUUuZlxuICAgICAgLCBpICAgICAgID0gMFxuICAgICAgLCBrZXk7XG4gICAgd2hpbGUoc3ltYm9scy5sZW5ndGggPiBpKWlmKGlzRW51bS5jYWxsKGl0LCBrZXkgPSBzeW1ib2xzW2krK10pKXJlc3VsdC5wdXNoKGtleSk7XG4gIH0gcmV0dXJuIHJlc3VsdDtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19lbnVtLWtleXMuanNcbi8vIG1vZHVsZSBpZCA9IDE0MFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(6).document && document.documentElement;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faHRtbC5qcz9lNWFmIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faHRtbC5qc1xuLy8gbW9kdWxlIGlkID0gMTQxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

eval("// check on default Array iterator\nvar Iterators  = __webpack_require__(24)\n  , ITERATOR   = __webpack_require__(3)('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXMtYXJyYXktaXRlci5qcz9hNGIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGNoZWNrIG9uIGRlZmF1bHQgQXJyYXkgaXRlcmF0b3JcbnZhciBJdGVyYXRvcnMgID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJylcbiAgLCBJVEVSQVRPUiAgID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJylcbiAgLCBBcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIGl0ICE9PSB1bmRlZmluZWQgJiYgKEl0ZXJhdG9ycy5BcnJheSA9PT0gaXQgfHwgQXJyYXlQcm90b1tJVEVSQVRPUl0gPT09IGl0KTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pcy1hcnJheS1pdGVyLmpzXG4vLyBtb2R1bGUgaWQgPSAxNDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

eval("// call something on iterator step with safe closing on error\nvar anObject = __webpack_require__(12);\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1jYWxsLmpzPzUxODkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY2FsbCBzb21ldGhpbmcgb24gaXRlcmF0b3Igc3RlcCB3aXRoIHNhZmUgY2xvc2luZyBvbiBlcnJvclxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0ZXJhdG9yLCBmbiwgdmFsdWUsIGVudHJpZXMpe1xuICB0cnkge1xuICAgIHJldHVybiBlbnRyaWVzID8gZm4oYW5PYmplY3QodmFsdWUpWzBdLCB2YWx1ZVsxXSkgOiBmbih2YWx1ZSk7XG4gIC8vIDcuNC42IEl0ZXJhdG9yQ2xvc2UoaXRlcmF0b3IsIGNvbXBsZXRpb24pXG4gIH0gY2F0Y2goZSl7XG4gICAgdmFyIHJldCA9IGl0ZXJhdG9yWydyZXR1cm4nXTtcbiAgICBpZihyZXQgIT09IHVuZGVmaW5lZClhbk9iamVjdChyZXQuY2FsbChpdGVyYXRvcikpO1xuICAgIHRocm93IGU7XG4gIH1cbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLWNhbGwuanNcbi8vIG1vZHVsZSBpZCA9IDE0M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar create         = __webpack_require__(33)\n  , descriptor     = __webpack_require__(35)\n  , setToStringTag = __webpack_require__(36)\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(16)(IteratorPrototype, __webpack_require__(3)('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1jcmVhdGUuanM/MDEyNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgY3JlYXRlICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJylcbiAgLCBkZXNjcmlwdG9yICAgICA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKVxuICAsIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKVxuICAsIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG5cbi8vIDI1LjEuMi4xLjEgJUl0ZXJhdG9yUHJvdG90eXBlJVtAQGl0ZXJhdG9yXSgpXG5yZXF1aXJlKCcuL19oaWRlJykoSXRlcmF0b3JQcm90b3R5cGUsIHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpLCBmdW5jdGlvbigpeyByZXR1cm4gdGhpczsgfSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpe1xuICBDb25zdHJ1Y3Rvci5wcm90b3R5cGUgPSBjcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUsIHtuZXh0OiBkZXNjcmlwdG9yKDEsIG5leHQpfSk7XG4gIHNldFRvU3RyaW5nVGFnKENvbnN0cnVjdG9yLCBOQU1FICsgJyBJdGVyYXRvcicpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItY3JlYXRlLmpzXG4vLyBtb2R1bGUgaWQgPSAxNDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

eval("var getKeys   = __webpack_require__(26)\n  , toIObject = __webpack_require__(17);\nmodule.exports = function(object, el){\n  var O      = toIObject(object)\n    , keys   = getKeys(O)\n    , length = keys.length\n    , index  = 0\n    , key;\n  while(length > index)if(O[key = keys[index++]] === el)return key;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fa2V5b2YuanM/MGQzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0S2V5cyAgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKVxuICAsIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob2JqZWN0LCBlbCl7XG4gIHZhciBPICAgICAgPSB0b0lPYmplY3Qob2JqZWN0KVxuICAgICwga2V5cyAgID0gZ2V0S2V5cyhPKVxuICAgICwgbGVuZ3RoID0ga2V5cy5sZW5ndGhcbiAgICAsIGluZGV4ICA9IDBcbiAgICAsIGtleTtcbiAgd2hpbGUobGVuZ3RoID4gaW5kZXgpaWYoT1trZXkgPSBrZXlzW2luZGV4KytdXSA9PT0gZWwpcmV0dXJuIGtleTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19rZXlvZi5qc1xuLy8gbW9kdWxlIGlkID0gMTQ1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = __webpack_require__(26)\n  , gOPS     = __webpack_require__(54)\n  , pIE      = __webpack_require__(34)\n  , toObject = __webpack_require__(37)\n  , IObject  = __webpack_require__(50)\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || __webpack_require__(20)(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWFzc2lnbi5qcz81YzBjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIDE5LjEuMi4xIE9iamVjdC5hc3NpZ24odGFyZ2V0LCBzb3VyY2UsIC4uLilcbnZhciBnZXRLZXlzICA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJylcbiAgLCBnT1BTICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJylcbiAgLCBwSUUgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKVxuICAsIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0JylcbiAgLCBJT2JqZWN0ICA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKVxuICAsICRhc3NpZ24gID0gT2JqZWN0LmFzc2lnbjtcblxuLy8gc2hvdWxkIHdvcmsgd2l0aCBzeW1ib2xzIGFuZCBzaG91bGQgaGF2ZSBkZXRlcm1pbmlzdGljIHByb3BlcnR5IG9yZGVyIChWOCBidWcpXG5tb2R1bGUuZXhwb3J0cyA9ICEkYXNzaWduIHx8IHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24oKXtcbiAgdmFyIEEgPSB7fVxuICAgICwgQiA9IHt9XG4gICAgLCBTID0gU3ltYm9sKClcbiAgICAsIEsgPSAnYWJjZGVmZ2hpamtsbW5vcHFyc3QnO1xuICBBW1NdID0gNztcbiAgSy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbihrKXsgQltrXSA9IGs7IH0pO1xuICByZXR1cm4gJGFzc2lnbih7fSwgQSlbU10gIT0gNyB8fCBPYmplY3Qua2V5cygkYXNzaWduKHt9LCBCKSkuam9pbignJykgIT0gSztcbn0pID8gZnVuY3Rpb24gYXNzaWduKHRhcmdldCwgc291cmNlKXsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICB2YXIgVCAgICAgPSB0b09iamVjdCh0YXJnZXQpXG4gICAgLCBhTGVuICA9IGFyZ3VtZW50cy5sZW5ndGhcbiAgICAsIGluZGV4ID0gMVxuICAgICwgZ2V0U3ltYm9scyA9IGdPUFMuZlxuICAgICwgaXNFbnVtICAgICA9IHBJRS5mO1xuICB3aGlsZShhTGVuID4gaW5kZXgpe1xuICAgIHZhciBTICAgICAgPSBJT2JqZWN0KGFyZ3VtZW50c1tpbmRleCsrXSlcbiAgICAgICwga2V5cyAgID0gZ2V0U3ltYm9scyA/IGdldEtleXMoUykuY29uY2F0KGdldFN5bWJvbHMoUykpIDogZ2V0S2V5cyhTKVxuICAgICAgLCBsZW5ndGggPSBrZXlzLmxlbmd0aFxuICAgICAgLCBqICAgICAgPSAwXG4gICAgICAsIGtleTtcbiAgICB3aGlsZShsZW5ndGggPiBqKWlmKGlzRW51bS5jYWxsKFMsIGtleSA9IGtleXNbaisrXSkpVFtrZXldID0gU1trZXldO1xuICB9IHJldHVybiBUO1xufSA6ICRhc3NpZ247XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtYXNzaWduLmpzXG4vLyBtb2R1bGUgaWQgPSAxNDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

eval("var dP       = __webpack_require__(7)\n  , anObject = __webpack_require__(12)\n  , getKeys  = __webpack_require__(26);\n\nmodule.exports = __webpack_require__(5) ? Object.defineProperties : function defineProperties(O, Properties){\n  anObject(O);\n  var keys   = getKeys(Properties)\n    , length = keys.length\n    , i = 0\n    , P;\n  while(length > i)dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWRwcy5qcz80N2ZkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBkUCAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpXG4gICwgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKVxuICAsIGdldEtleXMgID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpe1xuICBhbk9iamVjdChPKTtcbiAgdmFyIGtleXMgICA9IGdldEtleXMoUHJvcGVydGllcylcbiAgICAsIGxlbmd0aCA9IGtleXMubGVuZ3RoXG4gICAgLCBpID0gMFxuICAgICwgUDtcbiAgd2hpbGUobGVuZ3RoID4gaSlkUC5mKE8sIFAgPSBrZXlzW2krK10sIFByb3BlcnRpZXNbUF0pO1xuICByZXR1cm4gTztcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtZHBzLmpzXG4vLyBtb2R1bGUgaWQgPSAxNDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

eval("// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(17)\n  , gOPN      = __webpack_require__(86).f\n  , toString  = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function(it){\n  try {\n    return gOPN(it);\n  } catch(e){\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it){\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWdvcG4tZXh0LmpzP2QyMzgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZmFsbGJhY2sgZm9yIElFMTEgYnVnZ3kgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgd2l0aCBpZnJhbWUgYW5kIHdpbmRvd1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKVxuICAsIGdPUE4gICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZlxuICAsIHRvU3RyaW5nICA9IHt9LnRvU3RyaW5nO1xuXG52YXIgd2luZG93TmFtZXMgPSB0eXBlb2Ygd2luZG93ID09ICdvYmplY3QnICYmIHdpbmRvdyAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lc1xuICA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHdpbmRvdykgOiBbXTtcblxudmFyIGdldFdpbmRvd05hbWVzID0gZnVuY3Rpb24oaXQpe1xuICB0cnkge1xuICAgIHJldHVybiBnT1BOKGl0KTtcbiAgfSBjYXRjaChlKXtcbiAgICByZXR1cm4gd2luZG93TmFtZXMuc2xpY2UoKTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMuZiA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoaXQpe1xuICByZXR1cm4gd2luZG93TmFtZXMgJiYgdG9TdHJpbmcuY2FsbChpdCkgPT0gJ1tvYmplY3QgV2luZG93XScgPyBnZXRXaW5kb3dOYW1lcyhpdCkgOiBnT1BOKHRvSU9iamVjdChpdCkpO1xufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWdvcG4tZXh0LmpzXG4vLyBtb2R1bGUgaWQgPSAxNDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

eval("// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = __webpack_require__(13)\n  , anObject = __webpack_require__(12);\nvar check = function(O, proto){\n  anObject(O);\n  if(!isObject(proto) && proto !== null)throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function(test, buggy, set){\n      try {\n        set = __webpack_require__(23)(Function.call, __webpack_require__(53).f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch(e){ buggy = true; }\n      return function setPrototypeOf(O, proto){\n        check(O, proto);\n        if(buggy)O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2V0LXByb3RvLmpzPzk2NjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gV29ya3Mgd2l0aCBfX3Byb3RvX18gb25seS4gT2xkIHY4IGNhbid0IHdvcmsgd2l0aCBudWxsIHByb3RvIG9iamVjdHMuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wcm90byAqL1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JylcbiAgLCBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGNoZWNrID0gZnVuY3Rpb24oTywgcHJvdG8pe1xuICBhbk9iamVjdChPKTtcbiAgaWYoIWlzT2JqZWN0KHByb3RvKSAmJiBwcm90byAhPT0gbnVsbCl0aHJvdyBUeXBlRXJyb3IocHJvdG8gKyBcIjogY2FuJ3Qgc2V0IGFzIHByb3RvdHlwZSFcIik7XG59O1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldDogT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8ICgnX19wcm90b19fJyBpbiB7fSA/IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICBmdW5jdGlvbih0ZXN0LCBidWdneSwgc2V0KXtcbiAgICAgIHRyeSB7XG4gICAgICAgIHNldCA9IHJlcXVpcmUoJy4vX2N0eCcpKEZ1bmN0aW9uLmNhbGwsIHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZihPYmplY3QucHJvdG90eXBlLCAnX19wcm90b19fJykuc2V0LCAyKTtcbiAgICAgICAgc2V0KHRlc3QsIFtdKTtcbiAgICAgICAgYnVnZ3kgPSAhKHRlc3QgaW5zdGFuY2VvZiBBcnJheSk7XG4gICAgICB9IGNhdGNoKGUpeyBidWdneSA9IHRydWU7IH1cbiAgICAgIHJldHVybiBmdW5jdGlvbiBzZXRQcm90b3R5cGVPZihPLCBwcm90byl7XG4gICAgICAgIGNoZWNrKE8sIHByb3RvKTtcbiAgICAgICAgaWYoYnVnZ3kpTy5fX3Byb3RvX18gPSBwcm90bztcbiAgICAgICAgZWxzZSBzZXQoTywgcHJvdG8pO1xuICAgICAgICByZXR1cm4gTztcbiAgICAgIH07XG4gICAgfSh7fSwgZmFsc2UpIDogdW5kZWZpbmVkKSxcbiAgY2hlY2s6IGNoZWNrXG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2V0LXByb3RvLmpzXG4vLyBtb2R1bGUgaWQgPSAxNDlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar global      = __webpack_require__(6)\n  , core        = __webpack_require__(0)\n  , dP          = __webpack_require__(7)\n  , DESCRIPTORS = __webpack_require__(5)\n  , SPECIES     = __webpack_require__(3)('species');\n\nmodule.exports = function(KEY){\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2V0LXNwZWNpZXMuanM/MjdkNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsICAgICAgPSByZXF1aXJlKCcuL19nbG9iYWwnKVxuICAsIGNvcmUgICAgICAgID0gcmVxdWlyZSgnLi9fY29yZScpXG4gICwgZFAgICAgICAgICAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKVxuICAsIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKVxuICAsIFNQRUNJRVMgICAgID0gcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihLRVkpe1xuICB2YXIgQyA9IHR5cGVvZiBjb3JlW0tFWV0gPT0gJ2Z1bmN0aW9uJyA/IGNvcmVbS0VZXSA6IGdsb2JhbFtLRVldO1xuICBpZihERVNDUklQVE9SUyAmJiBDICYmICFDW1NQRUNJRVNdKWRQLmYoQywgU1BFQ0lFUywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCl7IHJldHVybiB0aGlzOyB9XG4gIH0pO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3NldC1zcGVjaWVzLmpzXG4vLyBtb2R1bGUgaWQgPSAxNTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

eval("var toInteger = __webpack_require__(59)\n  , defined   = __webpack_require__(31);\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc3RyaW5nLWF0LmpzPzQxM2EiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKVxuICAsIGRlZmluZWQgICA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbi8vIHRydWUgIC0+IFN0cmluZyNhdFxuLy8gZmFsc2UgLT4gU3RyaW5nI2NvZGVQb2ludEF0XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKFRPX1NUUklORyl7XG4gIHJldHVybiBmdW5jdGlvbih0aGF0LCBwb3Mpe1xuICAgIHZhciBzID0gU3RyaW5nKGRlZmluZWQodGhhdCkpXG4gICAgICAsIGkgPSB0b0ludGVnZXIocG9zKVxuICAgICAgLCBsID0gcy5sZW5ndGhcbiAgICAgICwgYSwgYjtcbiAgICBpZihpIDwgMCB8fCBpID49IGwpcmV0dXJuIFRPX1NUUklORyA/ICcnIDogdW5kZWZpbmVkO1xuICAgIGEgPSBzLmNoYXJDb2RlQXQoaSk7XG4gICAgcmV0dXJuIGEgPCAweGQ4MDAgfHwgYSA+IDB4ZGJmZiB8fCBpICsgMSA9PT0gbCB8fCAoYiA9IHMuY2hhckNvZGVBdChpICsgMSkpIDwgMHhkYzAwIHx8IGIgPiAweGRmZmZcbiAgICAgID8gVE9fU1RSSU5HID8gcy5jaGFyQXQoaSkgOiBhXG4gICAgICA6IFRPX1NUUklORyA/IHMuc2xpY2UoaSwgaSArIDIpIDogKGEgLSAweGQ4MDAgPDwgMTApICsgKGIgLSAweGRjMDApICsgMHgxMDAwMDtcbiAgfTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zdHJpbmctYXQuanNcbi8vIG1vZHVsZSBpZCA9IDE1MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

eval("var toInteger = __webpack_require__(59)\n  , max       = Math.max\n  , min       = Math.min;\nmodule.exports = function(index, length){\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8taW5kZXguanM/OWZkNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpXG4gICwgbWF4ICAgICAgID0gTWF0aC5tYXhcbiAgLCBtaW4gICAgICAgPSBNYXRoLm1pbjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaW5kZXgsIGxlbmd0aCl7XG4gIGluZGV4ID0gdG9JbnRlZ2VyKGluZGV4KTtcbiAgcmV0dXJuIGluZGV4IDwgMCA/IG1heChpbmRleCArIGxlbmd0aCwgMCkgOiBtaW4oaW5kZXgsIGxlbmd0aCk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8taW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDE1MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

eval("var anObject = __webpack_require__(12)\n  , get      = __webpack_require__(90);\nmodule.exports = __webpack_require__(0).getIterator = function(it){\n  var iterFn = get(it);\n  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9jb3JlLmdldC1pdGVyYXRvci5qcz9hY2E3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpXG4gICwgZ2V0ICAgICAgPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb3JlJykuZ2V0SXRlcmF0b3IgPSBmdW5jdGlvbihpdCl7XG4gIHZhciBpdGVyRm4gPSBnZXQoaXQpO1xuICBpZih0eXBlb2YgaXRlckZuICE9ICdmdW5jdGlvbicpdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgaXRlcmFibGUhJyk7XG4gIHJldHVybiBhbk9iamVjdChpdGVyRm4uY2FsbChpdCkpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvY29yZS5nZXQtaXRlcmF0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDE1M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar addToUnscopables = __webpack_require__(132)\n  , step             = __webpack_require__(85)\n  , Iterators        = __webpack_require__(24)\n  , toIObject        = __webpack_require__(17);\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(51)(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3IuanM/MWUwOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgYWRkVG9VbnNjb3BhYmxlcyA9IHJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpXG4gICwgc3RlcCAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vX2l0ZXItc3RlcCcpXG4gICwgSXRlcmF0b3JzICAgICAgICA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpXG4gICwgdG9JT2JqZWN0ICAgICAgICA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcblxuLy8gMjIuMS4zLjQgQXJyYXkucHJvdG90eXBlLmVudHJpZXMoKVxuLy8gMjIuMS4zLjEzIEFycmF5LnByb3RvdHlwZS5rZXlzKClcbi8vIDIyLjEuMy4yOSBBcnJheS5wcm90b3R5cGUudmFsdWVzKClcbi8vIDIyLjEuMy4zMCBBcnJheS5wcm90b3R5cGVbQEBpdGVyYXRvcl0oKVxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19pdGVyLWRlZmluZScpKEFycmF5LCAnQXJyYXknLCBmdW5jdGlvbihpdGVyYXRlZCwga2luZCl7XG4gIHRoaXMuX3QgPSB0b0lPYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbiAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgIC8vIGtpbmRcbi8vIDIyLjEuNS4yLjEgJUFycmF5SXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24oKXtcbiAgdmFyIE8gICAgID0gdGhpcy5fdFxuICAgICwga2luZCAgPSB0aGlzLl9rXG4gICAgLCBpbmRleCA9IHRoaXMuX2krKztcbiAgaWYoIU8gfHwgaW5kZXggPj0gTy5sZW5ndGgpe1xuICAgIHRoaXMuX3QgPSB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIHN0ZXAoMSk7XG4gIH1cbiAgaWYoa2luZCA9PSAna2V5cycgIClyZXR1cm4gc3RlcCgwLCBpbmRleCk7XG4gIGlmKGtpbmQgPT0gJ3ZhbHVlcycpcmV0dXJuIHN0ZXAoMCwgT1tpbmRleF0pO1xuICByZXR1cm4gc3RlcCgwLCBbaW5kZXgsIE9baW5kZXhdXSk7XG59LCAndmFsdWVzJyk7XG5cbi8vIGFyZ3VtZW50c0xpc3RbQEBpdGVyYXRvcl0gaXMgJUFycmF5UHJvdG9fdmFsdWVzJSAoOS40LjQuNiwgOS40LjQuNylcbkl0ZXJhdG9ycy5Bcmd1bWVudHMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbmFkZFRvVW5zY29wYWJsZXMoJ2tleXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ3ZhbHVlcycpO1xuYWRkVG9VbnNjb3BhYmxlcygnZW50cmllcycpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDE1NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

eval("var $export = __webpack_require__(14)\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', {create: __webpack_require__(33)});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZS5qcz85MDM0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jylcbi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7Y3JlYXRlOiByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyl9KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUuanNcbi8vIG1vZHVsZSBpZCA9IDE1NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

eval("var $export = __webpack_require__(14);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(5), 'Object', {defineProperty: __webpack_require__(7).f});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eS5qcz9jODJjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4vLyAxOS4xLjIuNCAvIDE1LjIuMy42IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSwgJ09iamVjdCcsIHtkZWZpbmVQcm9wZXJ0eTogcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eS5qc1xuLy8gbW9kdWxlIGlkID0gMTU2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject                 = __webpack_require__(17)\n  , $getOwnPropertyDescriptor = __webpack_require__(53).f;\n\n__webpack_require__(89)('getOwnPropertyDescriptor', function(){\n  return function getOwnPropertyDescriptor(it, key){\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcz9mZTIxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi42IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUClcbnZhciB0b0lPYmplY3QgICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpXG4gICwgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InLCBmdW5jdGlvbigpe1xuICByZXR1cm4gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpe1xuICAgIHJldHVybiAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRvSU9iamVjdChpdCksIGtleSk7XG4gIH07XG59KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDE1N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject        = __webpack_require__(37)\n  , $getPrototypeOf = __webpack_require__(87);\n\n__webpack_require__(89)('getPrototypeOf', function(){\n  return function getPrototypeOf(it){\n    return $getPrototypeOf(toObject(it));\n  };\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LmdldC1wcm90b3R5cGUtb2YuanM/ZWFhMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAxOS4xLjIuOSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciB0b09iamVjdCAgICAgICAgPSByZXF1aXJlKCcuL190by1vYmplY3QnKVxuICAsICRnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRQcm90b3R5cGVPZicsIGZ1bmN0aW9uKCl7XG4gIHJldHVybiBmdW5jdGlvbiBnZXRQcm90b3R5cGVPZihpdCl7XG4gICAgcmV0dXJuICRnZXRQcm90b3R5cGVPZih0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZi5qc1xuLy8gbW9kdWxlIGlkID0gMTU4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = __webpack_require__(14);\n$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(149).set});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YuanM/YjE5NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAxOS4xLjMuMTkgT2JqZWN0LnNldFByb3RvdHlwZU9mKE8sIHByb3RvKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge3NldFByb3RvdHlwZU9mOiByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXR9KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mLmpzXG4vLyBtb2R1bGUgaWQgPSAxNTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar strong = __webpack_require__(137);\n\n// 23.2 Set Objects\nmodule.exports = __webpack_require__(81)('Set', function(get){\n  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value){\n    return strong.def(this, value = value === 0 ? 0 : value, value);\n  }\n}, strong);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYuc2V0LmpzP2RiYmEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIHN0cm9uZyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24tc3Ryb25nJyk7XG5cbi8vIDIzLjIgU2V0IE9iamVjdHNcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKCdTZXQnLCBmdW5jdGlvbihnZXQpe1xuICByZXR1cm4gZnVuY3Rpb24gU2V0KCl7IHJldHVybiBnZXQodGhpcywgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpOyB9O1xufSwge1xuICAvLyAyMy4yLjMuMSBTZXQucHJvdG90eXBlLmFkZCh2YWx1ZSlcbiAgYWRkOiBmdW5jdGlvbiBhZGQodmFsdWUpe1xuICAgIHJldHVybiBzdHJvbmcuZGVmKHRoaXMsIHZhbHVlID0gdmFsdWUgPT09IDAgPyAwIDogdmFsdWUsIHZhbHVlKTtcbiAgfVxufSwgc3Ryb25nKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LnNldC5qc1xuLy8gbW9kdWxlIGlkID0gMTYwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n// ECMAScript 6 symbols shim\nvar global         = __webpack_require__(6)\n  , has            = __webpack_require__(15)\n  , DESCRIPTORS    = __webpack_require__(5)\n  , $export        = __webpack_require__(14)\n  , redefine       = __webpack_require__(56)\n  , META           = __webpack_require__(25).KEY\n  , $fails         = __webpack_require__(20)\n  , shared         = __webpack_require__(58)\n  , setToStringTag = __webpack_require__(36)\n  , uid            = __webpack_require__(38)\n  , wks            = __webpack_require__(3)\n  , wksExt         = __webpack_require__(63)\n  , wksDefine      = __webpack_require__(62)\n  , keyOf          = __webpack_require__(145)\n  , enumKeys       = __webpack_require__(140)\n  , isArray        = __webpack_require__(84)\n  , anObject       = __webpack_require__(12)\n  , toIObject      = __webpack_require__(17)\n  , toPrimitive    = __webpack_require__(61)\n  , createDesc     = __webpack_require__(35)\n  , _create        = __webpack_require__(33)\n  , gOPNExt        = __webpack_require__(148)\n  , $GOPD          = __webpack_require__(53)\n  , $DP            = __webpack_require__(7)\n  , $keys          = __webpack_require__(26)\n  , gOPD           = $GOPD.f\n  , dP             = $DP.f\n  , gOPN           = gOPNExt.f\n  , $Symbol        = global.Symbol\n  , $JSON          = global.JSON\n  , _stringify     = $JSON && $JSON.stringify\n  , PROTOTYPE      = 'prototype'\n  , HIDDEN         = wks('_hidden')\n  , TO_PRIMITIVE   = wks('toPrimitive')\n  , isEnum         = {}.propertyIsEnumerable\n  , SymbolRegistry = shared('symbol-registry')\n  , AllSymbols     = shared('symbols')\n  , OPSymbols      = shared('op-symbols')\n  , ObjectProto    = Object[PROTOTYPE]\n  , USE_NATIVE     = typeof $Symbol == 'function'\n  , QObject        = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function(){\n  return _create(dP({}, 'a', {\n    get: function(){ return dP(this, 'a', {value: 7}).a; }\n  })).a != 7;\n}) ? function(it, key, D){\n  var protoDesc = gOPD(ObjectProto, key);\n  if(protoDesc)delete ObjectProto[key];\n  dP(it, key, D);\n  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function(tag){\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){\n  return typeof it == 'symbol';\n} : function(it){\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D){\n  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if(has(AllSymbols, key)){\n    if(!D.enumerable){\n      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;\n      D = _create(D, {enumerable: createDesc(0, false)});\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P){\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P))\n    , i    = 0\n    , l = keys.length\n    , key;\n  while(l > i)$defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P){\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key){\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){\n  it  = toIObject(it);\n  key = toPrimitive(key, true);\n  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;\n  var D = gOPD(it, key);\n  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it){\n  var names  = gOPN(toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it){\n  var IS_OP  = it === ObjectProto\n    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))\n    , result = []\n    , i      = 0\n    , key;\n  while(names.length > i){\n    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif(!USE_NATIVE){\n  $Symbol = function Symbol(){\n    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function(value){\n      if(this === ObjectProto)$set.call(OPSymbols, value);\n      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString(){\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f   = $defineProperty;\n  __webpack_require__(86).f = gOPNExt.f = $getOwnPropertyNames;\n  __webpack_require__(34).f  = $propertyIsEnumerable;\n  __webpack_require__(54).f = $getOwnPropertySymbols;\n\n  if(DESCRIPTORS && !__webpack_require__(52)){\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function(name){\n    return wrap(wks(name));\n  }\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});\n\nfor(var symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);\n\nfor(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function(key){\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(key){\n    if(isSymbol(key))return keyOf(SymbolRegistry, key);\n    throw TypeError(key + ' is not a symbol!');\n  },\n  useSetter: function(){ setter = true; },\n  useSimple: function(){ setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it){\n    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined\n    var args = [it]\n      , i    = 1\n      , replacer, $replacer;\n    while(arguments.length > i)args.push(arguments[i++]);\n    replacer = args[1];\n    if(typeof replacer == 'function')$replacer = replacer;\n    if($replacer || !isArray(replacer))replacer = function(key, value){\n      if($replacer)value = $replacer.call(this, key, value);\n      if(!isSymbol(value))return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(16)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar each         = __webpack_require__(47)(0)\n  , redefine     = __webpack_require__(56)\n  , meta         = __webpack_require__(25)\n  , assign       = __webpack_require__(146)\n  , weak         = __webpack_require__(139)\n  , isObject     = __webpack_require__(13)\n  , getWeak      = meta.getWeak\n  , isExtensible = Object.isExtensible\n  , uncaughtFrozenStore = weak.ufstore\n  , tmp          = {}\n  , InternalMap;\n\nvar wrapper = function(get){\n  return function WeakMap(){\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\n\nvar methods = {\n  // 23.3.3.3 WeakMap.prototype.get(key)\n  get: function get(key){\n    if(isObject(key)){\n      var data = getWeak(key);\n      if(data === true)return uncaughtFrozenStore(this).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  // 23.3.3.5 WeakMap.prototype.set(key, value)\n  set: function set(key, value){\n    return weak.def(this, key, value);\n  }\n};\n\n// 23.3 WeakMap Objects\nvar $WeakMap = module.exports = __webpack_require__(81)('WeakMap', wrapper, methods, weak, true, true);\n\n// IE11 WeakMap frozen keys fix\nif(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){\n  InternalMap = weak.getConstructor(wrapper);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function(key){\n    var proto  = $WeakMap.prototype\n      , method = proto[key];\n    redefine(proto, key, function(a, b){\n      // store frozen objects on internal weakmap shim\n      if(isObject(a) && !isExtensible(a)){\n        if(!this._f)this._f = new InternalMap;\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      // store all the rest on native weakmap\n      } return method.call(this, a, b);\n    });\n  });\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczYud2Vhay1tYXAuanM/ZDc1MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgZWFjaCAgICAgICAgID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDApXG4gICwgcmVkZWZpbmUgICAgID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKVxuICAsIG1ldGEgICAgICAgICA9IHJlcXVpcmUoJy4vX21ldGEnKVxuICAsIGFzc2lnbiAgICAgICA9IHJlcXVpcmUoJy4vX29iamVjdC1hc3NpZ24nKVxuICAsIHdlYWsgICAgICAgICA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24td2VhaycpXG4gICwgaXNPYmplY3QgICAgID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0JylcbiAgLCBnZXRXZWFrICAgICAgPSBtZXRhLmdldFdlYWtcbiAgLCBpc0V4dGVuc2libGUgPSBPYmplY3QuaXNFeHRlbnNpYmxlXG4gICwgdW5jYXVnaHRGcm96ZW5TdG9yZSA9IHdlYWsudWZzdG9yZVxuICAsIHRtcCAgICAgICAgICA9IHt9XG4gICwgSW50ZXJuYWxNYXA7XG5cbnZhciB3cmFwcGVyID0gZnVuY3Rpb24oZ2V0KXtcbiAgcmV0dXJuIGZ1bmN0aW9uIFdlYWtNYXAoKXtcbiAgICByZXR1cm4gZ2V0KHRoaXMsIGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTtcbiAgfTtcbn07XG5cbnZhciBtZXRob2RzID0ge1xuICAvLyAyMy4zLjMuMyBXZWFrTWFwLnByb3RvdHlwZS5nZXQoa2V5KVxuICBnZXQ6IGZ1bmN0aW9uIGdldChrZXkpe1xuICAgIGlmKGlzT2JqZWN0KGtleSkpe1xuICAgICAgdmFyIGRhdGEgPSBnZXRXZWFrKGtleSk7XG4gICAgICBpZihkYXRhID09PSB0cnVlKXJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHRoaXMpLmdldChrZXkpO1xuICAgICAgcmV0dXJuIGRhdGEgPyBkYXRhW3RoaXMuX2ldIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgfSxcbiAgLy8gMjMuMy4zLjUgV2Vha01hcC5wcm90b3R5cGUuc2V0KGtleSwgdmFsdWUpXG4gIHNldDogZnVuY3Rpb24gc2V0KGtleSwgdmFsdWUpe1xuICAgIHJldHVybiB3ZWFrLmRlZih0aGlzLCBrZXksIHZhbHVlKTtcbiAgfVxufTtcblxuLy8gMjMuMyBXZWFrTWFwIE9iamVjdHNcbnZhciAkV2Vha01hcCA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKCdXZWFrTWFwJywgd3JhcHBlciwgbWV0aG9kcywgd2VhaywgdHJ1ZSwgdHJ1ZSk7XG5cbi8vIElFMTEgV2Vha01hcCBmcm96ZW4ga2V5cyBmaXhcbmlmKG5ldyAkV2Vha01hcCgpLnNldCgoT2JqZWN0LmZyZWV6ZSB8fCBPYmplY3QpKHRtcCksIDcpLmdldCh0bXApICE9IDcpe1xuICBJbnRlcm5hbE1hcCA9IHdlYWsuZ2V0Q29uc3RydWN0b3Iod3JhcHBlcik7XG4gIGFzc2lnbihJbnRlcm5hbE1hcC5wcm90b3R5cGUsIG1ldGhvZHMpO1xuICBtZXRhLk5FRUQgPSB0cnVlO1xuICBlYWNoKFsnZGVsZXRlJywgJ2hhcycsICdnZXQnLCAnc2V0J10sIGZ1bmN0aW9uKGtleSl7XG4gICAgdmFyIHByb3RvICA9ICRXZWFrTWFwLnByb3RvdHlwZVxuICAgICAgLCBtZXRob2QgPSBwcm90b1trZXldO1xuICAgIHJlZGVmaW5lKHByb3RvLCBrZXksIGZ1bmN0aW9uKGEsIGIpe1xuICAgICAgLy8gc3RvcmUgZnJvemVuIG9iamVjdHMgb24gaW50ZXJuYWwgd2Vha21hcCBzaGltXG4gICAgICBpZihpc09iamVjdChhKSAmJiAhaXNFeHRlbnNpYmxlKGEpKXtcbiAgICAgICAgaWYoIXRoaXMuX2YpdGhpcy5fZiA9IG5ldyBJbnRlcm5hbE1hcDtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuX2Zba2V5XShhLCBiKTtcbiAgICAgICAgcmV0dXJuIGtleSA9PSAnc2V0JyA/IHRoaXMgOiByZXN1bHQ7XG4gICAgICAvLyBzdG9yZSBhbGwgdGhlIHJlc3Qgb24gbmF0aXZlIHdlYWttYXBcbiAgICAgIH0gcmV0dXJuIG1ldGhvZC5jYWxsKHRoaXMsIGEsIGIpO1xuICAgIH0pO1xuICB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LndlYWstbWFwLmpzXG4vLyBtb2R1bGUgaWQgPSAxNjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

eval("// https://github.com/DavidBruant/Map-Set.prototype.toJSON\nvar $export  = __webpack_require__(14);\n\n$export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(138)('Set')});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczcuc2V0LnRvLWpzb24uanM/ZTc1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBodHRwczovL2dpdGh1Yi5jb20vRGF2aWRCcnVhbnQvTWFwLVNldC5wcm90b3R5cGUudG9KU09OXG52YXIgJGV4cG9ydCAgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LlIsICdTZXQnLCB7dG9KU09OOiByZXF1aXJlKCcuL19jb2xsZWN0aW9uLXRvLWpzb24nKSgnU2V0Jyl9KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3LnNldC50by1qc29uLmpzXG4vLyBtb2R1bGUgaWQgPSAxNjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(62)('asyncIterator');//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yLmpzP2I4YzUiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9fd2tzLWRlZmluZScpKCdhc3luY0l0ZXJhdG9yJyk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDE2NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(62)('observable');//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9lczcuc3ltYm9sLm9ic2VydmFibGUuanM/ZGFhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuL193a3MtZGVmaW5lJykoJ29ic2VydmFibGUnKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3LnN5bWJvbC5vYnNlcnZhYmxlLmpzXG4vLyBtb2R1bGUgaWQgPSAxNjVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(167);\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9kZWJ1Zy9zcmMvZGVidWcuanM/MmQ4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogVGhpcyBpcyB0aGUgY29tbW9uIGxvZ2ljIGZvciBib3RoIHRoZSBOb2RlLmpzIGFuZCB3ZWIgYnJvd3NlclxuICogaW1wbGVtZW50YXRpb25zIG9mIGBkZWJ1ZygpYC5cbiAqXG4gKiBFeHBvc2UgYGRlYnVnKClgIGFzIHRoZSBtb2R1bGUuXG4gKi9cblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gY3JlYXRlRGVidWcuZGVidWcgPSBjcmVhdGVEZWJ1Z1snZGVmYXVsdCddID0gY3JlYXRlRGVidWc7XG5leHBvcnRzLmNvZXJjZSA9IGNvZXJjZTtcbmV4cG9ydHMuZGlzYWJsZSA9IGRpc2FibGU7XG5leHBvcnRzLmVuYWJsZSA9IGVuYWJsZTtcbmV4cG9ydHMuZW5hYmxlZCA9IGVuYWJsZWQ7XG5leHBvcnRzLmh1bWFuaXplID0gcmVxdWlyZSgnbXMnKTtcblxuLyoqXG4gKiBUaGUgY3VycmVudGx5IGFjdGl2ZSBkZWJ1ZyBtb2RlIG5hbWVzLCBhbmQgbmFtZXMgdG8gc2tpcC5cbiAqL1xuXG5leHBvcnRzLm5hbWVzID0gW107XG5leHBvcnRzLnNraXBzID0gW107XG5cbi8qKlxuICogTWFwIG9mIHNwZWNpYWwgXCIlblwiIGhhbmRsaW5nIGZ1bmN0aW9ucywgZm9yIHRoZSBkZWJ1ZyBcImZvcm1hdFwiIGFyZ3VtZW50LlxuICpcbiAqIFZhbGlkIGtleSBuYW1lcyBhcmUgYSBzaW5nbGUsIGxvd2VyIG9yIHVwcGVyLWNhc2UgbGV0dGVyLCBpLmUuIFwiblwiIGFuZCBcIk5cIi5cbiAqL1xuXG5leHBvcnRzLmZvcm1hdHRlcnMgPSB7fTtcblxuLyoqXG4gKiBQcmV2aW91cyBsb2cgdGltZXN0YW1wLlxuICovXG5cbnZhciBwcmV2VGltZTtcblxuLyoqXG4gKiBTZWxlY3QgYSBjb2xvci5cbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lc3BhY2VcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHNlbGVjdENvbG9yKG5hbWVzcGFjZSkge1xuICB2YXIgaGFzaCA9IDAsIGk7XG5cbiAgZm9yIChpIGluIG5hbWVzcGFjZSkge1xuICAgIGhhc2ggID0gKChoYXNoIDw8IDUpIC0gaGFzaCkgKyBuYW1lc3BhY2UuY2hhckNvZGVBdChpKTtcbiAgICBoYXNoIHw9IDA7IC8vIENvbnZlcnQgdG8gMzJiaXQgaW50ZWdlclxuICB9XG5cbiAgcmV0dXJuIGV4cG9ydHMuY29sb3JzW01hdGguYWJzKGhhc2gpICUgZXhwb3J0cy5jb2xvcnMubGVuZ3RoXTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBkZWJ1Z2dlciB3aXRoIHRoZSBnaXZlbiBgbmFtZXNwYWNlYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZXNwYWNlXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlRGVidWcobmFtZXNwYWNlKSB7XG5cbiAgZnVuY3Rpb24gZGVidWcoKSB7XG4gICAgLy8gZGlzYWJsZWQ/XG4gICAgaWYgKCFkZWJ1Zy5lbmFibGVkKSByZXR1cm47XG5cbiAgICB2YXIgc2VsZiA9IGRlYnVnO1xuXG4gICAgLy8gc2V0IGBkaWZmYCB0aW1lc3RhbXBcbiAgICB2YXIgY3VyciA9ICtuZXcgRGF0ZSgpO1xuICAgIHZhciBtcyA9IGN1cnIgLSAocHJldlRpbWUgfHwgY3Vycik7XG4gICAgc2VsZi5kaWZmID0gbXM7XG4gICAgc2VsZi5wcmV2ID0gcHJldlRpbWU7XG4gICAgc2VsZi5jdXJyID0gY3VycjtcbiAgICBwcmV2VGltZSA9IGN1cnI7XG5cbiAgICAvLyB0dXJuIHRoZSBgYXJndW1lbnRzYCBpbnRvIGEgcHJvcGVyIEFycmF5XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgIH1cblxuICAgIGFyZ3NbMF0gPSBleHBvcnRzLmNvZXJjZShhcmdzWzBdKTtcblxuICAgIGlmICgnc3RyaW5nJyAhPT0gdHlwZW9mIGFyZ3NbMF0pIHtcbiAgICAgIC8vIGFueXRoaW5nIGVsc2UgbGV0J3MgaW5zcGVjdCB3aXRoICVPXG4gICAgICBhcmdzLnVuc2hpZnQoJyVPJyk7XG4gICAgfVxuXG4gICAgLy8gYXBwbHkgYW55IGBmb3JtYXR0ZXJzYCB0cmFuc2Zvcm1hdGlvbnNcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIGFyZ3NbMF0gPSBhcmdzWzBdLnJlcGxhY2UoLyUoW2EtekEtWiVdKS9nLCBmdW5jdGlvbihtYXRjaCwgZm9ybWF0KSB7XG4gICAgICAvLyBpZiB3ZSBlbmNvdW50ZXIgYW4gZXNjYXBlZCAlIHRoZW4gZG9uJ3QgaW5jcmVhc2UgdGhlIGFycmF5IGluZGV4XG4gICAgICBpZiAobWF0Y2ggPT09ICclJScpIHJldHVybiBtYXRjaDtcbiAgICAgIGluZGV4Kys7XG4gICAgICB2YXIgZm9ybWF0dGVyID0gZXhwb3J0cy5mb3JtYXR0ZXJzW2Zvcm1hdF07XG4gICAgICBpZiAoJ2Z1bmN0aW9uJyA9PT0gdHlwZW9mIGZvcm1hdHRlcikge1xuICAgICAgICB2YXIgdmFsID0gYXJnc1tpbmRleF07XG4gICAgICAgIG1hdGNoID0gZm9ybWF0dGVyLmNhbGwoc2VsZiwgdmFsKTtcblxuICAgICAgICAvLyBub3cgd2UgbmVlZCB0byByZW1vdmUgYGFyZ3NbaW5kZXhdYCBzaW5jZSBpdCdzIGlubGluZWQgaW4gdGhlIGBmb3JtYXRgXG4gICAgICAgIGFyZ3Muc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgaW5kZXgtLTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtYXRjaDtcbiAgICB9KTtcblxuICAgIC8vIGFwcGx5IGVudi1zcGVjaWZpYyBmb3JtYXR0aW5nIChjb2xvcnMsIGV0Yy4pXG4gICAgZXhwb3J0cy5mb3JtYXRBcmdzLmNhbGwoc2VsZiwgYXJncyk7XG5cbiAgICB2YXIgbG9nRm4gPSBkZWJ1Zy5sb2cgfHwgZXhwb3J0cy5sb2cgfHwgY29uc29sZS5sb2cuYmluZChjb25zb2xlKTtcbiAgICBsb2dGbi5hcHBseShzZWxmLCBhcmdzKTtcbiAgfVxuXG4gIGRlYnVnLm5hbWVzcGFjZSA9IG5hbWVzcGFjZTtcbiAgZGVidWcuZW5hYmxlZCA9IGV4cG9ydHMuZW5hYmxlZChuYW1lc3BhY2UpO1xuICBkZWJ1Zy51c2VDb2xvcnMgPSBleHBvcnRzLnVzZUNvbG9ycygpO1xuICBkZWJ1Zy5jb2xvciA9IHNlbGVjdENvbG9yKG5hbWVzcGFjZSk7XG5cbiAgLy8gZW52LXNwZWNpZmljIGluaXRpYWxpemF0aW9uIGxvZ2ljIGZvciBkZWJ1ZyBpbnN0YW5jZXNcbiAgaWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiBleHBvcnRzLmluaXQpIHtcbiAgICBleHBvcnRzLmluaXQoZGVidWcpO1xuICB9XG5cbiAgcmV0dXJuIGRlYnVnO1xufVxuXG4vKipcbiAqIEVuYWJsZXMgYSBkZWJ1ZyBtb2RlIGJ5IG5hbWVzcGFjZXMuIFRoaXMgY2FuIGluY2x1ZGUgbW9kZXNcbiAqIHNlcGFyYXRlZCBieSBhIGNvbG9uIGFuZCB3aWxkY2FyZHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG5hbWVzcGFjZXNcbiAqIEBhcGkgcHVibGljXG4gKi9cblxuZnVuY3Rpb24gZW5hYmxlKG5hbWVzcGFjZXMpIHtcbiAgZXhwb3J0cy5zYXZlKG5hbWVzcGFjZXMpO1xuXG4gIGV4cG9ydHMubmFtZXMgPSBbXTtcbiAgZXhwb3J0cy5za2lwcyA9IFtdO1xuXG4gIHZhciBzcGxpdCA9IChuYW1lc3BhY2VzIHx8ICcnKS5zcGxpdCgvW1xccyxdKy8pO1xuICB2YXIgbGVuID0gc3BsaXQubGVuZ3RoO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoIXNwbGl0W2ldKSBjb250aW51ZTsgLy8gaWdub3JlIGVtcHR5IHN0cmluZ3NcbiAgICBuYW1lc3BhY2VzID0gc3BsaXRbaV0ucmVwbGFjZSgvXFwqL2csICcuKj8nKTtcbiAgICBpZiAobmFtZXNwYWNlc1swXSA9PT0gJy0nKSB7XG4gICAgICBleHBvcnRzLnNraXBzLnB1c2gobmV3IFJlZ0V4cCgnXicgKyBuYW1lc3BhY2VzLnN1YnN0cigxKSArICckJykpO1xuICAgIH0gZWxzZSB7XG4gICAgICBleHBvcnRzLm5hbWVzLnB1c2gobmV3IFJlZ0V4cCgnXicgKyBuYW1lc3BhY2VzICsgJyQnKSk7XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogRGlzYWJsZSBkZWJ1ZyBvdXRwdXQuXG4gKlxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBkaXNhYmxlKCkge1xuICBleHBvcnRzLmVuYWJsZSgnJyk7XG59XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBnaXZlbiBtb2RlIG5hbWUgaXMgZW5hYmxlZCwgZmFsc2Ugb3RoZXJ3aXNlLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBlbmFibGVkKG5hbWUpIHtcbiAgdmFyIGksIGxlbjtcbiAgZm9yIChpID0gMCwgbGVuID0gZXhwb3J0cy5za2lwcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIGlmIChleHBvcnRzLnNraXBzW2ldLnRlc3QobmFtZSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgZm9yIChpID0gMCwgbGVuID0gZXhwb3J0cy5uYW1lcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIGlmIChleHBvcnRzLm5hbWVzW2ldLnRlc3QobmFtZSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbi8qKlxuICogQ29lcmNlIGB2YWxgLlxuICpcbiAqIEBwYXJhbSB7TWl4ZWR9IHZhbFxuICogQHJldHVybiB7TWl4ZWR9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBjb2VyY2UodmFsKSB7XG4gIGlmICh2YWwgaW5zdGFuY2VvZiBFcnJvcikgcmV0dXJuIHZhbC5zdGFjayB8fCB2YWwubWVzc2FnZTtcbiAgcmV0dXJuIHZhbDtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9kZWJ1Zy9zcmMvZGVidWcuanNcbi8vIG1vZHVsZSBpZCA9IDE2NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 167 */
/***/ (function(module, exports) {

eval("/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {}\n  var type = typeof val\n  if (type === 'string' && val.length > 0) {\n    return parse(val)\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ?\n\t\t\tfmtLong(val) :\n\t\t\tfmtShort(val)\n  }\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 10000) {\n    return\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n\n    default:\n      return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's'\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTY3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9tcy9pbmRleC5qcz82ZDM2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSGVscGVycy5cbiAqL1xuXG52YXIgcyA9IDEwMDBcbnZhciBtID0gcyAqIDYwXG52YXIgaCA9IG0gKiA2MFxudmFyIGQgPSBoICogMjRcbnZhciB5ID0gZCAqIDM2NS4yNVxuXG4vKipcbiAqIFBhcnNlIG9yIGZvcm1hdCB0aGUgZ2l2ZW4gYHZhbGAuXG4gKlxuICogT3B0aW9uczpcbiAqXG4gKiAgLSBgbG9uZ2AgdmVyYm9zZSBmb3JtYXR0aW5nIFtmYWxzZV1cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xOdW1iZXJ9IHZhbFxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqIEB0aHJvd3Mge0Vycm9yfSB0aHJvdyBhbiBlcnJvciBpZiB2YWwgaXMgbm90IGEgbm9uLWVtcHR5IHN0cmluZyBvciBhIG51bWJlclxuICogQHJldHVybiB7U3RyaW5nfE51bWJlcn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodmFsLCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbFxuICBpZiAodHlwZSA9PT0gJ3N0cmluZycgJiYgdmFsLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gcGFyc2UodmFsKVxuICB9IGVsc2UgaWYgKHR5cGUgPT09ICdudW1iZXInICYmIGlzTmFOKHZhbCkgPT09IGZhbHNlKSB7XG4gICAgcmV0dXJuIG9wdGlvbnMubG9uZyA/XG5cdFx0XHRmbXRMb25nKHZhbCkgOlxuXHRcdFx0Zm10U2hvcnQodmFsKVxuICB9XG4gIHRocm93IG5ldyBFcnJvcigndmFsIGlzIG5vdCBhIG5vbi1lbXB0eSBzdHJpbmcgb3IgYSB2YWxpZCBudW1iZXIuIHZhbD0nICsgSlNPTi5zdHJpbmdpZnkodmFsKSlcbn1cblxuLyoqXG4gKiBQYXJzZSB0aGUgZ2l2ZW4gYHN0cmAgYW5kIHJldHVybiBtaWxsaXNlY29uZHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybiB7TnVtYmVyfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcGFyc2Uoc3RyKSB7XG4gIHN0ciA9IFN0cmluZyhzdHIpXG4gIGlmIChzdHIubGVuZ3RoID4gMTAwMDApIHtcbiAgICByZXR1cm5cbiAgfVxuICB2YXIgbWF0Y2ggPSAvXigoPzpcXGQrKT9cXC4/XFxkKykgKihtaWxsaXNlY29uZHM/fG1zZWNzP3xtc3xzZWNvbmRzP3xzZWNzP3xzfG1pbnV0ZXM/fG1pbnM/fG18aG91cnM/fGhycz98aHxkYXlzP3xkfHllYXJzP3x5cnM/fHkpPyQvaS5leGVjKHN0cilcbiAgaWYgKCFtYXRjaCkge1xuICAgIHJldHVyblxuICB9XG4gIHZhciBuID0gcGFyc2VGbG9hdChtYXRjaFsxXSlcbiAgdmFyIHR5cGUgPSAobWF0Y2hbMl0gfHwgJ21zJykudG9Mb3dlckNhc2UoKVxuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICd5ZWFycyc6XG4gICAgY2FzZSAneWVhcic6XG4gICAgY2FzZSAneXJzJzpcbiAgICBjYXNlICd5cic6XG4gICAgY2FzZSAneSc6XG4gICAgICByZXR1cm4gbiAqIHlcbiAgICBjYXNlICdkYXlzJzpcbiAgICBjYXNlICdkYXknOlxuICAgIGNhc2UgJ2QnOlxuICAgICAgcmV0dXJuIG4gKiBkXG4gICAgY2FzZSAnaG91cnMnOlxuICAgIGNhc2UgJ2hvdXInOlxuICAgIGNhc2UgJ2hycyc6XG4gICAgY2FzZSAnaHInOlxuICAgIGNhc2UgJ2gnOlxuICAgICAgcmV0dXJuIG4gKiBoXG4gICAgY2FzZSAnbWludXRlcyc6XG4gICAgY2FzZSAnbWludXRlJzpcbiAgICBjYXNlICdtaW5zJzpcbiAgICBjYXNlICdtaW4nOlxuICAgIGNhc2UgJ20nOlxuICAgICAgcmV0dXJuIG4gKiBtXG4gICAgY2FzZSAnc2Vjb25kcyc6XG4gICAgY2FzZSAnc2Vjb25kJzpcbiAgICBjYXNlICdzZWNzJzpcbiAgICBjYXNlICdzZWMnOlxuICAgIGNhc2UgJ3MnOlxuICAgICAgcmV0dXJuIG4gKiBzXG4gICAgY2FzZSAnbWlsbGlzZWNvbmRzJzpcbiAgICBjYXNlICdtaWxsaXNlY29uZCc6XG4gICAgY2FzZSAnbXNlY3MnOlxuICAgIGNhc2UgJ21zZWMnOlxuICAgIGNhc2UgJ21zJzpcbiAgICAgIHJldHVybiBuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG4vKipcbiAqIFNob3J0IGZvcm1hdCBmb3IgYG1zYC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbXNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGZtdFNob3J0KG1zKSB7XG4gIGlmIChtcyA+PSBkKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBkKSArICdkJ1xuICB9XG4gIGlmIChtcyA+PSBoKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBoKSArICdoJ1xuICB9XG4gIGlmIChtcyA+PSBtKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBtKSArICdtJ1xuICB9XG4gIGlmIChtcyA+PSBzKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBzKSArICdzJ1xuICB9XG4gIHJldHVybiBtcyArICdtcydcbn1cblxuLyoqXG4gKiBMb25nIGZvcm1hdCBmb3IgYG1zYC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbXNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGZtdExvbmcobXMpIHtcbiAgcmV0dXJuIHBsdXJhbChtcywgZCwgJ2RheScpIHx8XG4gICAgcGx1cmFsKG1zLCBoLCAnaG91cicpIHx8XG4gICAgcGx1cmFsKG1zLCBtLCAnbWludXRlJykgfHxcbiAgICBwbHVyYWwobXMsIHMsICdzZWNvbmQnKSB8fFxuICAgIG1zICsgJyBtcydcbn1cblxuLyoqXG4gKiBQbHVyYWxpemF0aW9uIGhlbHBlci5cbiAqL1xuXG5mdW5jdGlvbiBwbHVyYWwobXMsIG4sIG5hbWUpIHtcbiAgaWYgKG1zIDwgbikge1xuICAgIHJldHVyblxuICB9XG4gIGlmIChtcyA8IG4gKiAxLjUpIHtcbiAgICByZXR1cm4gTWF0aC5mbG9vcihtcyAvIG4pICsgJyAnICsgbmFtZVxuICB9XG4gIHJldHVybiBNYXRoLmNlaWwobXMgLyBuKSArICcgJyArIG5hbWUgKyAncydcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9tcy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMTY3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(1);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(2);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(11);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(10);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _audioTimeEngine = __webpack_require__(27);\n\nvar _audioTimeEngine2 = _interopRequireDefault(_audioTimeEngine);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction optOrDef(opt, def) {\n  if (opt !== undefined) return opt;\n\n  return def;\n}\n\n/**\n * @class GranularEngine\n */\n\nvar GranularEngine = function (_AudioTimeEngine) {\n  (0, _inherits3.default)(GranularEngine, _AudioTimeEngine);\n\n  /**\n   * @constructor\n   * @param {AudioBuffer} buffer initial audio buffer for granular synthesis\n   *\n   * The engine implements the \"scheduled\" interface.\n   * The grain position (grain onset or center time in the audio buffer) is optionally\n   * determined by the engine's currentPosition attribute.\n   */\n\n  function GranularEngine() {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    (0, _classCallCheck3.default)(this, GranularEngine);\n\n\n    /**\n     * Audio buffer\n     * @type {AudioBuffer}\n     */\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(GranularEngine).call(this, options.audioContext));\n\n    _this.buffer = optOrDef(options.buffer, null);\n\n    /**\n     * Absolute grain period in sec\n     * @type {Number}\n     */\n    _this.periodAbs = optOrDef(options.periodAbs, 0.01);\n\n    /**\n     * Grain period relative to absolute duration\n     * @type {Number}\n     */\n    _this.periodRel = optOrDef(options.periodRel, 0);\n\n    /**\n     * Amout of random grain period variation relative to grain period\n     * @type {Number}\n     */\n    _this.periodVar = optOrDef(options.periodVar, 0);\n\n    /**\n     * Grain position (onset time in audio buffer) in sec\n     * @type {Number}\n     */\n    _this.position = optOrDef(options.position, 0);\n\n    /**\n     * Amout of random grain position variation in sec\n     * @type {Number}\n     */\n    _this.positionVar = optOrDef(options.positionVar, 0.003);\n\n    /**\n     * Absolute grain duration in sec\n     * @type {Number}\n     */\n    _this.durationAbs = optOrDef(options.durationAbs, 0.1); // absolute grain duration\n\n    /**\n     * Grain duration relative to grain period (overlap)\n     * @type {Number}\n     */\n    _this.durationRel = optOrDef(options.durationRel, 0);\n\n    /**\n     * Absolute attack time in sec\n     * @type {Number}\n     */\n    _this.attackAbs = optOrDef(options.attackAbs, 0);\n\n    /**\n     * Attack time relative to grain duration\n     * @type {Number}\n     */\n    _this.attackRel = optOrDef(options.attackRel, 0.5);\n\n    /**\n     * Shape of attack\n     * @type {String} 'lin' for linear ramp, 'exp' for exponential\n     */\n    _this.attackShape = optOrDef(options.attackShape, 'lin');\n\n    /**\n     * Absolute release time in sec\n     * @type {Number}\n     */\n    _this.releaseAbs = optOrDef(options.releaseAbs, 0);\n\n    /**\n     * Release time relative to grain duration\n     * @type {Number}\n     */\n    _this.releaseRel = optOrDef(options.releaseRel, 0.5);\n\n    /**\n     * Shape of release\n     * @type {String} 'lin' for linear ramp, 'exp' for exponential\n     */\n    _this.releaseShape = optOrDef(options.releaseShape, 'lin');\n\n    /**\n     * Offset (start/end value) for exponential attack/release\n     * @type {Number} offset\n     */\n    _this.expRampOffset = optOrDef(options.expRampOffset, 0.0001);\n\n    /**\n     * Grain resampling in cent\n     * @type {Number}\n     */\n    _this.resampling = optOrDef(options.resampling, 0);\n\n    /**\n     * Amout of random resampling variation in cent\n     * @type {Number}\n     */\n    _this.resamplingVar = optOrDef(options.resamplingVar, 0);\n\n    /**\n     * Linear gain factor\n     * @type {Number}\n     */\n    _this.gain = optOrDef(options.gain, 1);\n\n    /**\n     * Whether the grain position refers to the center of the grain (or the beginning)\n     * @type {Bool}\n     */\n    _this.centered = optOrDef(options.centered, true);\n\n    /**\n     * Whether the audio buffer and grain position are considered as cyclic\n     * @type {Bool}\n     */\n    _this.cyclic = optOrDef(options.cyclic, false);\n\n    /**\n     * Portion at the end of the audio buffer that has been copied from the beginning to assure cyclic behavior\n     * @type {Number}\n     */\n    _this.wrapAroundExtension = optOrDef(options.wrapAroundExtension, 0);\n\n    _this.outputNode = _this.audioContext.createGain();\n    return _this;\n  }\n\n  /**\n   * Get buffer duration (excluding wrapAroundExtension)\n   * @return {Number} current buffer duration\n   */\n\n\n  (0, _createClass3.default)(GranularEngine, [{\n    key: 'advanceTime',\n\n\n    // TimeEngine method (scheduled interface)\n    value: function advanceTime(time) {\n      time = Math.max(time, this.audioContext.currentTime);\n      return time + this.trigger(time);\n    }\n\n    /**\n     * Trigger a grain\n     * @param {Number} time grain synthesis audio time\n     * @return {Number} period to next grain\n     *\n     * This function can be called at any time (whether the engine is scheduled or not)\n     * to generate a single grain according to the current grain parameters.\n     */\n\n  }, {\n    key: 'trigger',\n    value: function trigger(time) {\n      var audioContext = this.audioContext;\n      var grainTime = time || audioContext.currentTime;\n      var grainPeriod = this.periodAbs;\n      var grainPosition = this.currentPosition;\n      var grainDuration = this.durationAbs;\n\n      if (this.buffer) {\n        var resamplingRate = 1.0;\n\n        // calculate resampling\n        if (this.resampling !== 0 || this.resamplingVar > 0) {\n          var randomResampling = (Math.random() - 0.5) * 2.0 * this.resamplingVar;\n          resamplingRate = Math.pow(2.0, (this.resampling + randomResampling) / 1200.0);\n        }\n\n        grainPeriod += this.periodRel * grainDuration;\n        grainDuration += this.durationRel * grainPeriod;\n\n        // grain period randon variation\n        if (this.periodVar > 0.0) grainPeriod += 2.0 * (Math.random() - 0.5) * this.periodVar * grainPeriod;\n\n        // center grain\n        if (this.centered) grainPosition -= 0.5 * grainDuration;\n\n        // randomize grain position\n        if (this.positionVar > 0) grainPosition += (2.0 * Math.random() - 1) * this.positionVar;\n\n        var bufferDuration = this.bufferDuration;\n\n        // wrap or clip grain position and duration into buffer duration\n        if (grainPosition < 0 || grainPosition >= bufferDuration) {\n          if (this.cyclic) {\n            var cycles = grainPosition / bufferDuration;\n            grainPosition = (cycles - Math.floor(cycles)) * bufferDuration;\n\n            if (grainPosition + grainDuration > this.buffer.duration) grainDuration = this.buffer.duration - grainPosition;\n          } else {\n            if (grainPosition < 0) {\n              grainTime -= grainPosition;\n              grainDuration += grainPosition;\n              grainPosition = 0;\n            }\n\n            if (grainPosition + grainDuration > bufferDuration) grainDuration = bufferDuration - grainPosition;\n          }\n        }\n\n        // make grain\n        if (this.gain > 0 && grainDuration >= 0.001) {\n          // make grain envelope\n          var envelope = audioContext.createGain();\n          var attack = this.attackAbs + this.attackRel * grainDuration;\n          var release = this.releaseAbs + this.releaseRel * grainDuration;\n\n          if (attack + release > grainDuration) {\n            var factor = grainDuration / (attack + release);\n            attack *= factor;\n            release *= factor;\n          }\n\n          var attackEndTime = grainTime + attack;\n          var grainEndTime = grainTime + grainDuration / resamplingRate;\n          var releaseStartTime = grainEndTime - release;\n\n          envelope.gain.value = 0;\n\n          if (this.attackShape === 'lin') {\n            envelope.gain.setValueAtTime(0.0, grainTime);\n            envelope.gain.linearRampToValueAtTime(this.gain, attackEndTime);\n          } else {\n            envelope.gain.setValueAtTime(this.expRampOffset, grainTime);\n            envelope.gain.exponentialRampToValueAtTime(this.gain, attackEndTime);\n          }\n\n          if (releaseStartTime > attackEndTime) envelope.gain.setValueAtTime(this.gain, releaseStartTime);\n\n          if (this.releaseShape === 'lin') {\n            envelope.gain.linearRampToValueAtTime(0.0, grainEndTime);\n          } else {\n            envelope.gain.exponentialRampToValueAtTime(this.expRampOffset, grainEndTime);\n          }\n\n          envelope.connect(this.outputNode);\n\n          // make source\n          var source = audioContext.createBufferSource();\n\n          source.buffer = this.buffer;\n          source.playbackRate.value = resamplingRate;\n          source.connect(envelope);\n\n          source.start(grainTime, grainPosition);\n          source.stop(grainEndTime);\n        }\n      }\n\n      return grainPeriod;\n    }\n  }, {\n    key: 'bufferDuration',\n    get: function get() {\n      if (this.buffer) {\n        var bufferDuration = this.buffer.duration;\n\n        if (this.wrapAroundExtension) bufferDuration -= this.wrapAroundExtension;\n\n        return bufferDuration;\n      }\n\n      return 0;\n    }\n\n    // TimeEngine attribute\n\n  }, {\n    key: 'currentPosition',\n    get: function get() {\n      var master = this.master;\n\n      if (master && master.currentPosition !== undefined) return master.currentPosition;\n\n      return this.position;\n    }\n  }]);\n  return GranularEngine;\n}(_audioTimeEngine2.default);\n\nexports.default = GranularEngine;\n//# sourceMappingURL=data:application/json;base64,//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(1);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(2);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(11);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(10);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _audioTimeEngine = __webpack_require__(27);\n\nvar _audioTimeEngine2 = _interopRequireDefault(_audioTimeEngine);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction optOrDef(opt, def) {\n  if (opt !== undefined) return opt;\n\n  return def;\n}\n\nvar Metronome = function (_AudioTimeEngine) {\n  (0, _inherits3.default)(Metronome, _AudioTimeEngine);\n\n  function Metronome() {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    (0, _classCallCheck3.default)(this, Metronome);\n\n\n    /**\n     * Metronome period\n     * @type {Number}\n     */\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(Metronome).call(this, options.audioContext));\n\n    _this.__period = optOrDef(options.period, 1);\n\n    /**\n     * Metronome click frequency\n     * @type {Number}\n     */\n    _this.clickFreq = optOrDef(options.clickFreq, 600);\n\n    /**\n     * Metronome click attack time\n     * @type {Number}\n     */\n    _this.clickAttack = optOrDef(options.clickAttack, 0.002);\n\n    /**\n     * Metronome click release time\n     * @type {Number}\n     */\n    _this.clickRelease = optOrDef(options.clickRelease, 0.098);\n\n    _this.__lastTime = 0;\n    _this.__phase = 0;\n\n    _this.__gainNode = _this.audioContext.createGain();\n    _this.__gainNode.gain.value = optOrDef(options.gain, 1);\n\n    _this.outputNode = _this.__gainNode;\n    return _this;\n  }\n\n  // TimeEngine method (scheduled interface)\n\n\n  (0, _createClass3.default)(Metronome, [{\n    key: 'advanceTime',\n    value: function advanceTime(time) {\n      this.trigger(time);\n      this.__lastTime = time;\n      return time + this.__period;\n    }\n\n    // TimeEngine method (transported interface)\n\n  }, {\n    key: 'syncPosition',\n    value: function syncPosition(time, position, speed) {\n      if (this.__period > 0) {\n        var nextPosition = (Math.floor(position / this.__period) + this.__phase) * this.__period;\n\n        if (speed > 0 && nextPosition < position) nextPosition += this.__period;else if (speed < 0 && nextPosition > position) nextPosition -= this.__period;\n\n        return nextPosition;\n      }\n\n      return Infinity * speed;\n    }\n\n    // TimeEngine method (transported interface)\n\n  }, {\n    key: 'advancePosition',\n    value: function advancePosition(time, position, speed) {\n      this.trigger(time);\n\n      if (speed < 0) return position - this.__period;\n\n      return position + this.__period;\n    }\n\n    /**\n     * Trigger metronome click\n     * @param {Number} time metronome click synthesis audio time\n     */\n\n  }, {\n    key: 'trigger',\n    value: function trigger(time) {\n      var audioContext = this.audioContext;\n      var clickAttack = this.clickAttack;\n      var clickRelease = this.clickRelease;\n\n      var env = audioContext.createGain();\n      env.gain.value = 0.0;\n      env.gain.setValueAtTime(0, time);\n      env.gain.linearRampToValueAtTime(1.0, time + clickAttack);\n      env.gain.exponentialRampToValueAtTime(0.0000001, time + clickAttack + clickRelease);\n      env.gain.setValueAtTime(0, time);\n      env.connect(this.outputNode);\n\n      var osc = audioContext.createOscillator();\n      osc.frequency.value = this.clickFreq;\n      osc.start(time);\n      osc.stop(time + clickAttack + clickRelease);\n      osc.connect(env);\n    }\n\n    /**\n     * Set gain\n     * @param {Number} value linear gain factor\n     */\n\n  }, {\n    key: 'gain',\n    set: function set(value) {\n      this.__gainNode.gain.value = value;\n    }\n\n    /**\n     * Get gain\n     * @return {Number} current gain\n     */\n    ,\n    get: function get() {\n      return this.__gainNode.gain.value;\n    }\n\n    /**\n     * Set period parameter\n     * @param {Number} period metronome period\n     */\n\n  }, {\n    key: 'period',\n    set: function set(period) {\n      this.__period = period;\n\n      var master = this.master;\n\n      if (master) {\n        if (master.resetEngineTime) master.resetEngineTime(this, this.__lastTime + period);else if (master.resetEnginePosition) master.resetEnginePosition(this);\n      }\n    }\n\n    /**\n     * Get period parameter\n     * @return {Number} value of period parameter\n     */\n    ,\n    get: function get() {\n      return this.__period;\n    }\n\n    /**\n     * Set phase parameter (available only when 'transported')\n     * @param {Number} phase metronome phase [0, 1[\n     */\n\n  }, {\n    key: 'phase',\n    set: function set(phase) {\n      this.__phase = phase - Math.floor(phase);\n\n      var master = this.master;\n\n      if (master && master.resetEnginePosition !== undefined) master.resetEnginePosition(this);\n    }\n\n    /**\n     * Get phase parameter\n     * @return {Number} value of phase parameter\n     */\n    ,\n    get: function get() {\n      return this.__phase;\n    }\n  }]);\n  return Metronome;\n}(_audioTimeEngine2.default);\n\nexports.default = Metronome;\n//# sourceMappingURL=data:application/json;base64,# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(1);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(2);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(11);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(10);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _audioTimeEngine = __webpack_require__(27);\n\nvar _audioTimeEngine2 = _interopRequireDefault(_audioTimeEngine);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction optOrDef(opt, def) {\n  if (opt !== undefined) return opt;\n\n  return def;\n}\n\nvar PlayerEngine = function (_AudioTimeEngine) {\n  (0, _inherits3.default)(PlayerEngine, _AudioTimeEngine);\n\n  function PlayerEngine() {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    (0, _classCallCheck3.default)(this, PlayerEngine);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(PlayerEngine).call(this, options.audioContext));\n\n    _this.transport = null; // set when added to transporter\n\n    /**\n     * Audio buffer\n     * @type {AudioBuffer}\n     */\n    _this.buffer = optOrDef(options.buffer, null);\n\n    /**\n     * Fade time for chaining segments (e.g. in start, stop, and seek)\n     * @type {AudioBuffer}\n     */\n    _this.fadeTime = optOrDef(options.fadeTime, 0.005);\n\n    _this.__time = 0;\n    _this.__position = 0;\n    _this.__speed = 0;\n\n    _this.__bufferSource = null;\n    _this.__envNode = null;\n\n    _this.__gainNode = _this.audioContext.createGain();\n    _this.__gainNode.gain.value = optOrDef(options.gain, 1);\n\n    _this.__cyclic = optOrDef(options.cyclic, false);\n\n    _this.outputNode = _this.__gainNode;\n    return _this;\n  }\n\n  (0, _createClass3.default)(PlayerEngine, [{\n    key: '__start',\n    value: function __start(time, position, speed) {\n      var audioContext = this.audioContext;\n\n      if (this.buffer) {\n        var bufferDuration = this.buffer.duration;\n\n        if (this.__cyclic && (position < 0 || position >= bufferDuration)) {\n          var phase = position / bufferDuration;\n          position = (phase - Math.floor(phase)) * bufferDuration;\n        }\n\n        if (position >= 0 && position < bufferDuration && speed > 0) {\n          this.__envNode = audioContext.createGain();\n          this.__envNode.gain.setValueAtTime(0, time);\n          this.__envNode.gain.linearRampToValueAtTime(1, time + this.fadeTime);\n          this.__envNode.connect(this.__gainNode);\n\n          this.__bufferSource = audioContext.createBufferSource();\n          this.__bufferSource.buffer = this.buffer;\n          this.__bufferSource.playbackRate.value = speed;\n          this.__bufferSource.loop = this.__cyclic;\n          this.__bufferSource.loopStart = 0;\n          this.__bufferSource.loopEnd = bufferDuration;\n          this.__bufferSource.start(time, position);\n          this.__bufferSource.connect(this.__envNode);\n        }\n      }\n    }\n  }, {\n    key: '__halt',\n    value: function __halt(time) {\n      if (this.__bufferSource) {\n        this.__envNode.gain.cancelScheduledValues(time);\n        this.__envNode.gain.setValueAtTime(this.__envNode.gain.value, time);\n        this.__envNode.gain.linearRampToValueAtTime(0, time + this.fadeTime);\n        this.__bufferSource.stop(time + this.fadeTime);\n\n        this.__bufferSource = null;\n        this.__envNode = null;\n      }\n    }\n\n    // TimeEngine method (speed-controlled interface)\n\n  }, {\n    key: 'syncSpeed',\n    value: function syncSpeed(time, position, speed) {\n      var seek = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\n      var lastSpeed = this.__speed;\n\n      if (speed !== lastSpeed || seek) {\n        if (seek || lastSpeed * speed < 0) {\n          this.__halt(time);\n          this.__start(time, position, speed);\n        } else if (lastSpeed === 0 || seek) {\n          this.__start(time, position, speed);\n        } else if (speed === 0) {\n          this.__halt(time);\n        } else if (this.__bufferSource) {\n          this.__bufferSource.playbackRate.setValueAtTime(speed, time);\n        }\n\n        this.__speed = speed;\n      }\n    }\n\n    /**\n     * Set whether the audio buffer is considered as cyclic\n     * @param {Bool} cyclic whether the audio buffer is considered as cyclic\n     */\n\n  }, {\n    key: 'cyclic',\n    set: function set(cyclic) {\n      if (cyclic !== this.__cyclic) {\n        var time = this.currentTime;\n        var position = this.currentosition;\n\n        this.__halt(time);\n        this.__cyclic = cyclic;\n\n        if (this.__speed !== 0) this.__start(time, position, this.__speed);\n      }\n    }\n\n    /**\n     * Get whether the audio buffer is considered as cyclic\n     * @return {Bool} whether the audio buffer is considered as cyclic\n     */\n    ,\n    get: function get() {\n      return this.__cyclic;\n    }\n\n    /**\n     * Set gain\n     * @param {Number} value linear gain factor\n     */\n\n  }, {\n    key: 'gain',\n    set: function set(value) {\n      var time = this.currentTime;\n      this.__gainNode.cancelScheduledValues(time);\n      this.__gainNode.setValueAtTime(this.__gainNode.gain.value, time);\n      this.__gainNode.linearRampToValueAtTime(0, time + this.fadeTime);\n    }\n\n    /**\n     * Get gain\n     * @return {Number} current gain\n     */\n    ,\n    get: function get() {\n      return this.__gainNode.gain.value;\n    }\n\n    /**\n     * Get buffer duration\n     * @return {Number} current buffer duration\n     */\n\n  }, {\n    key: 'bufferDuration',\n    get: function get() {\n      if (this.buffer) return this.buffer.duration;\n\n      return 0;\n    }\n  }]);\n  return PlayerEngine;\n}(_audioTimeEngine2.default);\n\nexports.default = PlayerEngine;\n//# sourceMappingURL=data:application/json;base64,# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(1);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(2);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(11);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(10);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _audioTimeEngine = __webpack_require__(27);\n\nvar _audioTimeEngine2 = _interopRequireDefault(_audioTimeEngine);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction optOrDef(opt, def) {\n  if (opt !== undefined) return opt;\n\n  return def;\n}\n\nfunction getCurrentOrPreviousIndex(sortedArray, value) {\n  var index = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\n  var size = sortedArray.length;\n\n  if (size > 0) {\n    var firstVal = sortedArray[0];\n    var lastVal = sortedArray[size - 1];\n\n    if (value < firstVal) index = -1;else if (value >= lastVal) index = size - 1;else {\n      if (index < 0 || index >= size) index = Math.floor((size - 1) * (value - firstVal) / (lastVal - firstVal));\n\n      while (sortedArray[index] > value) {\n        index--;\n      }while (sortedArray[index + 1] <= value) {\n        index++;\n      }\n    }\n  }\n\n  return index;\n}\n\nfunction getCurrentOrNextIndex(sortedArray, value) {\n  var index = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\n  var size = sortedArray.length;\n\n  if (size > 0) {\n    var firstVal = sortedArray[0];\n    var lastVal = sortedArray[size - 1];\n\n    if (value <= firstVal) index = 0;else if (value >= lastVal) index = size;else {\n      if (index < 0 || index >= size) index = Math.floor((size - 1) * (value - firstVal) / (lastVal - firstVal));\n\n      while (sortedArray[index] < value) {\n        index++;\n      }while (sortedArray[index + 1] >= value) {\n        index--;\n      }\n    }\n  }\n\n  return index;\n}\n\n/**\n * @class SegmentEngine\n */\n\nvar SegmentEngine = function (_AudioTimeEngine) {\n  (0, _inherits3.default)(SegmentEngine, _AudioTimeEngine);\n\n  /**\n   * @constructor\n   * @param {AudioBuffer} buffer initial audio buffer for granular synthesis\n   *\n   * The engine implements the \"scheduled\" and \"transported\" interfaces.\n   * When \"scheduled\", the engine  generates segments more or less periodically\n   * (controlled by the periodAbs, periodRel, and perioVar attributes).\n   * When \"transported\", the engine generates segments at the position of their onset time.\n   */\n\n  function SegmentEngine() {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    (0, _classCallCheck3.default)(this, SegmentEngine);\n\n\n    /**\n     * Audio buffer\n     * @type {AudioBuffer}\n     */\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(SegmentEngine).call(this, options.audioContext));\n\n    _this.buffer = optOrDef(options.buffer, null);\n\n    /**\n     * Absolute segment period in sec\n     * @type {Number}\n     */\n    _this.periodAbs = optOrDef(options.periodAbs, 0);\n\n    /**\n     * Segment period relative to inter-segment distance\n     * @type {Number}\n     */\n    _this.periodRel = optOrDef(options.periodRel, 1);\n\n    /**\n     * Amout of random segment period variation relative to segment period\n     * @type {Number}\n     */\n    _this.periodVar = optOrDef(options.periodVar, 0);\n\n    /**\n     * Array of segment positions (onset times in audio buffer) in sec\n     * @type {Number}\n     */\n    _this.positionArray = optOrDef(options.positionArray, [0.0]);\n\n    /**\n     * Amout of random segment position variation in sec\n     * @type {Number}\n     */\n    _this.positionVar = optOrDef(options.positionVar, 0);\n\n    /**\n     * Array of segment durations in sec\n     * @type {Number}\n     */\n    _this.durationArray = optOrDef(options.durationArray, [0.0]);\n\n    /**\n     * Absolute segment duration in sec\n     * @type {Number}\n     */\n    _this.durationAbs = optOrDef(options.durationAbs, 0);\n\n    /**\n     * Segment duration relative to given segment duration or inter-segment distance\n     * @type {Number}\n     */\n    _this.durationRel = optOrDef(options.durationRel, 1);\n\n    /**\n     * Array of segment offsets in sec\n     * @type {Number}\n     *\n     * offset > 0: the segment's reference position is after the given segment position\n     * offset < 0: the given segment position is the segment's reference position and the duration has to be corrected by the offset\n     */\n    _this.offsetArray = optOrDef(options.offsetArray, [0.0]);\n\n    /**\n     * Absolute segment offset in sec\n     * @type {Number}\n     */\n    _this.offsetAbs = optOrDef(options.offsetAbs, -0.005);\n\n    /**\n     * Segment offset relative to segment duration\n     * @type {Number}\n     */\n    _this.offsetRel = optOrDef(options.offsetRel, 0);\n\n    /**\n     * Time by which all segments are delayed (especially to realize segment offsets)\n     * @type {Number}\n     */\n    _this.delay = optOrDef(options.delay, 0.005);\n\n    /**\n     * Absolute attack time in sec\n     * @type {Number}\n     */\n    _this.attackAbs = optOrDef(options.attackAbs, 0.005);\n\n    /**\n     * Attack time relative to segment duration\n     * @type {Number}\n     */\n    _this.attackRel = optOrDef(options.attackRel, 0);\n\n    /**\n     * Absolute release time in sec\n     * @type {Number}\n     */\n    _this.releaseAbs = optOrDef(options.releaseAbs, 0.005);\n\n    /**\n     * Release time relative to segment duration\n     * @type {Number}\n     */\n    _this.releaseRel = optOrDef(options.releaseRel, 0);\n\n    /**\n     * Segment resampling in cent\n     * @type {Number}\n     */\n    _this.resampling = optOrDef(options.resampling, 0);\n\n    /**\n     * Amout of random resampling variation in cent\n     * @type {Number}\n     */\n    _this.resamplingVar = optOrDef(options.resamplingVar, 0);\n\n    /**\n     * Linear gain factor\n     * @type {Number}\n     */\n    _this.gain = optOrDef(options.gain, 1);\n\n    /**\n     * Index of the segment to synthesize (i.e. of this.positionArray/durationArray/offsetArray)\n     * @type {Number}\n     */\n    _this.segmentIndex = optOrDef(options.segmentIndex, 0);\n\n    /**\n     * Whether the audio buffer and segment indices are considered as cyclic\n     * @type {Bool}\n     */\n    _this.cyclic = optOrDef(options.cyclic, false);\n    _this.__cyclicOffset = 0;\n\n    /**\n     * Portion at the end of the audio buffer that has been copied from the beginning to assure cyclic behavior\n     * @type {Number}\n     */\n    _this.wrapAroundExtension = optOrDef(options.wrapAroundExtension, 0);\n\n    _this.outputNode = _this.audioContext.createGain();\n    return _this;\n  }\n\n  /**\n   * Get buffer duration (excluding wrapAroundExtension)\n   * @return {Number} current buffer duration\n   */\n\n\n  (0, _createClass3.default)(SegmentEngine, [{\n    key: 'advanceTime',\n\n\n    // TimeEngine method (transported interface)\n    value: function advanceTime(time) {\n      time = Math.max(time, this.audioContext.currentTime);\n      return time + this.trigger(time);\n    }\n\n    // TimeEngine method (transported interface)\n\n  }, {\n    key: 'syncPosition',\n    value: function syncPosition(time, position, speed) {\n      var index = this.segmentIndex;\n      var cyclicOffset = 0;\n      var bufferDuration = this.bufferDuration;\n\n      if (this.cyclic) {\n        var cycles = position / bufferDuration;\n\n        cyclicOffset = Math.floor(cycles) * bufferDuration;\n        position -= cyclicOffset;\n      }\n\n      if (speed > 0) {\n        index = getCurrentOrNextIndex(this.positionArray, position);\n\n        if (index >= this.positionArray.length) {\n          index = 0;\n          cyclicOffset += bufferDuration;\n\n          if (!this.cyclic) return Infinity;\n        }\n      } else if (speed < 0) {\n        index = getCurrentOrPreviousIndex(this.positionArray, position);\n\n        if (index < 0) {\n          index = this.positionArray.length - 1;\n          cyclicOffset -= bufferDuration;\n\n          if (!this.cyclic) return -Infinity;\n        }\n      } else {\n        return Infinity;\n      }\n\n      this.segmentIndex = index;\n      this.__cyclicOffset = cyclicOffset;\n\n      return cyclicOffset + this.positionArray[index];\n    }\n\n    // TimeEngine method (transported interface)\n\n  }, {\n    key: 'advancePosition',\n    value: function advancePosition(time, position, speed) {\n      var index = this.segmentIndex;\n      var cyclicOffset = this.__cyclicOffset;\n\n      this.trigger(time);\n\n      if (speed > 0) {\n        index++;\n\n        if (index >= this.positionArray.length) {\n          index = 0;\n          cyclicOffset += this.bufferDuration;\n\n          if (!this.cyclic) return Infinity;\n        }\n      } else {\n        index--;\n\n        if (index < 0) {\n          index = this.positionArray.length - 1;\n          cyclicOffset -= this.bufferDuration;\n\n          if (!this.cyclic) return -Infinity;\n        }\n      }\n\n      this.segmentIndex = index;\n      this.__cyclicOffset = cyclicOffset;\n\n      return cyclicOffset + this.positionArray[index];\n    }\n\n    /**\n     * Trigger a segment\n     * @param {Number} time segment synthesis audio time\n     * @return {Number} period to next segment\n     *\n     * This function can be called at any time (whether the engine is scheduled/transported or not)\n     * to generate a single segment according to the current segment parameters.\n     */\n\n  }, {\n    key: 'trigger',\n    value: function trigger(time) {\n      var audioContext = this.audioContext;\n      var segmentTime = (time || audioContext.currentTime) + this.delay;\n      var segmentPeriod = this.periodAbs;\n      var segmentIndex = this.segmentIndex;\n\n      if (this.buffer) {\n        var segmentPosition = 0.0;\n        var segmentDuration = 0.0;\n        var segmentOffset = 0.0;\n        var resamplingRate = 1.0;\n        var bufferDuration = this.bufferDuration;\n\n        if (this.cyclic) segmentIndex = segmentIndex % this.positionArray.length;else segmentIndex = Math.max(0, Math.min(segmentIndex, this.positionArray.length - 1));\n\n        if (this.positionArray) segmentPosition = this.positionArray[segmentIndex] || 0;\n\n        if (this.durationArray) segmentDuration = this.durationArray[segmentIndex] || 0;\n\n        if (this.offsetArray) segmentOffset = this.offsetArray[segmentIndex] || 0;\n\n        // calculate resampling\n        if (this.resampling !== 0 || this.resamplingVar > 0) {\n          var randomResampling = (Math.random() - 0.5) * 2.0 * this.resamplingVar;\n          resamplingRate = Math.pow(2.0, (this.resampling + randomResampling) / 1200.0);\n        }\n\n        // calculate inter-segment distance\n        if (segmentDuration === 0 || this.periodRel > 0) {\n          var nextSegementIndex = segmentIndex + 1;\n          var nextPosition, nextOffset;\n\n          if (nextSegementIndex === this.positionArray.length) {\n            if (this.cyclic) {\n              nextPosition = this.positionArray[0] + bufferDuration;\n              nextOffset = this.offsetArray[0];\n            } else {\n              nextPosition = bufferDuration;\n              nextOffset = 0;\n            }\n          } else {\n            nextPosition = this.positionArray[nextSegementIndex];\n            nextOffset = this.offsetArray[nextSegementIndex];\n          }\n\n          var interSegmentDistance = nextPosition - segmentPosition;\n\n          // correct inter-segment distance by offsets\n          //   offset > 0: the segment's reference position is after the given segment position\n          if (segmentOffset > 0) interSegmentDistance -= segmentOffset;\n\n          if (nextOffset > 0) interSegmentDistance += nextOffset;\n\n          if (interSegmentDistance < 0) interSegmentDistance = 0;\n\n          // use inter-segment distance instead of segment duration\n          if (segmentDuration === 0) segmentDuration = interSegmentDistance;\n\n          // calculate period relative to inter marker distance\n          segmentPeriod += this.periodRel * interSegmentDistance;\n        }\n\n        // add relative and absolute segment duration\n        segmentDuration *= this.durationRel;\n        segmentDuration += this.durationAbs;\n\n        // add relative and absolute segment offset\n        segmentOffset *= this.offsetRel;\n        segmentOffset += this.offsetAbs;\n\n        // apply segment offset\n        //   offset > 0: the segment's reference position is after the given segment position\n        //   offset < 0: the given segment position is the segment's reference position and the duration has to be corrected by the offset\n        if (segmentOffset < 0) {\n          segmentDuration -= segmentOffset;\n          segmentPosition += segmentOffset;\n          segmentTime += segmentOffset / resamplingRate;\n        } else {\n          segmentTime -= segmentOffset / resamplingRate;\n        }\n\n        // randomize segment position\n        if (this.positionVar > 0) segmentPosition += 2.0 * (Math.random() - 0.5) * this.positionVar;\n\n        // shorten duration of segments over the edges of the buffer\n        if (segmentPosition < 0) {\n          //segmentTime -= grainPosition; hm, not sure if we want to do this\n          segmentDuration += segmentPosition;\n          segmentPosition = 0;\n        }\n\n        if (segmentPosition + segmentDuration > this.buffer.duration) segmentDuration = this.buffer.duration - segmentPosition;\n\n        segmentDuration /= resamplingRate;\n\n        // make segment\n        if (this.gain > 0 && segmentDuration > 0) {\n          // make segment envelope\n          var envelope = audioContext.createGain();\n          var attack = this.attackAbs + this.attackRel * segmentDuration;\n          var release = this.releaseAbs + this.releaseRel * segmentDuration;\n\n          if (attack + release > segmentDuration) {\n            var factor = segmentDuration / (attack + release);\n            attack *= factor;\n            release *= factor;\n          }\n\n          var attackEndTime = segmentTime + attack;\n          var segmentEndTime = segmentTime + segmentDuration;\n          var releaseStartTime = segmentEndTime - release;\n\n          envelope.gain.value = 0;\n          envelope.gain.setValueAtTime(0.0, segmentTime);\n          envelope.gain.linearRampToValueAtTime(this.gain, attackEndTime);\n\n          if (releaseStartTime > attackEndTime) envelope.gain.setValueAtTime(this.gain, releaseStartTime);\n\n          envelope.gain.linearRampToValueAtTime(0.0, segmentEndTime);\n          envelope.connect(this.outputNode);\n\n          // make source\n          var source = audioContext.createBufferSource();\n\n          source.buffer = this.buffer;\n          source.playbackRate.value = resamplingRate;\n          source.connect(envelope);\n\n          source.start(segmentTime, segmentPosition);\n          source.stop(segmentTime + segmentDuration);\n        }\n      }\n\n      return segmentPeriod;\n    }\n  }, {\n    key: 'bufferDuration',\n    get: function get() {\n      if (this.buffer) {\n        var bufferDuration = this.buffer.duration;\n\n        if (this.wrapAroundExtension) bufferDuration -= this.wrapAroundExtension;\n\n        return bufferDuration;\n      }\n\n      return 0;\n    }\n  }]);\n  return SegmentEngine;\n}(_audioTimeEngine2.default);\n\nexports.default = SegmentEngine;\n//# sourceMappingURL=data:application/json;base64,# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _audioContext = __webpack_require__(18);\n\nObject.defineProperty(exports, 'audioContext', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_audioContext).default;\n  }\n});\n\nvar _timeEngine = __webpack_require__(22);\n\nObject.defineProperty(exports, 'TimeEngine', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_timeEngine).default;\n  }\n});\n\nvar _audioTimeEngine = __webpack_require__(27);\n\nObject.defineProperty(exports, 'AudioTimeEngine', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_audioTimeEngine).default;\n  }\n});\n\nvar _priorityQueue = __webpack_require__(66);\n\nObject.defineProperty(exports, 'PriorityQueue', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_priorityQueue).default;\n  }\n});\n\nvar _schedulingQueue = __webpack_require__(40);\n\nObject.defineProperty(exports, 'SchedulingQueue', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_schedulingQueue).default;\n  }\n});\n\nvar _granularEngine = __webpack_require__(168);\n\nObject.defineProperty(exports, 'GranularEngine', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_granularEngine).default;\n  }\n});\n\nvar _metronome = __webpack_require__(169);\n\nObject.defineProperty(exports, 'Metronome', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_metronome).default;\n  }\n});\n\nvar _playerEngine = __webpack_require__(170);\n\nObject.defineProperty(exports, 'PlayerEngine', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_playerEngine).default;\n  }\n});\n\nvar _segmentEngine = __webpack_require__(171);\n\nObject.defineProperty(exports, 'SegmentEngine', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_segmentEngine).default;\n  }\n});\n\nvar _playControl = __webpack_require__(173);\n\nObject.defineProperty(exports, 'PlayControl', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_playControl).default;\n  }\n});\n\nvar _transport = __webpack_require__(174);\n\nObject.defineProperty(exports, 'Transport', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_transport).default;\n  }\n});\n\nvar _scheduler = __webpack_require__(92);\n\nObject.defineProperty(exports, 'Scheduler', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_scheduler).default;\n  }\n});\n\nvar _simpleScheduler = __webpack_require__(93);\n\nObject.defineProperty(exports, 'SimpleScheduler', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_simpleScheduler).default;\n  }\n});\n\nvar _factories = __webpack_require__(67);\n\nObject.defineProperty(exports, 'getScheduler', {\n  enumerable: true,\n  get: function get() {\n    return _factories.getScheduler;\n  }\n});\nObject.defineProperty(exports, 'getSimpleScheduler', {\n  enumerable: true,\n  get: function get() {\n    return _factories.getSimpleScheduler;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O2lEQUNTOzs7Ozs7Ozs7K0NBQ0E7Ozs7Ozs7OztvREFDQTs7Ozs7Ozs7O2tEQUNBOzs7Ozs7Ozs7b0RBQ0E7Ozs7Ozs7OzttREFHQTs7Ozs7Ozs7OzhDQUNBOzs7Ozs7Ozs7aURBQ0E7Ozs7Ozs7OztrREFDQTs7Ozs7Ozs7O2dEQUdBOzs7Ozs7Ozs7OENBQ0E7Ozs7Ozs7Ozs4Q0FDQTs7Ozs7Ozs7O29EQUNBOzs7Ozs7Ozs7c0JBR0E7Ozs7OztzQkFDQSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGNvcmVcbmV4cG9ydCB7IGRlZmF1bHQgYXMgYXVkaW9Db250ZXh0IH0gZnJvbSAnLi9jb3JlL2F1ZGlvLWNvbnRleHQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBUaW1lRW5naW5lIH0gZnJvbSAnLi9jb3JlL3RpbWUtZW5naW5lJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQXVkaW9UaW1lRW5naW5lIH0gZnJvbSAnLi9jb3JlL2F1ZGlvLXRpbWUtZW5naW5lJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgUHJpb3JpdHlRdWV1ZSB9IGZyb20gJy4vY29yZS9wcmlvcml0eS1xdWV1ZSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFNjaGVkdWxpbmdRdWV1ZSB9IGZyb20gJy4vY29yZS9zY2hlZHVsaW5nLXF1ZXVlJztcblxuLy8gZW5naW5lc1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBHcmFudWxhckVuZ2luZSB9IGZyb20gJy4vZW5naW5lcy9ncmFudWxhci1lbmdpbmUnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBNZXRyb25vbWUgfSBmcm9tICcuL2VuZ2luZXMvbWV0cm9ub21lJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgUGxheWVyRW5naW5lIH0gZnJvbSAnLi9lbmdpbmVzL3BsYXllci1lbmdpbmUnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBTZWdtZW50RW5naW5lIH0gZnJvbSAnLi9lbmdpbmVzL3NlZ21lbnQtZW5naW5lJztcblxuLy8gbWFzdGVyc1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBQbGF5Q29udHJvbCB9IGZyb20gJy4vbWFzdGVycy9wbGF5LWNvbnRyb2wnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBUcmFuc3BvcnQgfSBmcm9tICcuL21hc3RlcnMvdHJhbnNwb3J0JztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgU2NoZWR1bGVyIH0gZnJvbSAnLi9tYXN0ZXJzL3NjaGVkdWxlcic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFNpbXBsZVNjaGVkdWxlciB9IGZyb20gJy4vbWFzdGVycy9zaW1wbGUtc2NoZWR1bGVyJztcblxuLy8gZmFjdG9yaWVzXG5leHBvcnQgeyBnZXRTY2hlZHVsZXIgfSBmcm9tICcuL21hc3RlcnMvZmFjdG9yaWVzJztcbmV4cG9ydCB7IGdldFNpbXBsZVNjaGVkdWxlciB9IGZyb20gJy4vbWFzdGVycy9mYWN0b3JpZXMnO1xuIl19//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _get2 = __webpack_require__(78);\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(1);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(2);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(11);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(10);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _audioContext = __webpack_require__(18);\n\nvar _audioContext2 = _interopRequireDefault(_audioContext);\n\nvar _schedulingQueue = __webpack_require__(40);\n\nvar _schedulingQueue2 = _interopRequireDefault(_schedulingQueue);\n\nvar _timeEngine = __webpack_require__(22);\n\nvar _timeEngine2 = _interopRequireDefault(_timeEngine);\n\nvar _factories = __webpack_require__(67);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ESPILON = 1e-8;\n\nvar LoopControl = function (_TimeEngine) {\n  (0, _inherits3.default)(LoopControl, _TimeEngine);\n\n  function LoopControl(playControl) {\n    (0, _classCallCheck3.default)(this, LoopControl);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(LoopControl).call(this));\n\n    _this.__playControl = playControl;\n    _this.lower = -Infinity;\n    _this.upper = Infinity;\n    return _this;\n  }\n\n  // TimeEngine method (scheduled interface)\n\n\n  (0, _createClass3.default)(LoopControl, [{\n    key: 'advanceTime',\n    value: function advanceTime(time) {\n      var playControl = this.__playControl;\n      var speed = playControl.speed;\n      var lower = this.lower;\n      var upper = this.upper;\n\n      if (speed > 0) time += ESPILON;else time -= EPSILON;\n\n      if (speed > 0) {\n        playControl.syncSpeed(time, lower, speed, true);\n        return playControl.__getTimeAtPosition(upper) - ESPILON;\n      } else if (speed < 0) {\n        playControl.syncSpeed(time, upper, speed, true);\n        return playControl.__getTimeAtPosition(lower) + ESPILON;\n      }\n\n      return Infinity;\n    }\n  }, {\n    key: 'reschedule',\n    value: function reschedule(speed) {\n      var playControl = this.__playControl;\n      var lower = Math.min(playControl.__loopStart, playControl.__loopEnd);\n      var upper = Math.max(playControl.__loopStart, playControl.__loopEnd);\n\n      this.speed = speed;\n      this.lower = lower;\n      this.upper = upper;\n\n      if (lower === upper) speed = 0;\n\n      if (speed > 0) this.resetTime(playControl.__getTimeAtPosition(upper) - ESPILON);else if (speed < 0) this.resetTime(playControl.__getTimeAtPosition(lower) + ESPILON);else this.resetTime(Infinity);\n    }\n  }, {\n    key: 'applyLoopBoundaries',\n    value: function applyLoopBoundaries(position, speed) {\n      var lower = this.lower;\n      var upper = this.upper;\n\n      if (speed > 0 && position >= upper) return lower + (position - lower) % (upper - lower);else if (speed < 0 && position < lower) return upper - (upper - position) % (upper - lower);\n\n      return position;\n    }\n  }]);\n  return LoopControl;\n}(_timeEngine2.default);\n\n// play controlled base class\n\n\nvar PlayControlled = function () {\n  function PlayControlled(playControl, engine) {\n    (0, _classCallCheck3.default)(this, PlayControlled);\n\n    this.__playControl = playControl;\n\n    engine.master = this;\n    this.__engine = engine;\n  }\n\n  (0, _createClass3.default)(PlayControlled, [{\n    key: 'syncSpeed',\n    value: function syncSpeed(time, position, speed, seek, lastSpeed) {\n      this.__engine.syncSpeed(time, position, speed, seek);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.__playControl = null;\n\n      this.__engine.master = null;\n      this.__engine = null;\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      return this.__playControl.currentTime;\n    }\n  }, {\n    key: 'currentPosition',\n    get: function get() {\n      return this.__playControl.currentPosition;\n    }\n  }]);\n  return PlayControlled;\n}();\n\n// play control for engines implementing the *speed-controlled* interface\n\n\nvar PlayControlledSpeedControlled = function (_PlayControlled) {\n  (0, _inherits3.default)(PlayControlledSpeedControlled, _PlayControlled);\n\n  function PlayControlledSpeedControlled(playControl, engine) {\n    (0, _classCallCheck3.default)(this, PlayControlledSpeedControlled);\n    return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(PlayControlledSpeedControlled).call(this, playControl, engine));\n  }\n\n  return PlayControlledSpeedControlled;\n}(PlayControlled);\n\n// play control for engines implmenting the *transported* interface\n\n\nvar PlayControlledTransported = function (_PlayControlled2) {\n  (0, _inherits3.default)(PlayControlledTransported, _PlayControlled2);\n\n  function PlayControlledTransported(playControl, engine) {\n    (0, _classCallCheck3.default)(this, PlayControlledTransported);\n\n    var _this3 = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(PlayControlledTransported).call(this, playControl, engine));\n\n    _this3.__schedulerHook = new PlayControlledSchedulerHook(playControl, engine);\n    return _this3;\n  }\n\n  (0, _createClass3.default)(PlayControlledTransported, [{\n    key: 'syncSpeed',\n    value: function syncSpeed(time, position, speed, seek, lastSpeed) {\n      if (speed !== lastSpeed || seek && speed !== 0) {\n        var nextPosition;\n\n        // resync transported engines\n        if (seek || speed * lastSpeed < 0) {\n          // seek or reverse direction\n          nextPosition = this.__engine.syncPosition(time, position, speed);\n        } else if (lastSpeed === 0) {\n          // start\n          nextPosition = this.__engine.syncPosition(time, position, speed);\n        } else if (speed === 0) {\n          // stop\n          nextPosition = Infinity;\n\n          if (this.__engine.syncSpeed) this.__engine.syncSpeed(time, position, 0);\n        } else if (this.__engine.syncSpeed) {\n          // change speed without reversing direction\n          this.__engine.syncSpeed(time, position, speed);\n        }\n\n        this.__schedulerHook.resetPosition(nextPosition);\n      }\n    }\n  }, {\n    key: 'resetEnginePosition',\n    value: function resetEnginePosition(engine) {\n      var position = arguments.length <= 1 || arguments[1] === undefined ? undefined : arguments[1];\n\n      if (position === undefined) {\n        var playControl = this.__playControl;\n        var time = playControl.__sync();\n\n        position = this.__engine.syncPosition(time, playControl.__position, playControl.__speed);\n      }\n\n      this.__schedulerHook.resetPosition(position);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.__schedulerHook.destroy();\n      this.__schedulerHook = null;\n\n      (0, _get3.default)((0, _getPrototypeOf2.default)(PlayControlledTransported.prototype), 'destroy', this).call(this);\n    }\n  }]);\n  return PlayControlledTransported;\n}(PlayControlled);\n\n// play control for time engines implementing the *scheduled* interface\n\n\nvar PlayControlledScheduled = function (_PlayControlled3) {\n  (0, _inherits3.default)(PlayControlledScheduled, _PlayControlled3);\n\n  function PlayControlledScheduled(playControl, engine) {\n    (0, _classCallCheck3.default)(this, PlayControlledScheduled);\n\n\n    // scheduling queue becomes master of engine\n\n    var _this4 = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(PlayControlledScheduled).call(this, playControl, engine));\n\n    engine.master = null;\n    _this4.__schedulingQueue = new PlayControlledSchedulingQueue(playControl, engine);\n    return _this4;\n  }\n\n  (0, _createClass3.default)(PlayControlledScheduled, [{\n    key: 'syncSpeed',\n    value: function syncSpeed(time, position, speed, seek, lastSpeed) {\n      if (lastSpeed === 0 && speed !== 0) // start or seek\n        this.__engine.resetTime();else if (lastSpeed !== 0 && speed === 0) // stop\n        this.__engine.resetTime(Infinity);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.__schedulingQueue.destroy();\n      (0, _get3.default)((0, _getPrototypeOf2.default)(PlayControlledScheduled.prototype), 'destroy', this).call(this);\n    }\n  }]);\n  return PlayControlledScheduled;\n}(PlayControlled);\n\n// translates transported engine advancePosition into global scheduler times\n\n\nvar PlayControlledSchedulerHook = function (_TimeEngine2) {\n  (0, _inherits3.default)(PlayControlledSchedulerHook, _TimeEngine2);\n\n  function PlayControlledSchedulerHook(playControl, engine) {\n    (0, _classCallCheck3.default)(this, PlayControlledSchedulerHook);\n\n    var _this5 = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(PlayControlledSchedulerHook).call(this));\n\n    _this5.__playControl = playControl;\n    _this5.__engine = engine;\n\n    _this5.__nextPosition = Infinity;\n    playControl.__scheduler.add(_this5, Infinity);\n    return _this5;\n  }\n\n  (0, _createClass3.default)(PlayControlledSchedulerHook, [{\n    key: 'advanceTime',\n    value: function advanceTime(time) {\n      var playControl = this.__playControl;\n      var engine = this.__engine;\n      var position = this.__nextPosition;\n      var nextPosition = engine.advancePosition(time, position, playControl.__speed);\n      var nextTime = playControl.__getTimeAtPosition(nextPosition);\n\n      this.__nextPosition = nextPosition;\n      return nextTime;\n    }\n  }, {\n    key: 'resetPosition',\n    value: function resetPosition() {\n      var position = arguments.length <= 0 || arguments[0] === undefined ? this.__nextPosition : arguments[0];\n\n      var time = this.__playControl.__getTimeAtPosition(position);\n      this.__nextPosition = position;\n      this.resetTime(time);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.__playControl.__scheduler.remove(this);\n      this.__playControl = null;\n      this.__engine = null;\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      return this.__playControl.currentTime;\n    }\n  }, {\n    key: 'currentPosition',\n    get: function get() {\n      return this.__playControl.currentPosition;\n    }\n  }]);\n  return PlayControlledSchedulerHook;\n}(_timeEngine2.default);\n\n// internal scheduling queue that returns the current position (and time) of the play control\n\n\nvar PlayControlledSchedulingQueue = function (_SchedulingQueue) {\n  (0, _inherits3.default)(PlayControlledSchedulingQueue, _SchedulingQueue);\n\n  function PlayControlledSchedulingQueue(playControl, engine) {\n    (0, _classCallCheck3.default)(this, PlayControlledSchedulingQueue);\n\n    var _this6 = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(PlayControlledSchedulingQueue).call(this));\n\n    _this6.__playControl = playControl;\n    _this6.__engine = engine;\n\n    _this6.add(engine, Infinity);\n    playControl.__scheduler.add(_this6, Infinity);\n    return _this6;\n  }\n\n  (0, _createClass3.default)(PlayControlledSchedulingQueue, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.__playControl.__scheduler.remove(this);\n      this.remove(this.__engine);\n\n      this.__playControl = null;\n      this.__engine = null;\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      return this.__playControl.currentTime;\n    }\n  }, {\n    key: 'currentPosition',\n    get: function get() {\n      return this.__playControl.currentPosition;\n    }\n  }]);\n  return PlayControlledSchedulingQueue;\n}(_schedulingQueue2.default);\n\n// play control meta-class\n\n\nvar PlayControl = function (_TimeEngine3) {\n  (0, _inherits3.default)(PlayControl, _TimeEngine3);\n\n  function PlayControl(engine) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n    (0, _classCallCheck3.default)(this, PlayControl);\n\n    var _this7 = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(PlayControl).call(this));\n\n    _this7.audioContext = options.audioContext || _audioContext2.default;\n    _this7.__scheduler = (0, _factories.getScheduler)(_this7.audioContext);\n\n    _this7.__playControlled = null;\n\n    _this7.__loopControl = null;\n    _this7.__loopStart = 0;\n    _this7.__loopEnd = 1;\n\n    // synchronized tie, position, and speed\n    _this7.__time = 0;\n    _this7.__position = 0;\n    _this7.__speed = 0;\n\n    // non-zero \"user\" speed\n    _this7.__playingSpeed = 1;\n\n    if (engine) _this7.__setEngine(engine);\n    return _this7;\n  }\n\n  (0, _createClass3.default)(PlayControl, [{\n    key: '__setEngine',\n    value: function __setEngine(engine) {\n      if (engine.master) throw new Error(\"object has already been added to a master\");\n\n      if (_timeEngine2.default.implementsSpeedControlled(engine)) this.__playControlled = new PlayControlledSpeedControlled(this, engine);else if (_timeEngine2.default.implementsTransported(engine)) this.__playControlled = new PlayControlledTransported(this, engine);else if (_timeEngine2.default.implementsScheduled(engine)) this.__playControlled = new PlayControlledScheduled(this, engine);else throw new Error(\"object cannot be added to play control\");\n    }\n  }, {\n    key: '__resetEngine',\n    value: function __resetEngine() {\n      this.__playControlled.destroy();\n      this.__playControlled = null;\n    }\n\n    /**\n     * Calculate/extrapolate playing time for given position\n     * @param {Number} position position\n     * @return {Number} extrapolated time\n     */\n\n  }, {\n    key: '__getTimeAtPosition',\n    value: function __getTimeAtPosition(position) {\n      return this.__time + (position - this.__position) / this.__speed;\n    }\n\n    /**\n     * Calculate/extrapolate playing position for given time\n     * @param {Number} time time\n     * @return {Number} extrapolated position\n     */\n\n  }, {\n    key: '__getPositionAtTime',\n    value: function __getPositionAtTime(time) {\n      return this.__position + (time - this.__time) * this.__speed;\n    }\n  }, {\n    key: '__sync',\n    value: function __sync() {\n      var now = this.currentTime;\n      this.__position += (now - this.__time) * this.__speed;\n      this.__time = now;\n      return now;\n    }\n\n    /**\n     * Get current master time\n     * @return {Number} current time\n     *\n     * This function will be replaced when the play-control is added to a master.\n     */\n\n  }, {\n    key: 'set',\n    value: function set() {\n      var engine = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];\n\n      var time = this.__sync();\n      var speed = this.__speed;\n\n      if (this.__playControlled !== null && this.__playControlled.__engine !== engine) {\n\n        this.syncSpeed(time, this.__position, 0);\n\n        if (this.__playControlled) this.__resetEngine();\n\n        if (this.__playControlled === null && engine !== null) {\n          this.__setEngine(engine);\n\n          if (speed !== 0) this.syncSpeed(time, this.__position, speed);\n        }\n      }\n    }\n  }, {\n    key: 'setLoopBoundaries',\n    value: function setLoopBoundaries(loopStart, loopEnd) {\n      this.__loopStart = loopStart;\n      this.__loopEnd = loopEnd;\n\n      this.loop = this.loop;\n    }\n  }, {\n    key: 'syncSpeed',\n\n\n    // TimeEngine method (speed-controlled interface)\n    value: function syncSpeed(time, position, speed) {\n      var seek = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\n      var lastSpeed = this.__speed;\n\n      if (speed !== lastSpeed || seek) {\n        if ((seek || lastSpeed === 0) && this.__loopControl) position = this.__loopControl.applyLoopBoundaries(position, speed);\n\n        this.__time = time;\n        this.__position = position;\n        this.__speed = speed;\n\n        if (this.__playControlled) this.__playControlled.syncSpeed(time, position, speed, seek, lastSpeed);\n\n        if (this.__loopControl) this.__loopControl.reschedule(speed);\n      }\n    }\n\n    /**\n     * Start playing\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var time = this.__sync();\n      this.syncSpeed(time, this.__position, this.__playingSpeed);\n    }\n\n    /**\n     * Pause playing\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      var time = this.__sync();\n      this.syncSpeed(time, this.__position, 0);\n    }\n\n    /**\n     * Stop playing\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var time = this.__sync();\n      this.syncSpeed(time, this.__position, 0);\n      this.seek(0);\n    }\n\n    /**\n     * Set playing speed\n     * @param {Number} speed playing speed (non-zero speed between -16 and -1/16 or between 1/16 and 16)\n     */\n\n  }, {\n    key: 'seek',\n\n\n    /**\n     * Set (jump to) playing position\n     * @param {Number} position target position\n     */\n    value: function seek(position) {\n      if (position !== this.__position) {\n        var time = this.__sync();\n        this.__position = position;\n        this.syncSpeed(time, position, this.__speed, true);\n      }\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      return this.__scheduler.currentTime;\n    }\n\n    /**\n     * Get current master position\n     * @return {Number} current playing position\n     *\n     * This function will be replaced when the play-control is added to a master.\n     */\n\n  }, {\n    key: 'currentPosition',\n    get: function get() {\n      return this.__position + (this.__scheduler.currentTime - this.__time) * this.__speed;\n    }\n  }, {\n    key: 'loop',\n    set: function set(enable) {\n      if (enable && this.__loopStart > -Infinity && this.__loopEnd < Infinity) {\n        if (!this.__loopControl) {\n          this.__loopControl = new LoopControl(this);\n          this.__scheduler.add(this.__loopControl, Infinity);\n        }\n\n        if (this.__speed !== 0) {\n          var position = this.currentPosition;\n          var lower = Math.min(this.__loopStart, this.__loopEnd);\n          var upper = Math.max(this.__loopStart, this.__loopEnd);\n\n          if (this.__speed > 0 && position > upper) this.seek(upper);else if (this.__speed < 0 && position < lower) this.seek(lower);else this.__loopControl.reschedule(this.__speed);\n        }\n      } else if (this.__loopControl) {\n        this.__scheduler.remove(this.__loopControl);\n        this.__loopControl = null;\n      }\n    },\n    get: function get() {\n      return !!this.__loopControl;\n    }\n  }, {\n    key: 'loopStart',\n    set: function set(loopStart) {\n      this.setLoopBoundaries(loopStart, this.__loopEnd);\n    },\n    get: function get() {\n      return this.__loopStart;\n    }\n  }, {\n    key: 'loopEnd',\n    set: function set(loopEnd) {\n      this.setLoopBoundaries(this.__loopStart, loopEnd);\n    },\n    get: function get() {\n      return this.__loopEnd;\n    }\n  }, {\n    key: 'speed',\n    set: function set(speed) {\n      var time = this.__sync();\n\n      if (speed >= 0) {\n        if (speed < 0.01) speed = 0.01;else if (speed > 100) speed = 100;\n      } else {\n        if (speed < -100) speed = -100;else if (speed > -0.01) speed = -0.01;\n      }\n\n      this.__playingSpeed = speed;\n\n      if (this.__speed !== 0) this.syncSpeed(time, this.__position, speed);\n    }\n\n    /**\n     * Get playing speed\n     * @return current playing speed\n     */\n    ,\n    get: function get() {\n      return this.__playingSpeed;\n    }\n  }]);\n  return PlayControl;\n}(_timeEngine2.default);\n\nexports.default = PlayControl;\n//# sourceMappingURL=data:application/json;base64,# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getIterator2 = __webpack_require__(113);\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nvar _get2 = __webpack_require__(78);\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _getPrototypeOf = __webpack_require__(4);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(1);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(2);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(11);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(10);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _audioContext = __webpack_require__(18);\n\nvar _audioContext2 = _interopRequireDefault(_audioContext);\n\nvar _priorityQueue = __webpack_require__(66);\n\nvar _priorityQueue2 = _interopRequireDefault(_priorityQueue);\n\nvar _schedulingQueue = __webpack_require__(40);\n\nvar _schedulingQueue2 = _interopRequireDefault(_schedulingQueue);\n\nvar _timeEngine = __webpack_require__(22);\n\nvar _timeEngine2 = _interopRequireDefault(_timeEngine);\n\nvar _factories = __webpack_require__(67);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addDuplet(firstArray, secondArray, firstElement, secondElement) {\n  firstArray.push(firstElement);\n  secondArray.push(secondElement);\n}\n\nfunction removeDuplet(firstArray, secondArray, firstElement) {\n  var index = firstArray.indexOf(firstElement);\n\n  if (index >= 0) {\n    var secondElement = secondArray[index];\n\n    firstArray.splice(index, 1);\n    secondArray.splice(index, 1);\n\n    return secondElement;\n  }\n\n  return null;\n}\n\n// The Transported call is the base class of the adapters between\n// different types of engines (i.e. transported, scheduled, play-controlled)\n// The adapters are at the same time masters for the engines added to the transport\n// and transported TimeEngines inserted into the transport's position-based pritority queue.\n\nvar Transported = function (_TimeEngine) {\n  (0, _inherits3.default)(Transported, _TimeEngine);\n\n  function Transported(transport, engine, start, duration, offset) {\n    var stretch = arguments.length <= 5 || arguments[5] === undefined ? 1 : arguments[5];\n    (0, _classCallCheck3.default)(this, Transported);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(Transported).call(this));\n\n    _this.master = transport;\n\n    _this.__engine = engine;\n    engine.master = _this;\n\n    _this.__startPosition = start;\n    _this.__endPosition = !isFinite(duration) ? Infinity : start + duration;\n    _this.__offsetPosition = start + offset;\n    _this.__stretchPosition = stretch;\n    _this.__isRunning = false;\n    return _this;\n  }\n\n  (0, _createClass3.default)(Transported, [{\n    key: 'setBoundaries',\n    value: function setBoundaries(start, duration) {\n      var offset = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n      var stretch = arguments.length <= 3 || arguments[3] === undefined ? 1 : arguments[3];\n\n      this.__startPosition = start;\n      this.__endPosition = start + duration;\n      this.__offsetPosition = start + offset;\n      this.__stretchPosition = stretch;\n      this.resetPosition();\n    }\n  }, {\n    key: 'start',\n    value: function start(time, position, speed) {}\n  }, {\n    key: 'stop',\n    value: function stop(time, position) {}\n  }, {\n    key: 'resetPosition',\n    value: function resetPosition(position) {\n      if (position !== undefined) position += this.__offsetPosition;\n\n      this.master.resetEnginePosition(this, position);\n    }\n  }, {\n    key: 'syncPosition',\n    value: function syncPosition(time, position, speed) {\n      if (speed > 0) {\n        if (position < this.__startPosition) {\n\n          if (this.__isRunning) this.stop(time, position - this.__offsetPosition);\n\n          this.__isRunning = false;\n          return this.__startPosition;\n        } else if (position < this.__endPosition) {\n          this.start(time, position - this.__offsetPosition, speed);\n\n          this.__isRunning = true;\n          return this.__endPosition;\n        }\n      } else {\n        if (position > this.__endPosition) {\n          if (this.__isRunning) // if engine is running\n            this.stop(time, position - this.__offsetPosition);\n\n          this.__isRunning = false;\n          return this.__endPosition;\n        } else if (position > this.__startPosition) {\n          this.start(time, position - this.__offsetPosition, speed);\n\n          this.__isRunning = true;\n          return this.__startPosition;\n        }\n      }\n\n      if (this.__isRunning) // if engine is running\n        this.stop(time, position);\n\n      this.__isRunning = false;\n      return Infinity * speed;\n    }\n  }, {\n    key: 'advancePosition',\n    value: function advancePosition(time, position, speed) {\n      if (!this.__isRunning) {\n        this.start(time, position - this.__offsetPosition, speed);\n        this.__isRunning = true;\n\n        if (speed > 0) return this.__endPosition;\n\n        return this.__startPosition;\n      }\n\n      // stop engine\n      this.stop(time, position - this.__offsetPosition);\n\n      this.__isRunning = false;\n      return Infinity * speed;\n    }\n  }, {\n    key: 'syncSpeed',\n    value: function syncSpeed(time, position, speed) {\n      if (speed === 0) // stop\n        this.stop(time, position - this.__offsetPosition);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.master = null;\n\n      this.__engine.master = null;\n      this.__engine = null;\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      return this.master.currentTime;\n    }\n  }, {\n    key: 'currentPosition',\n    get: function get() {\n      return this.master.currentPosition - this.__offsetPosition;\n    }\n  }]);\n  return Transported;\n}(_timeEngine2.default);\n\n// TransportedTransported\n// has to switch on and off the scheduled engines when the transport hits the engine's start and end position\n\n\nvar TransportedTransported = function (_Transported) {\n  (0, _inherits3.default)(TransportedTransported, _Transported);\n\n  function TransportedTransported(transport, engine, startPosition, endPosition, offsetPosition) {\n    (0, _classCallCheck3.default)(this, TransportedTransported);\n    return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(TransportedTransported).call(this, transport, engine, startPosition, endPosition, offsetPosition));\n  }\n\n  (0, _createClass3.default)(TransportedTransported, [{\n    key: 'syncPosition',\n    value: function syncPosition(time, position, speed) {\n      if (speed > 0 && position < this.__endPosition) position = Math.max(position, this.__startPosition);else if (speed < 0 && position >= this.__startPosition) position = Math.min(position, this.__endPosition);\n\n      return this.__offsetPosition + this.__engine.syncPosition(time, position - this.__offsetPosition, speed);\n    }\n  }, {\n    key: 'advancePosition',\n    value: function advancePosition(time, position, speed) {\n      position = this.__offsetPosition + this.__engine.advancePosition(time, position - this.__offsetPosition, speed);\n\n      if (speed > 0 && position < this.__endPosition || speed < 0 && position >= this.__startPosition) return position;\n\n      return Infinity * speed;\n    }\n  }, {\n    key: 'syncSpeed',\n    value: function syncSpeed(time, position, speed) {\n      if (this.__engine.syncSpeed) this.__engine.syncSpeed(time, position, speed);\n    }\n  }, {\n    key: 'resetEnginePosition',\n    value: function resetEnginePosition(engine) {\n      var position = arguments.length <= 1 || arguments[1] === undefined ? undefined : arguments[1];\n\n      if (position !== undefined) position += this.__offsetPosition;\n\n      this.resetPosition(position);\n    }\n  }]);\n  return TransportedTransported;\n}(Transported);\n\n// TransportedSpeedControlled\n// has to start and stop the speed-controlled engines when the transport hits the engine's start and end position\n\n\nvar TransportedSpeedControlled = function (_Transported2) {\n  (0, _inherits3.default)(TransportedSpeedControlled, _Transported2);\n\n  function TransportedSpeedControlled(transport, engine, startPosition, endPosition, offsetPosition) {\n    (0, _classCallCheck3.default)(this, TransportedSpeedControlled);\n    return (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(TransportedSpeedControlled).call(this, transport, engine, startPosition, endPosition, offsetPosition));\n  }\n\n  (0, _createClass3.default)(TransportedSpeedControlled, [{\n    key: 'start',\n    value: function start(time, position, speed) {\n      this.__engine.syncSpeed(time, position, speed, true);\n    }\n  }, {\n    key: 'stop',\n    value: function stop(time, position) {\n      this.__engine.syncSpeed(time, position, 0);\n    }\n  }, {\n    key: 'syncSpeed',\n    value: function syncSpeed(time, position, speed) {\n      if (this.__isRunning) this.__engine.syncSpeed(time, position, speed);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.__engine.syncSpeed(this.master.currentTime, this.master.currentPosition - this.__offsetPosition, 0);\n      (0, _get3.default)((0, _getPrototypeOf2.default)(TransportedSpeedControlled.prototype), 'destroy', this).call(this);\n    }\n  }]);\n  return TransportedSpeedControlled;\n}(Transported);\n\n// TransportedScheduled\n// has to switch on and off the scheduled engines when the transport hits the engine's start and end position\n\n\nvar TransportedScheduled = function (_Transported3) {\n  (0, _inherits3.default)(TransportedScheduled, _Transported3);\n\n  function TransportedScheduled(transport, engine, startPosition, endPosition, offsetPosition) {\n    (0, _classCallCheck3.default)(this, TransportedScheduled);\n\n\n    // scheduling queue becomes master of engine\n\n    var _this4 = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(TransportedScheduled).call(this, transport, engine, startPosition, endPosition, offsetPosition));\n\n    engine.master = null;\n    transport.__schedulingQueue.add(engine, Infinity);\n    return _this4;\n  }\n\n  (0, _createClass3.default)(TransportedScheduled, [{\n    key: 'start',\n    value: function start(time, position, speed) {\n      this.master.__schedulingQueue.resetEngineTime(this.__engine, time);\n    }\n  }, {\n    key: 'stop',\n    value: function stop(time, position) {\n      this.master.__schedulingQueue.resetEngineTime(this.__engine, Infinity);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.master.__schedulingQueue.remove(this.__engine);\n      (0, _get3.default)((0, _getPrototypeOf2.default)(TransportedScheduled.prototype), 'destroy', this).call(this);\n    }\n  }]);\n  return TransportedScheduled;\n}(Transported);\n\n// translates advancePosition of *transported* engines into global scheduler times\n\n\nvar TransportSchedulerHook = function (_TimeEngine2) {\n  (0, _inherits3.default)(TransportSchedulerHook, _TimeEngine2);\n\n  function TransportSchedulerHook(transport) {\n    (0, _classCallCheck3.default)(this, TransportSchedulerHook);\n\n    var _this5 = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(TransportSchedulerHook).call(this));\n\n    _this5.__transport = transport;\n\n    _this5.__nextPosition = Infinity;\n    _this5.__nextTime = Infinity;\n    transport.__scheduler.add(_this5, Infinity);\n    return _this5;\n  }\n\n  // TimeEngine method (scheduled interface)\n\n\n  (0, _createClass3.default)(TransportSchedulerHook, [{\n    key: 'advanceTime',\n    value: function advanceTime(time) {\n      var transport = this.__transport;\n      var position = this.__nextPosition;\n      var speed = transport.__speed;\n      var nextPosition = transport.advancePosition(time, position, speed);\n      var nextTime = transport.__getTimeAtPosition(nextPosition);\n\n      this.__nextPosition = nextPosition;\n      this.__nextTime = nextTime;\n\n      return nextTime;\n    }\n  }, {\n    key: 'resetPosition',\n    value: function resetPosition() {\n      var position = arguments.length <= 0 || arguments[0] === undefined ? this.__nextPosition : arguments[0];\n\n      var transport = this.__transport;\n      var time = transport.__getTimeAtPosition(position);\n\n      this.__nextPosition = position;\n      this.__nextTime = time;\n\n      this.resetTime(time);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.__transport.__scheduler.remove(this);\n      this.__transport = null;\n    }\n  }]);\n  return TransportSchedulerHook;\n}(_timeEngine2.default);\n\n// internal scheduling queue that returns the current position (and time) of the play control\n\n\nvar TransportSchedulingQueue = function (_SchedulingQueue) {\n  (0, _inherits3.default)(TransportSchedulingQueue, _SchedulingQueue);\n\n  function TransportSchedulingQueue(transport) {\n    (0, _classCallCheck3.default)(this, TransportSchedulingQueue);\n\n    var _this6 = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(TransportSchedulingQueue).call(this));\n\n    _this6.__transport = transport;\n    transport.__scheduler.add(_this6, Infinity);\n    return _this6;\n  }\n\n  (0, _createClass3.default)(TransportSchedulingQueue, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.__transport.__scheduler.remove(this);\n      this.__transport = null;\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      return this.__transport.currentTime;\n    }\n  }, {\n    key: 'currentPosition',\n    get: function get() {\n      return this.__transport.currentPosition;\n    }\n  }]);\n  return TransportSchedulingQueue;\n}(_schedulingQueue2.default);\n\n/**\n * Transport class\n */\n\n\nvar Transport = function (_TimeEngine3) {\n  (0, _inherits3.default)(Transport, _TimeEngine3);\n\n  function Transport() {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    (0, _classCallCheck3.default)(this, Transport);\n\n    var _this7 = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(Transport).call(this));\n\n    _this7.audioContext = options.audioContext || _audioContext2.default;\n\n    _this7.__engines = [];\n    _this7.__transported = [];\n\n    _this7.__scheduler = (0, _factories.getScheduler)(_this7.audioContext);\n    _this7.__schedulerHook = new TransportSchedulerHook(_this7);\n    _this7.__transportedQueue = new _priorityQueue2.default();\n    _this7.__schedulingQueue = new TransportSchedulingQueue(_this7);\n\n    // syncronized time, position, and speed\n    _this7.__time = 0;\n    _this7.__position = 0;\n    _this7.__speed = 0;\n    return _this7;\n  }\n\n  (0, _createClass3.default)(Transport, [{\n    key: '__getTimeAtPosition',\n    value: function __getTimeAtPosition(position) {\n      return this.__time + (position - this.__position) / this.__speed;\n    }\n  }, {\n    key: '__getPositionAtTime',\n    value: function __getPositionAtTime(time) {\n      return this.__position + (time - this.__time) * this.__speed;\n    }\n  }, {\n    key: '__syncTransportedPosition',\n    value: function __syncTransportedPosition(time, position, speed) {\n      var numTransportedEngines = this.__transported.length;\n      var nextPosition = Infinity * speed;\n\n      if (numTransportedEngines > 0) {\n        this.__transportedQueue.clear();\n        this.__transportedQueue.reverse = speed < 0;\n\n        for (var i = 0; i < numTransportedEngines; i++) {\n          var engine = this.__transported[i];\n          var nextEnginePosition = engine.syncPosition(time, position, speed);\n          this.__transportedQueue.insert(engine, nextEnginePosition);\n        }\n\n        nextPosition = this.__transportedQueue.time;\n      }\n\n      return nextPosition;\n    }\n  }, {\n    key: '__syncTransportedSpeed',\n    value: function __syncTransportedSpeed(time, position, speed) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = (0, _getIterator3.default)(this.__transported), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var transported = _step.value;\n\n          transported.syncSpeed(time, position, speed);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    /**\n     * Get current master time\n     * @return {Number} current time\n     *\n     * This function will be replaced when the transport is added to a master (i.e. transport or play-control).\n     */\n\n  }, {\n    key: 'resetPosition',\n\n\n    /**\n     * Reset next transport position\n     * @param {Number} next transport position\n     */\n    value: function resetPosition(position) {\n      var master = this.master;\n\n      if (master && master.resetEnginePosition !== undefined) master.resetEnginePosition(this, position);else this.__schedulerHook.resetPosition(position);\n    }\n\n    // TimeEngine method (transported interface)\n\n  }, {\n    key: 'syncPosition',\n    value: function syncPosition(time, position, speed) {\n      this.__time = time;\n      this.__position = position;\n      this.__speed = speed;\n\n      return this.__syncTransportedPosition(time, position, speed);\n    }\n\n    // TimeEngine method (transported interface)\n\n  }, {\n    key: 'advancePosition',\n    value: function advancePosition(time, position, speed) {\n      var engine = this.__transportedQueue.head;\n      var nextEnginePosition = engine.advancePosition(time, position, speed);\n      return this.__transportedQueue.move(engine, nextEnginePosition);\n    }\n\n    // TimeEngine method (speed-controlled interface)\n\n  }, {\n    key: 'syncSpeed',\n    value: function syncSpeed(time, position, speed) {\n      var seek = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\n      var lastSpeed = this.__speed;\n\n      this.__time = time;\n      this.__position = position;\n      this.__speed = speed;\n\n      if (speed !== lastSpeed || seek && speed !== 0) {\n        var nextPosition = void 0;\n\n        // resync transported engines\n        if (seek || speed * lastSpeed < 0) {\n          // seek or reverse direction\n          nextPosition = this.__syncTransportedPosition(time, position, speed);\n        } else if (lastSpeed === 0) {\n          // start\n          nextPosition = this.__syncTransportedPosition(time, position, speed);\n        } else if (speed === 0) {\n          // stop\n          nextPosition = Infinity;\n          this.__syncTransportedSpeed(time, position, 0);\n        } else {\n          // change speed without reversing direction\n          this.__syncTransportedSpeed(time, position, speed);\n        }\n\n        this.resetPosition(nextPosition);\n      }\n    }\n\n    /**\n     * Add a time engine to the transport\n     * @param {Object} engine engine to be added to the transport\n     * @param {Number} position start position\n     */\n\n  }, {\n    key: 'add',\n    value: function add(engine) {\n      var startPosition = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n      var endPosition = arguments.length <= 2 || arguments[2] === undefined ? Infinity : arguments[2];\n      var offsetPosition = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];\n\n      var transported = null;\n\n      if (offsetPosition === -Infinity) offsetPosition = 0;\n\n      if (engine.master) throw new Error(\"object has already been added to a master\");\n\n      if (_timeEngine2.default.implementsTransported(engine)) transported = new TransportedTransported(this, engine, startPosition, endPosition, offsetPosition);else if (_timeEngine2.default.implementsSpeedControlled(engine)) transported = new TransportedSpeedControlled(this, engine, startPosition, endPosition, offsetPosition);else if (_timeEngine2.default.implementsScheduled(engine)) transported = new TransportedScheduled(this, engine, startPosition, endPosition, offsetPosition);else throw new Error(\"object cannot be added to a transport\");\n\n      if (transported) {\n        var speed = this.__speed;\n\n        addDuplet(this.__engines, this.__transported, engine, transported);\n\n        if (speed !== 0) {\n          // sync and start\n          var nextEnginePosition = transported.syncPosition(this.currentTime, this.currentPosition, speed);\n          var nextPosition = this.__transportedQueue.insert(transported, nextEnginePosition);\n\n          this.resetPosition(nextPosition);\n        }\n      }\n\n      return transported;\n    }\n\n    /**\n     * Remove a time engine from the transport\n     * @param {object} engineOrTransported engine or transported to be removed from the transport\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(engineOrTransported) {\n      var engine = engineOrTransported;\n      var transported = removeDuplet(this.__engines, this.__transported, engineOrTransported);\n\n      if (!transported) {\n        engine = removeDuplet(this.__transported, this.__engines, engineOrTransported);\n        transported = engineOrTransported;\n      }\n\n      if (engine && transported) {\n        var nextPosition = this.__transportedQueue.remove(transported);\n\n        transported.destroy();\n\n        if (this.__speed !== 0) this.resetPosition(nextPosition);\n      } else {\n        throw new Error(\"object has not been added to this transport\");\n      }\n    }\n  }, {\n    key: 'resetEnginePosition',\n    value: function resetEnginePosition(transported) {\n      var position = arguments.length <= 1 || arguments[1] === undefined ? undefined : arguments[1];\n\n      var speed = this.__speed;\n\n      if (speed !== 0) {\n        if (position === undefined) position = transported.syncPosition(this.currentTime, this.currentPosition, speed);\n\n        var nextPosition = this.__transportedQueue.move(transported, position);\n        this.resetPosition(nextPosition);\n      }\n    }\n\n    /**\n     * Remove all time engines from the transport\n     */\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.syncSpeed(this.currentTime, this.currentPosition, 0);\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = (0, _getIterator3.default)(this.__transported), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var transported = _step2.value;\n\n          transported.destroy();\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      return this.__scheduler.currentTime;\n    }\n\n    /**\n     * Get current master position\n     * @return {Number} current playing position\n     *\n     * This function will be replaced when the transport is added to a master (i.e. transport or play-control).\n     */\n\n  }, {\n    key: 'currentPosition',\n    get: function get() {\n      var master = this.master;\n\n      if (master && master.currentPosition !== undefined) return master.currentPosition;\n\n      return this.__position + (this.__scheduler.currentTime - this.__time) * this.__speed;\n    }\n  }]);\n  return Transport;\n}(_timeEngine2.default);\n\nexports.default = Transport;\n//# sourceMappingURL=data:application/json;base64,# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _inherits = __webpack_require__(99)['default'];\n\nvar _get = __webpack_require__(98)['default'];\n\nvar _classCallCheck = __webpack_require__(68)['default'];\n\nvar _Object$defineProperty = __webpack_require__(41)['default'];\n\nvar _interopRequireDefault = __webpack_require__(100)['default'];\n\n_Object$defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _audioBufferLoader = __webpack_require__(94);\n\nvar _audioBufferLoader2 = _interopRequireDefault(_audioBufferLoader);\n\n/**\n * SuperLoader\n * Helper to load multiple type of files, and get them in their useful type, json for json files, AudioBuffer for audio files.\n */\n\nvar SuperLoader = (function (_AudioBufferLoader) {\n  /**\n   * Use composition to setup appropriate file loaders\n   */\n\n  function SuperLoader() {\n    _classCallCheck(this, SuperLoader);\n\n    _get(Object.getPrototypeOf(SuperLoader.prototype), 'constructor', this).call(this, null);\n    // bypass AudioBufferLoader constructor. This is bad but it works.\n  }\n\n  _inherits(SuperLoader, _AudioBufferLoader);\n\n  return SuperLoader;\n})(_audioBufferLoader2['default']);\n\nexports['default'] = SuperLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVzNi9zdXBlci1sb2FkZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztpQ0FBOEIsdUJBQXVCOzs7Ozs7Ozs7SUFPaEMsV0FBVzs7Ozs7QUFJbkIsV0FKUSxXQUFXLEdBSWhCOzBCQUpLLFdBQVc7O0FBSzVCLCtCQUxpQixXQUFXLDZDQUt0QixJQUFJLEVBQUU7O0dBRWI7O1lBUGtCLFdBQVc7O1NBQVgsV0FBVzs7O3FCQUFYLFdBQVciLCJmaWxlIjoiZXM2L3N1cGVyLWxvYWRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBdWRpb0J1ZmZlckxvYWRlciBmcm9tICcuL2F1ZGlvLWJ1ZmZlci1sb2FkZXInO1xuXG5cbi8qKlxuICogU3VwZXJMb2FkZXJcbiAqIEhlbHBlciB0byBsb2FkIG11bHRpcGxlIHR5cGUgb2YgZmlsZXMsIGFuZCBnZXQgdGhlbSBpbiB0aGVpciB1c2VmdWwgdHlwZSwganNvbiBmb3IganNvbiBmaWxlcywgQXVkaW9CdWZmZXIgZm9yIGF1ZGlvIGZpbGVzLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdXBlckxvYWRlciBleHRlbmRzIEF1ZGlvQnVmZmVyTG9hZGVyIHtcbiAgLyoqXG4gICAqIFVzZSBjb21wb3NpdGlvbiB0byBzZXR1cCBhcHByb3ByaWF0ZSBmaWxlIGxvYWRlcnNcbiAgICovXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKG51bGwpO1xuICAgIC8vIGJ5cGFzcyBBdWRpb0J1ZmZlckxvYWRlciBjb25zdHJ1Y3Rvci4gVGhpcyBpcyBiYWQgYnV0IGl0IHdvcmtzLlxuICB9XG59XG4iXX0=//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL2Rpc3Qvc3VwZXItbG9hZGVyLmpzPzYzYmUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2luaGVyaXRzID0gcmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzJylbJ2RlZmF1bHQnXTtcblxudmFyIF9nZXQgPSByZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvZ2V0JylbJ2RlZmF1bHQnXTtcblxudmFyIF9jbGFzc0NhbGxDaGVjayA9IHJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzcy1jYWxsLWNoZWNrJylbJ2RlZmF1bHQnXTtcblxudmFyIF9PYmplY3QkZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCdiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2RlZmluZS1wcm9wZXJ0eScpWydkZWZhdWx0J107XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZSgnYmFiZWwtcnVudGltZS9oZWxwZXJzL2ludGVyb3AtcmVxdWlyZS1kZWZhdWx0JylbJ2RlZmF1bHQnXTtcblxuX09iamVjdCRkZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2F1ZGlvQnVmZmVyTG9hZGVyID0gcmVxdWlyZSgnLi9hdWRpby1idWZmZXItbG9hZGVyJyk7XG5cbnZhciBfYXVkaW9CdWZmZXJMb2FkZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYXVkaW9CdWZmZXJMb2FkZXIpO1xuXG4vKipcbiAqIFN1cGVyTG9hZGVyXG4gKiBIZWxwZXIgdG8gbG9hZCBtdWx0aXBsZSB0eXBlIG9mIGZpbGVzLCBhbmQgZ2V0IHRoZW0gaW4gdGhlaXIgdXNlZnVsIHR5cGUsIGpzb24gZm9yIGpzb24gZmlsZXMsIEF1ZGlvQnVmZmVyIGZvciBhdWRpbyBmaWxlcy5cbiAqL1xuXG52YXIgU3VwZXJMb2FkZXIgPSAoZnVuY3Rpb24gKF9BdWRpb0J1ZmZlckxvYWRlcikge1xuICAvKipcbiAgICogVXNlIGNvbXBvc2l0aW9uIHRvIHNldHVwIGFwcHJvcHJpYXRlIGZpbGUgbG9hZGVyc1xuICAgKi9cblxuICBmdW5jdGlvbiBTdXBlckxvYWRlcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3VwZXJMb2FkZXIpO1xuXG4gICAgX2dldChPYmplY3QuZ2V0UHJvdG90eXBlT2YoU3VwZXJMb2FkZXIucHJvdG90eXBlKSwgJ2NvbnN0cnVjdG9yJywgdGhpcykuY2FsbCh0aGlzLCBudWxsKTtcbiAgICAvLyBieXBhc3MgQXVkaW9CdWZmZXJMb2FkZXIgY29uc3RydWN0b3IuIFRoaXMgaXMgYmFkIGJ1dCBpdCB3b3Jrcy5cbiAgfVxuXG4gIF9pbmhlcml0cyhTdXBlckxvYWRlciwgX0F1ZGlvQnVmZmVyTG9hZGVyKTtcblxuICByZXR1cm4gU3VwZXJMb2FkZXI7XG59KShfYXVkaW9CdWZmZXJMb2FkZXIyWydkZWZhdWx0J10pO1xuXG5leHBvcnRzWydkZWZhdWx0J10gPSBTdXBlckxvYWRlcjtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltVnpOaTl6ZFhCbGNpMXNiMkZrWlhJdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqczdPenM3T3pzN096czdPenM3T3p0cFEwRkJPRUlzZFVKQlFYVkNPenM3T3pzN096czdTVUZQYUVNc1YwRkJWenM3T3pzN1FVRkpia0lzVjBGS1VTeFhRVUZYTEVkQlNXaENPekJDUVVwTExGZEJRVmM3TzBGQlN6VkNMQ3RDUVV4cFFpeFhRVUZYTERaRFFVdDBRaXhKUVVGSkxFVkJRVVU3TzBkQlJXSTdPMWxCVUd0Q0xGZEJRVmM3TzFOQlFWZ3NWMEZCVnpzN08zRkNRVUZZTEZkQlFWY2lMQ0ptYVd4bElqb2laWE0yTDNOMWNHVnlMV3h2WVdSbGNpNXFjeUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1sdGNHOXlkQ0JCZFdScGIwSjFabVpsY2t4dllXUmxjaUJtY205dElDY3VMMkYxWkdsdkxXSjFabVpsY2kxc2IyRmtaWEluTzF4dVhHNWNiaThxS2x4dUlDb2dVM1Z3WlhKTWIyRmtaWEpjYmlBcUlFaGxiSEJsY2lCMGJ5QnNiMkZrSUcxMWJIUnBjR3hsSUhSNWNHVWdiMllnWm1sc1pYTXNJR0Z1WkNCblpYUWdkR2hsYlNCcGJpQjBhR1ZwY2lCMWMyVm1kV3dnZEhsd1pTd2dhbk52YmlCbWIzSWdhbk52YmlCbWFXeGxjeXdnUVhWa2FXOUNkV1ptWlhJZ1ptOXlJR0YxWkdsdklHWnBiR1Z6TGx4dUlDb3ZYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQmpiR0Z6Y3lCVGRYQmxja3h2WVdSbGNpQmxlSFJsYm1SeklFRjFaR2x2UW5WbVptVnlURzloWkdWeUlIdGNiaUFnTHlvcVhHNGdJQ0FxSUZWelpTQmpiMjF3YjNOcGRHbHZiaUIwYnlCelpYUjFjQ0JoY0hCeWIzQnlhV0YwWlNCbWFXeGxJR3h2WVdSbGNuTmNiaUFnSUNvdlhHNGdJR052Ym5OMGNuVmpkRzl5S0NrZ2UxeHVJQ0FnSUhOMWNHVnlLRzUxYkd3cE8xeHVJQ0FnSUM4dklHSjVjR0Z6Y3lCQmRXUnBiMEoxWm1abGNreHZZV1JsY2lCamIyNXpkSEoxWTNSdmNpNGdWR2hwY3lCcGN5QmlZV1FnWW5WMElHbDBJSGR2Y210ekxseHVJQ0I5WEc1OVhHNGlYWDA9XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvZGlzdC9zdXBlci1sb2FkZXIuanNcbi8vIG1vZHVsZSBpZCA9IDE3NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(179), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9jcmVhdGUuanM/N2NjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZVwiKSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9jcmVhdGUuanNcbi8vIG1vZHVsZSBpZCA9IDE3NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(181), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanM/Y2UzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvclwiKSwgX19lc01vZHVsZTogdHJ1ZSB9O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDE3N1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = { \"default\": __webpack_require__(182), __esModule: true };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9zZXQtcHJvdG90eXBlLW9mLmpzPzViMDUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9zZXQtcHJvdG90eXBlLW9mXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9iYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L3NldC1wcm90b3R5cGUtb2YuanNcbi8vIG1vZHVsZSBpZCA9IDE3OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

eval("var $ = __webpack_require__(8);\nmodule.exports = function create(P, D){\n  return $.create(P, D);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9jcmVhdGUuanM/YmQwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJCA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvJCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGUoUCwgRCl7XG4gIHJldHVybiAkLmNyZWF0ZShQLCBEKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2NyZWF0ZS5qc1xuLy8gbW9kdWxlIGlkID0gMTc5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

eval("var $ = __webpack_require__(8);\nmodule.exports = function defineProperty(it, key, desc){\n  return $.setDesc(it, key, desc);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTgwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHkuanM/N2I0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJCA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvJCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShpdCwga2V5LCBkZXNjKXtcbiAgcmV0dXJuICQuc2V0RGVzYyhpdCwga2V5LCBkZXNjKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eS5qc1xuLy8gbW9kdWxlIGlkID0gMTgwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

eval("var $ = __webpack_require__(8);\n__webpack_require__(209);\nmodule.exports = function getOwnPropertyDescriptor(it, key){\n  return $.getDesc(it, key);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTgxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanM/ZWJmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJCA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvJCcpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSl7XG4gIHJldHVybiAkLmdldERlc2MoaXQsIGtleSk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDE4MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(210);\nmodule.exports = __webpack_require__(21).Object.setPrototypeOf;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTgyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9zZXQtcHJvdG90eXBlLW9mLmpzPzU2YWMiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy8kLmNvcmUnKS5PYmplY3Quc2V0UHJvdG90eXBlT2Y7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L3NldC1wcm90b3R5cGUtb2YuanNcbi8vIG1vZHVsZSBpZCA9IDE4MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(211);\n__webpack_require__(213);\n__webpack_require__(214);\n__webpack_require__(212);\nmodule.exports = __webpack_require__(21).Promise;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTgzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L2ZuL3Byb21pc2UuanM/ZmFlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucHJvbWlzZScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9tb2R1bGVzLyQuY29yZScpLlByb21pc2U7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvZm4vcHJvbWlzZS5qc1xuLy8gbW9kdWxlIGlkID0gMTgzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 184 */
/***/ (function(module, exports) {

eval("module.exports = function(){ /* empty */ };//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5hZGQtdG8tdW5zY29wYWJsZXMuanM/ZjA3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCl7IC8qIGVtcHR5ICovIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmFkZC10by11bnNjb3BhYmxlcy5qc1xuLy8gbW9kdWxlIGlkID0gMTg0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

eval("var isObject = __webpack_require__(44)\n  , document = __webpack_require__(19).document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5kb20tY3JlYXRlLmpzPzIyY2YiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi8kLmlzLW9iamVjdCcpXG4gICwgZG9jdW1lbnQgPSByZXF1aXJlKCcuLyQuZ2xvYmFsJykuZG9jdW1lbnRcbiAgLy8gaW4gb2xkIElFIHR5cGVvZiBkb2N1bWVudC5jcmVhdGVFbGVtZW50IGlzICdvYmplY3QnXG4gICwgaXMgPSBpc09iamVjdChkb2N1bWVudCkgJiYgaXNPYmplY3QoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIGlzID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChpdCkgOiB7fTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmRvbS1jcmVhdGUuanNcbi8vIG1vZHVsZSBpZCA9IDE4NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

eval("var ctx         = __webpack_require__(29)\n  , call        = __webpack_require__(191)\n  , isArrayIter = __webpack_require__(190)\n  , anObject    = __webpack_require__(28)\n  , toLength    = __webpack_require__(205)\n  , getIterFn   = __webpack_require__(207);\nmodule.exports = function(iterable, entries, fn, that){\n  var iterFn = getIterFn(iterable)\n    , f      = ctx(fn, that, entries ? 2 : 1)\n    , index  = 0\n    , length, step, iterator;\n  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){\n    entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){\n    call(iterator, f, step.value, entries);\n  }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5mb3Itb2YuanM/YWFiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY3R4ICAgICAgICAgPSByZXF1aXJlKCcuLyQuY3R4JylcbiAgLCBjYWxsICAgICAgICA9IHJlcXVpcmUoJy4vJC5pdGVyLWNhbGwnKVxuICAsIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi8kLmlzLWFycmF5LWl0ZXInKVxuICAsIGFuT2JqZWN0ICAgID0gcmVxdWlyZSgnLi8kLmFuLW9iamVjdCcpXG4gICwgdG9MZW5ndGggICAgPSByZXF1aXJlKCcuLyQudG8tbGVuZ3RoJylcbiAgLCBnZXRJdGVyRm4gICA9IHJlcXVpcmUoJy4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0ZXJhYmxlLCBlbnRyaWVzLCBmbiwgdGhhdCl7XG4gIHZhciBpdGVyRm4gPSBnZXRJdGVyRm4oaXRlcmFibGUpXG4gICAgLCBmICAgICAgPSBjdHgoZm4sIHRoYXQsIGVudHJpZXMgPyAyIDogMSlcbiAgICAsIGluZGV4ICA9IDBcbiAgICAsIGxlbmd0aCwgc3RlcCwgaXRlcmF0b3I7XG4gIGlmKHR5cGVvZiBpdGVyRm4gIT0gJ2Z1bmN0aW9uJyl0aHJvdyBUeXBlRXJyb3IoaXRlcmFibGUgKyAnIGlzIG5vdCBpdGVyYWJsZSEnKTtcbiAgLy8gZmFzdCBjYXNlIGZvciBhcnJheXMgd2l0aCBkZWZhdWx0IGl0ZXJhdG9yXG4gIGlmKGlzQXJyYXlJdGVyKGl0ZXJGbikpZm9yKGxlbmd0aCA9IHRvTGVuZ3RoKGl0ZXJhYmxlLmxlbmd0aCk7IGxlbmd0aCA+IGluZGV4OyBpbmRleCsrKXtcbiAgICBlbnRyaWVzID8gZihhbk9iamVjdChzdGVwID0gaXRlcmFibGVbaW5kZXhdKVswXSwgc3RlcFsxXSkgOiBmKGl0ZXJhYmxlW2luZGV4XSk7XG4gIH0gZWxzZSBmb3IoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChpdGVyYWJsZSk7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTsgKXtcbiAgICBjYWxsKGl0ZXJhdG9yLCBmLCBzdGVwLnZhbHVlLCBlbnRyaWVzKTtcbiAgfVxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQuZm9yLW9mLmpzXG4vLyBtb2R1bGUgaWQgPSAxODZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(19).document && document.documentElement;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5odG1sLmpzPzllZTQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLyQuZ2xvYmFsJykuZG9jdW1lbnQgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5odG1sLmpzXG4vLyBtb2R1bGUgaWQgPSAxODdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 188 */
/***/ (function(module, exports) {

eval("// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5pbnZva2UuanM/YzRkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmYXN0IGFwcGx5LCBodHRwOi8vanNwZXJmLmxua2l0LmNvbS9mYXN0LWFwcGx5LzVcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZm4sIGFyZ3MsIHRoYXQpe1xuICB2YXIgdW4gPSB0aGF0ID09PSB1bmRlZmluZWQ7XG4gIHN3aXRjaChhcmdzLmxlbmd0aCl7XG4gICAgY2FzZSAwOiByZXR1cm4gdW4gPyBmbigpXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQpO1xuICAgIGNhc2UgMTogcmV0dXJuIHVuID8gZm4oYXJnc1swXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSk7XG4gICAgY2FzZSAyOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdKTtcbiAgICBjYXNlIDM6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pO1xuICAgIGNhc2UgNDogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSwgYXJnc1szXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSwgYXJnc1szXSk7XG4gIH0gcmV0dXJuICAgICAgICAgICAgICBmbi5hcHBseSh0aGF0LCBhcmdzKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLmludm9rZS5qc1xuLy8gbW9kdWxlIGlkID0gMTg4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

eval("// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(42);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTg5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5pb2JqZWN0LmpzP2I3ODAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBhbmQgbm9uLWVudW1lcmFibGUgb2xkIFY4IHN0cmluZ3NcbnZhciBjb2YgPSByZXF1aXJlKCcuLyQuY29mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdCgneicpLnByb3BlcnR5SXNFbnVtZXJhYmxlKDApID8gT2JqZWN0IDogZnVuY3Rpb24oaXQpe1xuICByZXR1cm4gY29mKGl0KSA9PSAnU3RyaW5nJyA/IGl0LnNwbGl0KCcnKSA6IE9iamVjdChpdCk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5pb2JqZWN0LmpzXG4vLyBtb2R1bGUgaWQgPSAxODlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

eval("// check on default Array iterator\nvar Iterators  = __webpack_require__(30)\n  , ITERATOR   = __webpack_require__(9)('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5pcy1hcnJheS1pdGVyLmpzP2QxNGMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY2hlY2sgb24gZGVmYXVsdCBBcnJheSBpdGVyYXRvclxudmFyIEl0ZXJhdG9ycyAgPSByZXF1aXJlKCcuLyQuaXRlcmF0b3JzJylcbiAgLCBJVEVSQVRPUiAgID0gcmVxdWlyZSgnLi8kLndrcycpKCdpdGVyYXRvcicpXG4gICwgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCl7XG4gIHJldHVybiBpdCAhPT0gdW5kZWZpbmVkICYmIChJdGVyYXRvcnMuQXJyYXkgPT09IGl0IHx8IEFycmF5UHJvdG9bSVRFUkFUT1JdID09PSBpdCk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5pcy1hcnJheS1pdGVyLmpzXG4vLyBtb2R1bGUgaWQgPSAxOTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

eval("// call something on iterator step with safe closing on error\nvar anObject = __webpack_require__(28);\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5pdGVyLWNhbGwuanM/Y2QyYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjYWxsIHNvbWV0aGluZyBvbiBpdGVyYXRvciBzdGVwIHdpdGggc2FmZSBjbG9zaW5nIG9uIGVycm9yXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLyQuYW4tb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0ZXJhdG9yLCBmbiwgdmFsdWUsIGVudHJpZXMpe1xuICB0cnkge1xuICAgIHJldHVybiBlbnRyaWVzID8gZm4oYW5PYmplY3QodmFsdWUpWzBdLCB2YWx1ZVsxXSkgOiBmbih2YWx1ZSk7XG4gIC8vIDcuNC42IEl0ZXJhdG9yQ2xvc2UoaXRlcmF0b3IsIGNvbXBsZXRpb24pXG4gIH0gY2F0Y2goZSl7XG4gICAgdmFyIHJldCA9IGl0ZXJhdG9yWydyZXR1cm4nXTtcbiAgICBpZihyZXQgIT09IHVuZGVmaW5lZClhbk9iamVjdChyZXQuY2FsbChpdGVyYXRvcikpO1xuICAgIHRocm93IGU7XG4gIH1cbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLml0ZXItY2FsbC5qc1xuLy8gbW9kdWxlIGlkID0gMTkxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar $              = __webpack_require__(8)\n  , descriptor     = __webpack_require__(107)\n  , setToStringTag = __webpack_require__(72)\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(71)(IteratorPrototype, __webpack_require__(9)('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5pdGVyLWNyZWF0ZS5qcz85M2IwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciAkICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vJCcpXG4gICwgZGVzY3JpcHRvciAgICAgPSByZXF1aXJlKCcuLyQucHJvcGVydHktZGVzYycpXG4gICwgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuLyQuc2V0LXRvLXN0cmluZy10YWcnKVxuICAsIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG5cbi8vIDI1LjEuMi4xLjEgJUl0ZXJhdG9yUHJvdG90eXBlJVtAQGl0ZXJhdG9yXSgpXG5yZXF1aXJlKCcuLyQuaGlkZScpKEl0ZXJhdG9yUHJvdG90eXBlLCByZXF1aXJlKCcuLyQud2tzJykoJ2l0ZXJhdG9yJyksIGZ1bmN0aW9uKCl7IHJldHVybiB0aGlzOyB9KTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihDb25zdHJ1Y3RvciwgTkFNRSwgbmV4dCl7XG4gIENvbnN0cnVjdG9yLnByb3RvdHlwZSA9ICQuY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlLCB7bmV4dDogZGVzY3JpcHRvcigxLCBuZXh0KX0pO1xuICBzZXRUb1N0cmluZ1RhZyhDb25zdHJ1Y3RvciwgTkFNRSArICcgSXRlcmF0b3InKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLml0ZXItY3JlYXRlLmpzXG4vLyBtb2R1bGUgaWQgPSAxOTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

eval("var ITERATOR     = __webpack_require__(9)('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ return {done: safe = true}; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5pdGVyLWRldGVjdC5qcz9iZjhjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBJVEVSQVRPUiAgICAgPSByZXF1aXJlKCcuLyQud2tzJykoJ2l0ZXJhdG9yJylcbiAgLCBTQUZFX0NMT1NJTkcgPSBmYWxzZTtcblxudHJ5IHtcbiAgdmFyIHJpdGVyID0gWzddW0lURVJBVE9SXSgpO1xuICByaXRlclsncmV0dXJuJ10gPSBmdW5jdGlvbigpeyBTQUZFX0NMT1NJTkcgPSB0cnVlOyB9O1xuICBBcnJheS5mcm9tKHJpdGVyLCBmdW5jdGlvbigpeyB0aHJvdyAyOyB9KTtcbn0gY2F0Y2goZSl7IC8qIGVtcHR5ICovIH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihleGVjLCBza2lwQ2xvc2luZyl7XG4gIGlmKCFza2lwQ2xvc2luZyAmJiAhU0FGRV9DTE9TSU5HKXJldHVybiBmYWxzZTtcbiAgdmFyIHNhZmUgPSBmYWxzZTtcbiAgdHJ5IHtcbiAgICB2YXIgYXJyICA9IFs3XVxuICAgICAgLCBpdGVyID0gYXJyW0lURVJBVE9SXSgpO1xuICAgIGl0ZXIubmV4dCA9IGZ1bmN0aW9uKCl7IHJldHVybiB7ZG9uZTogc2FmZSA9IHRydWV9OyB9O1xuICAgIGFycltJVEVSQVRPUl0gPSBmdW5jdGlvbigpeyByZXR1cm4gaXRlcjsgfTtcbiAgICBleGVjKGFycik7XG4gIH0gY2F0Y2goZSl7IC8qIGVtcHR5ICovIH1cbiAgcmV0dXJuIHNhZmU7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5pdGVyLWRldGVjdC5qc1xuLy8gbW9kdWxlIGlkID0gMTkzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 194 */
/***/ (function(module, exports) {

eval("module.exports = function(done, value){\n  return {value: value, done: !!done};\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTk0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5pdGVyLXN0ZXAuanM/MDFlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGRvbmUsIHZhbHVlKXtcbiAgcmV0dXJuIHt2YWx1ZTogdmFsdWUsIGRvbmU6ICEhZG9uZX07XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5pdGVyLXN0ZXAuanNcbi8vIG1vZHVsZSBpZCA9IDE5NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

eval("var global    = __webpack_require__(19)\n  , macrotask = __webpack_require__(204).set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = __webpack_require__(42)(process) == 'process'\n  , head, last, notify;\n\nvar flush = function(){\n  var parent, domain, fn;\n  if(isNode && (parent = process.domain)){\n    process.domain = null;\n    parent.exit();\n  }\n  while(head){\n    domain = head.domain;\n    fn     = head.fn;\n    if(domain)domain.enter();\n    fn(); // <- currently we use it only for Promise - try / catch not required\n    if(domain)domain.exit();\n    head = head.next;\n  } last = undefined;\n  if(parent)parent.enter();\n};\n\n// Node.js\nif(isNode){\n  notify = function(){\n    process.nextTick(flush);\n  };\n// browsers with MutationObserver\n} else if(Observer){\n  var toggle = 1\n    , node   = document.createTextNode('');\n  new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n  notify = function(){\n    node.data = toggle = -toggle;\n  };\n// environments with maybe non-completely correct, but existent Promise\n} else if(Promise && Promise.resolve){\n  notify = function(){\n    Promise.resolve().then(flush);\n  };\n// for other environments - macrotask based on:\n// - setImmediate\n// - MessageChannel\n// - window.postMessag\n// - onreadystatechange\n// - setTimeout\n} else {\n  notify = function(){\n    // strange IE + webpack dev server bug - use .call(global)\n    macrotask.call(global, flush);\n  };\n}\n\nmodule.exports = function asap(fn){\n  var task = {fn: fn, next: undefined, domain: isNode && process.domain};\n  if(last)last.next = task;\n  if(!head){\n    head = task;\n    notify();\n  } last = task;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTk1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5taWNyb3Rhc2suanM/ZmFhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2xvYmFsICAgID0gcmVxdWlyZSgnLi8kLmdsb2JhbCcpXG4gICwgbWFjcm90YXNrID0gcmVxdWlyZSgnLi8kLnRhc2snKS5zZXRcbiAgLCBPYnNlcnZlciAgPSBnbG9iYWwuTXV0YXRpb25PYnNlcnZlciB8fCBnbG9iYWwuV2ViS2l0TXV0YXRpb25PYnNlcnZlclxuICAsIHByb2Nlc3MgICA9IGdsb2JhbC5wcm9jZXNzXG4gICwgUHJvbWlzZSAgID0gZ2xvYmFsLlByb21pc2VcbiAgLCBpc05vZGUgICAgPSByZXF1aXJlKCcuLyQuY29mJykocHJvY2VzcykgPT0gJ3Byb2Nlc3MnXG4gICwgaGVhZCwgbGFzdCwgbm90aWZ5O1xuXG52YXIgZmx1c2ggPSBmdW5jdGlvbigpe1xuICB2YXIgcGFyZW50LCBkb21haW4sIGZuO1xuICBpZihpc05vZGUgJiYgKHBhcmVudCA9IHByb2Nlc3MuZG9tYWluKSl7XG4gICAgcHJvY2Vzcy5kb21haW4gPSBudWxsO1xuICAgIHBhcmVudC5leGl0KCk7XG4gIH1cbiAgd2hpbGUoaGVhZCl7XG4gICAgZG9tYWluID0gaGVhZC5kb21haW47XG4gICAgZm4gICAgID0gaGVhZC5mbjtcbiAgICBpZihkb21haW4pZG9tYWluLmVudGVyKCk7XG4gICAgZm4oKTsgLy8gPC0gY3VycmVudGx5IHdlIHVzZSBpdCBvbmx5IGZvciBQcm9taXNlIC0gdHJ5IC8gY2F0Y2ggbm90IHJlcXVpcmVkXG4gICAgaWYoZG9tYWluKWRvbWFpbi5leGl0KCk7XG4gICAgaGVhZCA9IGhlYWQubmV4dDtcbiAgfSBsYXN0ID0gdW5kZWZpbmVkO1xuICBpZihwYXJlbnQpcGFyZW50LmVudGVyKCk7XG59O1xuXG4vLyBOb2RlLmpzXG5pZihpc05vZGUpe1xuICBub3RpZnkgPSBmdW5jdGlvbigpe1xuICAgIHByb2Nlc3MubmV4dFRpY2soZmx1c2gpO1xuICB9O1xuLy8gYnJvd3NlcnMgd2l0aCBNdXRhdGlvbk9ic2VydmVyXG59IGVsc2UgaWYoT2JzZXJ2ZXIpe1xuICB2YXIgdG9nZ2xlID0gMVxuICAgICwgbm9kZSAgID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpO1xuICBuZXcgT2JzZXJ2ZXIoZmx1c2gpLm9ic2VydmUobm9kZSwge2NoYXJhY3RlckRhdGE6IHRydWV9KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgbm90aWZ5ID0gZnVuY3Rpb24oKXtcbiAgICBub2RlLmRhdGEgPSB0b2dnbGUgPSAtdG9nZ2xlO1xuICB9O1xuLy8gZW52aXJvbm1lbnRzIHdpdGggbWF5YmUgbm9uLWNvbXBsZXRlbHkgY29ycmVjdCwgYnV0IGV4aXN0ZW50IFByb21pc2Vcbn0gZWxzZSBpZihQcm9taXNlICYmIFByb21pc2UucmVzb2x2ZSl7XG4gIG5vdGlmeSA9IGZ1bmN0aW9uKCl7XG4gICAgUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmbHVzaCk7XG4gIH07XG4vLyBmb3Igb3RoZXIgZW52aXJvbm1lbnRzIC0gbWFjcm90YXNrIGJhc2VkIG9uOlxuLy8gLSBzZXRJbW1lZGlhdGVcbi8vIC0gTWVzc2FnZUNoYW5uZWxcbi8vIC0gd2luZG93LnBvc3RNZXNzYWdcbi8vIC0gb25yZWFkeXN0YXRlY2hhbmdlXG4vLyAtIHNldFRpbWVvdXRcbn0gZWxzZSB7XG4gIG5vdGlmeSA9IGZ1bmN0aW9uKCl7XG4gICAgLy8gc3RyYW5nZSBJRSArIHdlYnBhY2sgZGV2IHNlcnZlciBidWcgLSB1c2UgLmNhbGwoZ2xvYmFsKVxuICAgIG1hY3JvdGFzay5jYWxsKGdsb2JhbCwgZmx1c2gpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGFzYXAoZm4pe1xuICB2YXIgdGFzayA9IHtmbjogZm4sIG5leHQ6IHVuZGVmaW5lZCwgZG9tYWluOiBpc05vZGUgJiYgcHJvY2Vzcy5kb21haW59O1xuICBpZihsYXN0KWxhc3QubmV4dCA9IHRhc2s7XG4gIGlmKCFoZWFkKXtcbiAgICBoZWFkID0gdGFzaztcbiAgICBub3RpZnkoKTtcbiAgfSBsYXN0ID0gdGFzaztcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLm1pY3JvdGFzay5qc1xuLy8gbW9kdWxlIGlkID0gMTk1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

eval("// most Object methods by ES6 should accept primitives\nvar $export = __webpack_require__(43)\n  , core    = __webpack_require__(21)\n  , fails   = __webpack_require__(103);\nmodule.exports = function(KEY, exec){\n  var fn  = (core.Object || {})[KEY] || Object[KEY]\n    , exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTk2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5vYmplY3Qtc2FwLmpzPzJlMjAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbW9zdCBPYmplY3QgbWV0aG9kcyBieSBFUzYgc2hvdWxkIGFjY2VwdCBwcmltaXRpdmVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vJC5leHBvcnQnKVxuICAsIGNvcmUgICAgPSByZXF1aXJlKCcuLyQuY29yZScpXG4gICwgZmFpbHMgICA9IHJlcXVpcmUoJy4vJC5mYWlscycpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihLRVksIGV4ZWMpe1xuICB2YXIgZm4gID0gKGNvcmUuT2JqZWN0IHx8IHt9KVtLRVldIHx8IE9iamVjdFtLRVldXG4gICAgLCBleHAgPSB7fTtcbiAgZXhwW0tFWV0gPSBleGVjKGZuKTtcbiAgJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiBmYWlscyhmdW5jdGlvbigpeyBmbigxKTsgfSksICdPYmplY3QnLCBleHApO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQub2JqZWN0LXNhcC5qc1xuLy8gbW9kdWxlIGlkID0gMTk2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

eval("var redefine = __webpack_require__(108);\nmodule.exports = function(target, src){\n  for(var key in src)redefine(target, key, src[key]);\n  return target;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTk3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5yZWRlZmluZS1hbGwuanM/NDdjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuLyQucmVkZWZpbmUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odGFyZ2V0LCBzcmMpe1xuICBmb3IodmFyIGtleSBpbiBzcmMpcmVkZWZpbmUodGFyZ2V0LCBrZXksIHNyY1trZXldKTtcbiAgcmV0dXJuIHRhcmdldDtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLnJlZGVmaW5lLWFsbC5qc1xuLy8gbW9kdWxlIGlkID0gMTk3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 198 */
/***/ (function(module, exports) {

eval("// 7.2.9 SameValue(x, y)\nmodule.exports = Object.is || function is(x, y){\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTk4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5zYW1lLXZhbHVlLmpzPzcxMzciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4yLjkgU2FtZVZhbHVlKHgsIHkpXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5pcyB8fCBmdW5jdGlvbiBpcyh4LCB5KXtcbiAgcmV0dXJuIHggPT09IHkgPyB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geSA6IHggIT0geCAmJiB5ICE9IHk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5zYW1lLXZhbHVlLmpzXG4vLyBtb2R1bGUgaWQgPSAxOThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar core        = __webpack_require__(21)\n  , $           = __webpack_require__(8)\n  , DESCRIPTORS = __webpack_require__(70)\n  , SPECIES     = __webpack_require__(9)('species');\n\nmodule.exports = function(KEY){\n  var C = core[KEY];\n  if(DESCRIPTORS && C && !C[SPECIES])$.setDesc(C, SPECIES, {\n    configurable: true,\n    get: function(){ return this; }\n  });\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTk5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5zZXQtc3BlY2llcy5qcz8xOGNjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciBjb3JlICAgICAgICA9IHJlcXVpcmUoJy4vJC5jb3JlJylcbiAgLCAkICAgICAgICAgICA9IHJlcXVpcmUoJy4vJCcpXG4gICwgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLyQuZGVzY3JpcHRvcnMnKVxuICAsIFNQRUNJRVMgICAgID0gcmVxdWlyZSgnLi8kLndrcycpKCdzcGVjaWVzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oS0VZKXtcbiAgdmFyIEMgPSBjb3JlW0tFWV07XG4gIGlmKERFU0NSSVBUT1JTICYmIEMgJiYgIUNbU1BFQ0lFU10pJC5zZXREZXNjKEMsIFNQRUNJRVMsIHtcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpeyByZXR1cm4gdGhpczsgfVxuICB9KTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLnNldC1zcGVjaWVzLmpzXG4vLyBtb2R1bGUgaWQgPSAxOTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

eval("var global = __webpack_require__(19)\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5zaGFyZWQuanM/NzM1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi8kLmdsb2JhbCcpXG4gICwgU0hBUkVEID0gJ19fY29yZS1qc19zaGFyZWRfXydcbiAgLCBzdG9yZSAgPSBnbG9iYWxbU0hBUkVEXSB8fCAoZ2xvYmFsW1NIQVJFRF0gPSB7fSk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGtleSl7XG4gIHJldHVybiBzdG9yZVtrZXldIHx8IChzdG9yZVtrZXldID0ge30pO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQuc2hhcmVkLmpzXG4vLyBtb2R1bGUgaWQgPSAyMDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject  = __webpack_require__(28)\n  , aFunction = __webpack_require__(69)\n  , SPECIES   = __webpack_require__(9)('species');\nmodule.exports = function(O, D){\n  var C = anObject(O).constructor, S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5zcGVjaWVzLWNvbnN0cnVjdG9yLmpzPzVkZDYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4zLjIwIFNwZWNpZXNDb25zdHJ1Y3RvcihPLCBkZWZhdWx0Q29uc3RydWN0b3IpXG52YXIgYW5PYmplY3QgID0gcmVxdWlyZSgnLi8kLmFuLW9iamVjdCcpXG4gICwgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi8kLmEtZnVuY3Rpb24nKVxuICAsIFNQRUNJRVMgICA9IHJlcXVpcmUoJy4vJC53a3MnKSgnc3BlY2llcycpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihPLCBEKXtcbiAgdmFyIEMgPSBhbk9iamVjdChPKS5jb25zdHJ1Y3RvciwgUztcbiAgcmV0dXJuIEMgPT09IHVuZGVmaW5lZCB8fCAoUyA9IGFuT2JqZWN0KEMpW1NQRUNJRVNdKSA9PSB1bmRlZmluZWQgPyBEIDogYUZ1bmN0aW9uKFMpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQuc3BlY2llcy1jb25zdHJ1Y3Rvci5qc1xuLy8gbW9kdWxlIGlkID0gMjAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 202 */
/***/ (function(module, exports) {

eval("module.exports = function(it, Constructor, name){\n  if(!(it instanceof Constructor))throw TypeError(name + \": use the 'new' operator!\");\n  return it;\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5zdHJpY3QtbmV3LmpzPzY5N2IiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihpdCwgQ29uc3RydWN0b3IsIG5hbWUpe1xuICBpZighKGl0IGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IFR5cGVFcnJvcihuYW1lICsgXCI6IHVzZSB0aGUgJ25ldycgb3BlcmF0b3IhXCIpO1xuICByZXR1cm4gaXQ7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5zdHJpY3QtbmV3LmpzXG4vLyBtb2R1bGUgaWQgPSAyMDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

eval("var toInteger = __webpack_require__(110)\n  , defined   = __webpack_require__(102);\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5zdHJpbmctYXQuanM/MTVjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi8kLnRvLWludGVnZXInKVxuICAsIGRlZmluZWQgICA9IHJlcXVpcmUoJy4vJC5kZWZpbmVkJyk7XG4vLyB0cnVlICAtPiBTdHJpbmcjYXRcbi8vIGZhbHNlIC0+IFN0cmluZyNjb2RlUG9pbnRBdFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihUT19TVFJJTkcpe1xuICByZXR1cm4gZnVuY3Rpb24odGhhdCwgcG9zKXtcbiAgICB2YXIgcyA9IFN0cmluZyhkZWZpbmVkKHRoYXQpKVxuICAgICAgLCBpID0gdG9JbnRlZ2VyKHBvcylcbiAgICAgICwgbCA9IHMubGVuZ3RoXG4gICAgICAsIGEsIGI7XG4gICAgaWYoaSA8IDAgfHwgaSA+PSBsKXJldHVybiBUT19TVFJJTkcgPyAnJyA6IHVuZGVmaW5lZDtcbiAgICBhID0gcy5jaGFyQ29kZUF0KGkpO1xuICAgIHJldHVybiBhIDwgMHhkODAwIHx8IGEgPiAweGRiZmYgfHwgaSArIDEgPT09IGwgfHwgKGIgPSBzLmNoYXJDb2RlQXQoaSArIDEpKSA8IDB4ZGMwMCB8fCBiID4gMHhkZmZmXG4gICAgICA/IFRPX1NUUklORyA/IHMuY2hhckF0KGkpIDogYVxuICAgICAgOiBUT19TVFJJTkcgPyBzLnNsaWNlKGksIGkgKyAyKSA6IChhIC0gMHhkODAwIDw8IDEwKSArIChiIC0gMHhkYzAwKSArIDB4MTAwMDA7XG4gIH07XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC5zdHJpbmctYXQuanNcbi8vIG1vZHVsZSBpZCA9IDIwM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

eval("var ctx                = __webpack_require__(29)\n  , invoke             = __webpack_require__(188)\n  , html               = __webpack_require__(187)\n  , cel                = __webpack_require__(185)\n  , global             = __webpack_require__(19)\n  , process            = global.process\n  , setTask            = global.setImmediate\n  , clearTask          = global.clearImmediate\n  , MessageChannel     = global.MessageChannel\n  , counter            = 0\n  , queue              = {}\n  , ONREADYSTATECHANGE = 'onreadystatechange'\n  , defer, channel, port;\nvar run = function(){\n  var id = +this;\n  if(queue.hasOwnProperty(id)){\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listner = function(event){\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif(!setTask || !clearTask){\n  setTask = function setImmediate(fn){\n    var args = [], i = 1;\n    while(arguments.length > i)args.push(arguments[i++]);\n    queue[++counter] = function(){\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id){\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if(__webpack_require__(42)(process) == 'process'){\n    defer = function(id){\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if(MessageChannel){\n    channel = new MessageChannel;\n    port    = channel.port2;\n    channel.port1.onmessage = listner;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){\n    defer = function(id){\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listner, false);\n  // IE8-\n  } else if(ONREADYSTATECHANGE in cel('script')){\n    defer = function(id){\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function(id){\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set:   setTask,\n  clear: clearTask\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC50YXNrLmpzP2Y5OWIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGN0eCAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vJC5jdHgnKVxuICAsIGludm9rZSAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vJC5pbnZva2UnKVxuICAsIGh0bWwgICAgICAgICAgICAgICA9IHJlcXVpcmUoJy4vJC5odG1sJylcbiAgLCBjZWwgICAgICAgICAgICAgICAgPSByZXF1aXJlKCcuLyQuZG9tLWNyZWF0ZScpXG4gICwgZ2xvYmFsICAgICAgICAgICAgID0gcmVxdWlyZSgnLi8kLmdsb2JhbCcpXG4gICwgcHJvY2VzcyAgICAgICAgICAgID0gZ2xvYmFsLnByb2Nlc3NcbiAgLCBzZXRUYXNrICAgICAgICAgICAgPSBnbG9iYWwuc2V0SW1tZWRpYXRlXG4gICwgY2xlYXJUYXNrICAgICAgICAgID0gZ2xvYmFsLmNsZWFySW1tZWRpYXRlXG4gICwgTWVzc2FnZUNoYW5uZWwgICAgID0gZ2xvYmFsLk1lc3NhZ2VDaGFubmVsXG4gICwgY291bnRlciAgICAgICAgICAgID0gMFxuICAsIHF1ZXVlICAgICAgICAgICAgICA9IHt9XG4gICwgT05SRUFEWVNUQVRFQ0hBTkdFID0gJ29ucmVhZHlzdGF0ZWNoYW5nZSdcbiAgLCBkZWZlciwgY2hhbm5lbCwgcG9ydDtcbnZhciBydW4gPSBmdW5jdGlvbigpe1xuICB2YXIgaWQgPSArdGhpcztcbiAgaWYocXVldWUuaGFzT3duUHJvcGVydHkoaWQpKXtcbiAgICB2YXIgZm4gPSBxdWV1ZVtpZF07XG4gICAgZGVsZXRlIHF1ZXVlW2lkXTtcbiAgICBmbigpO1xuICB9XG59O1xudmFyIGxpc3RuZXIgPSBmdW5jdGlvbihldmVudCl7XG4gIHJ1bi5jYWxsKGV2ZW50LmRhdGEpO1xufTtcbi8vIE5vZGUuanMgMC45KyAmIElFMTArIGhhcyBzZXRJbW1lZGlhdGUsIG90aGVyd2lzZTpcbmlmKCFzZXRUYXNrIHx8ICFjbGVhclRhc2spe1xuICBzZXRUYXNrID0gZnVuY3Rpb24gc2V0SW1tZWRpYXRlKGZuKXtcbiAgICB2YXIgYXJncyA9IFtdLCBpID0gMTtcbiAgICB3aGlsZShhcmd1bWVudHMubGVuZ3RoID4gaSlhcmdzLnB1c2goYXJndW1lbnRzW2krK10pO1xuICAgIHF1ZXVlWysrY291bnRlcl0gPSBmdW5jdGlvbigpe1xuICAgICAgaW52b2tlKHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nID8gZm4gOiBGdW5jdGlvbihmbiksIGFyZ3MpO1xuICAgIH07XG4gICAgZGVmZXIoY291bnRlcik7XG4gICAgcmV0dXJuIGNvdW50ZXI7XG4gIH07XG4gIGNsZWFyVGFzayA9IGZ1bmN0aW9uIGNsZWFySW1tZWRpYXRlKGlkKXtcbiAgICBkZWxldGUgcXVldWVbaWRdO1xuICB9O1xuICAvLyBOb2RlLmpzIDAuOC1cbiAgaWYocmVxdWlyZSgnLi8kLmNvZicpKHByb2Nlc3MpID09ICdwcm9jZXNzJyl7XG4gICAgZGVmZXIgPSBmdW5jdGlvbihpZCl7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGN0eChydW4sIGlkLCAxKSk7XG4gICAgfTtcbiAgLy8gQnJvd3NlcnMgd2l0aCBNZXNzYWdlQ2hhbm5lbCwgaW5jbHVkZXMgV2ViV29ya2Vyc1xuICB9IGVsc2UgaWYoTWVzc2FnZUNoYW5uZWwpe1xuICAgIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWw7XG4gICAgcG9ydCAgICA9IGNoYW5uZWwucG9ydDI7XG4gICAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBsaXN0bmVyO1xuICAgIGRlZmVyID0gY3R4KHBvcnQucG9zdE1lc3NhZ2UsIHBvcnQsIDEpO1xuICAvLyBCcm93c2VycyB3aXRoIHBvc3RNZXNzYWdlLCBza2lwIFdlYldvcmtlcnNcbiAgLy8gSUU4IGhhcyBwb3N0TWVzc2FnZSwgYnV0IGl0J3Mgc3luYyAmIHR5cGVvZiBpdHMgcG9zdE1lc3NhZ2UgaXMgJ29iamVjdCdcbiAgfSBlbHNlIGlmKGdsb2JhbC5hZGRFdmVudExpc3RlbmVyICYmIHR5cGVvZiBwb3N0TWVzc2FnZSA9PSAnZnVuY3Rpb24nICYmICFnbG9iYWwuaW1wb3J0U2NyaXB0cyl7XG4gICAgZGVmZXIgPSBmdW5jdGlvbihpZCl7XG4gICAgICBnbG9iYWwucG9zdE1lc3NhZ2UoaWQgKyAnJywgJyonKTtcbiAgICB9O1xuICAgIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgbGlzdG5lciwgZmFsc2UpO1xuICAvLyBJRTgtXG4gIH0gZWxzZSBpZihPTlJFQURZU1RBVEVDSEFOR0UgaW4gY2VsKCdzY3JpcHQnKSl7XG4gICAgZGVmZXIgPSBmdW5jdGlvbihpZCl7XG4gICAgICBodG1sLmFwcGVuZENoaWxkKGNlbCgnc2NyaXB0JykpW09OUkVBRFlTVEFURUNIQU5HRV0gPSBmdW5jdGlvbigpe1xuICAgICAgICBodG1sLnJlbW92ZUNoaWxkKHRoaXMpO1xuICAgICAgICBydW4uY2FsbChpZCk7XG4gICAgICB9O1xuICAgIH07XG4gIC8vIFJlc3Qgb2xkIGJyb3dzZXJzXG4gIH0gZWxzZSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbihpZCl7XG4gICAgICBzZXRUaW1lb3V0KGN0eChydW4sIGlkLCAxKSwgMCk7XG4gICAgfTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldDogICBzZXRUYXNrLFxuICBjbGVhcjogY2xlYXJUYXNrXG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC50YXNrLmpzXG4vLyBtb2R1bGUgaWQgPSAyMDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 7.1.15 ToLength\nvar toInteger = __webpack_require__(110)\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC50by1sZW5ndGguanM/NTg5NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjEuMTUgVG9MZW5ndGhcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuLyQudG8taW50ZWdlcicpXG4gICwgbWluICAgICAgID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGl0KXtcbiAgcmV0dXJuIGl0ID4gMCA/IG1pbih0b0ludGVnZXIoaXQpLCAweDFmZmZmZmZmZmZmZmZmKSA6IDA7IC8vIHBvdygyLCA1MykgLSAxID09IDkwMDcxOTkyNTQ3NDA5OTFcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3dhdmVzLWxvYWRlcnMvfi9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy8kLnRvLWxlbmd0aC5qc1xuLy8gbW9kdWxlIGlkID0gMjA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 206 */
/***/ (function(module, exports) {

eval("var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvJC51aWQuanM/M2I3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaWQgPSAwXG4gICwgcHggPSBNYXRoLnJhbmRvbSgpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihrZXkpe1xuICByZXR1cm4gJ1N5bWJvbCgnLmNvbmNhdChrZXkgPT09IHVuZGVmaW5lZCA/ICcnIDoga2V5LCAnKV8nLCAoKytpZCArIHB4KS50b1N0cmluZygzNikpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzLyQudWlkLmpzXG4vLyBtb2R1bGUgaWQgPSAyMDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

eval("var classof   = __webpack_require__(101)\n  , ITERATOR  = __webpack_require__(9)('iterator')\n  , Iterators = __webpack_require__(30);\nmodule.exports = __webpack_require__(21).getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kLmpzP2Y0ZjkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNsYXNzb2YgICA9IHJlcXVpcmUoJy4vJC5jbGFzc29mJylcbiAgLCBJVEVSQVRPUiAgPSByZXF1aXJlKCcuLyQud2tzJykoJ2l0ZXJhdG9yJylcbiAgLCBJdGVyYXRvcnMgPSByZXF1aXJlKCcuLyQuaXRlcmF0b3JzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vJC5jb3JlJykuZ2V0SXRlcmF0b3JNZXRob2QgPSBmdW5jdGlvbihpdCl7XG4gIGlmKGl0ICE9IHVuZGVmaW5lZClyZXR1cm4gaXRbSVRFUkFUT1JdXG4gICAgfHwgaXRbJ0BAaXRlcmF0b3InXVxuICAgIHx8IEl0ZXJhdG9yc1tjbGFzc29mKGl0KV07XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kLmpzXG4vLyBtb2R1bGUgaWQgPSAyMDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar addToUnscopables = __webpack_require__(184)\n  , step             = __webpack_require__(194)\n  , Iterators        = __webpack_require__(30)\n  , toIObject        = __webpack_require__(111);\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(105)(Array, 'Array', function(iterated, kind){\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , kind  = this._k\n    , index = this._i++;\n  if(!O || index >= O.length){\n    this._t = undefined;\n    return step(1);\n  }\n  if(kind == 'keys'  )return step(0, index);\n  if(kind == 'values')return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LmFycmF5Lml0ZXJhdG9yLmpzPzU0NTQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGFkZFRvVW5zY29wYWJsZXMgPSByZXF1aXJlKCcuLyQuYWRkLXRvLXVuc2NvcGFibGVzJylcbiAgLCBzdGVwICAgICAgICAgICAgID0gcmVxdWlyZSgnLi8kLml0ZXItc3RlcCcpXG4gICwgSXRlcmF0b3JzICAgICAgICA9IHJlcXVpcmUoJy4vJC5pdGVyYXRvcnMnKVxuICAsIHRvSU9iamVjdCAgICAgICAgPSByZXF1aXJlKCcuLyQudG8taW9iamVjdCcpO1xuXG4vLyAyMi4xLjMuNCBBcnJheS5wcm90b3R5cGUuZW50cmllcygpXG4vLyAyMi4xLjMuMTMgQXJyYXkucHJvdG90eXBlLmtleXMoKVxuLy8gMjIuMS4zLjI5IEFycmF5LnByb3RvdHlwZS52YWx1ZXMoKVxuLy8gMjIuMS4zLjMwIEFycmF5LnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vJC5pdGVyLWRlZmluZScpKEFycmF5LCAnQXJyYXknLCBmdW5jdGlvbihpdGVyYXRlZCwga2luZCl7XG4gIHRoaXMuX3QgPSB0b0lPYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbiAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgIC8vIGtpbmRcbi8vIDIyLjEuNS4yLjEgJUFycmF5SXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24oKXtcbiAgdmFyIE8gICAgID0gdGhpcy5fdFxuICAgICwga2luZCAgPSB0aGlzLl9rXG4gICAgLCBpbmRleCA9IHRoaXMuX2krKztcbiAgaWYoIU8gfHwgaW5kZXggPj0gTy5sZW5ndGgpe1xuICAgIHRoaXMuX3QgPSB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIHN0ZXAoMSk7XG4gIH1cbiAgaWYoa2luZCA9PSAna2V5cycgIClyZXR1cm4gc3RlcCgwLCBpbmRleCk7XG4gIGlmKGtpbmQgPT0gJ3ZhbHVlcycpcmV0dXJuIHN0ZXAoMCwgT1tpbmRleF0pO1xuICByZXR1cm4gc3RlcCgwLCBbaW5kZXgsIE9baW5kZXhdXSk7XG59LCAndmFsdWVzJyk7XG5cbi8vIGFyZ3VtZW50c0xpc3RbQEBpdGVyYXRvcl0gaXMgJUFycmF5UHJvdG9fdmFsdWVzJSAoOS40LjQuNiwgOS40LjQuNylcbkl0ZXJhdG9ycy5Bcmd1bWVudHMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbmFkZFRvVW5zY29wYWJsZXMoJ2tleXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ3ZhbHVlcycpO1xuYWRkVG9VbnNjb3BhYmxlcygnZW50cmllcycpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LmFycmF5Lml0ZXJhdG9yLmpzXG4vLyBtb2R1bGUgaWQgPSAyMDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\nvar toIObject = __webpack_require__(111);\n\n__webpack_require__(196)('getOwnPropertyDescriptor', function($getOwnPropertyDescriptor){\n  return function getOwnPropertyDescriptor(it, key){\n    return $getOwnPropertyDescriptor(toIObject(it), key);\n  };\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjA5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanM/YTdjZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAxOS4xLjIuNiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApXG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi8kLnRvLWlvYmplY3QnKTtcblxucmVxdWlyZSgnLi8kLm9iamVjdC1zYXAnKSgnZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yJywgZnVuY3Rpb24oJGdldE93blByb3BlcnR5RGVzY3JpcHRvcil7XG4gIHJldHVybiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSl7XG4gICAgcmV0dXJuICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodG9JT2JqZWN0KGl0KSwga2V5KTtcbiAgfTtcbn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDIwOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = __webpack_require__(43);\n$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(109).set});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mLmpzP2FhODQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMTkuMS4zLjE5IE9iamVjdC5zZXRQcm90b3R5cGVPZihPLCBwcm90bylcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi8kLmV4cG9ydCcpO1xuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7c2V0UHJvdG90eXBlT2Y6IHJlcXVpcmUoJy4vJC5zZXQtcHJvdG8nKS5zZXR9KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZi5qc1xuLy8gbW9kdWxlIGlkID0gMjEwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 211 */
/***/ (function(module, exports) {

eval("//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjExLmpzIiwic291cmNlcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar $          = __webpack_require__(8)\n  , LIBRARY    = __webpack_require__(106)\n  , global     = __webpack_require__(19)\n  , ctx        = __webpack_require__(29)\n  , classof    = __webpack_require__(101)\n  , $export    = __webpack_require__(43)\n  , isObject   = __webpack_require__(44)\n  , anObject   = __webpack_require__(28)\n  , aFunction  = __webpack_require__(69)\n  , strictNew  = __webpack_require__(202)\n  , forOf      = __webpack_require__(186)\n  , setProto   = __webpack_require__(109).set\n  , same       = __webpack_require__(198)\n  , SPECIES    = __webpack_require__(9)('species')\n  , speciesConstructor = __webpack_require__(201)\n  , asap       = __webpack_require__(195)\n  , PROMISE    = 'Promise'\n  , process    = global.process\n  , isNode     = classof(process) == 'process'\n  , P          = global[PROMISE]\n  , empty      = function(){ /* empty */ }\n  , Wrapper;\n\nvar testResolve = function(sub){\n  var test = new P(empty), promise;\n  if(sub)test.constructor = function(exec){\n    exec(empty, empty);\n  };\n  (promise = P.resolve(test))['catch'](empty);\n  return promise === test;\n};\n\nvar USE_NATIVE = function(){\n  var works = false;\n  function P2(x){\n    var self = new P(x);\n    setProto(self, P2.prototype);\n    return self;\n  }\n  try {\n    works = P && P.resolve && testResolve();\n    setProto(P2, P);\n    P2.prototype = $.create(P.prototype, {constructor: {value: P2}});\n    // actual Firefox has broken subclass support, test that\n    if(!(P2.resolve(5).then(function(){}) instanceof P2)){\n      works = false;\n    }\n    // actual V8 bug, https://code.google.com/p/v8/issues/detail?id=4162\n    if(works && __webpack_require__(70)){\n      var thenableThenGotten = false;\n      P.resolve($.setDesc({}, 'then', {\n        get: function(){ thenableThenGotten = true; }\n      }));\n      works = thenableThenGotten;\n    }\n  } catch(e){ works = false; }\n  return works;\n}();\n\n// helpers\nvar sameConstructor = function(a, b){\n  // library wrapper special case\n  if(LIBRARY && a === P && b === Wrapper)return true;\n  return same(a, b);\n};\nvar getConstructor = function(C){\n  var S = anObject(C)[SPECIES];\n  return S != undefined ? S : C;\n};\nvar isThenable = function(it){\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar PromiseCapability = function(C){\n  var resolve, reject;\n  this.promise = new C(function($$resolve, $$reject){\n    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject  = $$reject;\n  });\n  this.resolve = aFunction(resolve),\n  this.reject  = aFunction(reject)\n};\nvar perform = function(exec){\n  try {\n    exec();\n  } catch(e){\n    return {error: e};\n  }\n};\nvar notify = function(record, isReject){\n  if(record.n)return;\n  record.n = true;\n  var chain = record.c;\n  asap(function(){\n    var value = record.v\n      , ok    = record.s == 1\n      , i     = 0;\n    var run = function(reaction){\n      var handler = ok ? reaction.ok : reaction.fail\n        , resolve = reaction.resolve\n        , reject  = reaction.reject\n        , result, then;\n      try {\n        if(handler){\n          if(!ok)record.h = true;\n          result = handler === true ? value : handler(value);\n          if(result === reaction.promise){\n            reject(TypeError('Promise-chain cycle'));\n          } else if(then = isThenable(result)){\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch(e){\n        reject(e);\n      }\n    };\n    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach\n    chain.length = 0;\n    record.n = false;\n    if(isReject)setTimeout(function(){\n      var promise = record.p\n        , handler, console;\n      if(isUnhandled(promise)){\n        if(isNode){\n          process.emit('unhandledRejection', value, promise);\n        } else if(handler = global.onunhandledrejection){\n          handler({promise: promise, reason: value});\n        } else if((console = global.console) && console.error){\n          console.error('Unhandled promise rejection', value);\n        }\n      } record.a = undefined;\n    }, 1);\n  });\n};\nvar isUnhandled = function(promise){\n  var record = promise._d\n    , chain  = record.a || record.c\n    , i      = 0\n    , reaction;\n  if(record.h)return false;\n  while(chain.length > i){\n    reaction = chain[i++];\n    if(reaction.fail || !isUnhandled(reaction.promise))return false;\n  } return true;\n};\nvar $reject = function(value){\n  var record = this;\n  if(record.d)return;\n  record.d = true;\n  record = record.r || record; // unwrap\n  record.v = value;\n  record.s = 2;\n  record.a = record.c.slice();\n  notify(record, true);\n};\nvar $resolve = function(value){\n  var record = this\n    , then;\n  if(record.d)return;\n  record.d = true;\n  record = record.r || record; // unwrap\n  try {\n    if(record.p === value)throw TypeError(\"Promise can't be resolved itself\");\n    if(then = isThenable(value)){\n      asap(function(){\n        var wrapper = {r: record, d: false}; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch(e){\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      record.v = value;\n      record.s = 1;\n      notify(record, false);\n    }\n  } catch(e){\n    $reject.call({r: record, d: false}, e); // wrap\n  }\n};\n\n// constructor polyfill\nif(!USE_NATIVE){\n  // 25.4.3.1 Promise(executor)\n  P = function Promise(executor){\n    aFunction(executor);\n    var record = this._d = {\n      p: strictNew(this, P, PROMISE),         // <- promise\n      c: [],                                  // <- awaiting reactions\n      a: undefined,                           // <- checked in isUnhandled reactions\n      s: 0,                                   // <- state\n      d: false,                               // <- done\n      v: undefined,                           // <- value\n      h: false,                               // <- handled rejection\n      n: false                                // <- notify\n    };\n    try {\n      executor(ctx($resolve, record, 1), ctx($reject, record, 1));\n    } catch(err){\n      $reject.call(record, err);\n    }\n  };\n  __webpack_require__(197)(P.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected){\n      var reaction = new PromiseCapability(speciesConstructor(this, P))\n        , promise  = reaction.promise\n        , record   = this._d;\n      reaction.ok   = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      record.c.push(reaction);\n      if(record.a)record.a.push(reaction);\n      if(record.s)notify(record, false);\n      return promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function(onRejected){\n      return this.then(undefined, onRejected);\n    }\n  });\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: P});\n__webpack_require__(72)(P, PROMISE);\n__webpack_require__(199)(PROMISE);\nWrapper = __webpack_require__(21)[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r){\n    var capability = new PromiseCapability(this)\n      , $$reject   = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (!USE_NATIVE || testResolve(true)), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x){\n    // instanceof instead of internal slot check because we should fix it without replacement native Promise core\n    if(x instanceof P && sameConstructor(x.constructor, this))return x;\n    var capability = new PromiseCapability(this)\n      , $$resolve  = capability.resolve;\n    $$resolve(x);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(193)(function(iter){\n  P.all(iter)['catch'](function(){});\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable){\n    var C          = getConstructor(this)\n      , capability = new PromiseCapability(C)\n      , resolve    = capability.resolve\n      , reject     = capability.reject\n      , values     = [];\n    var abrupt = perform(function(){\n      forOf(iterable, false, values.push, values);\n      var remaining = values.length\n        , results   = Array(remaining);\n      if(remaining)$.each.call(values, function(promise, index){\n        var alreadyCalled = false;\n        C.resolve(promise).then(function(value){\n          if(alreadyCalled)return;\n          alreadyCalled = true;\n          results[index] = value;\n          --remaining || resolve(results);\n        }, reject);\n      });\n      else resolve(results);\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable){\n    var C          = getConstructor(this)\n      , capability = new PromiseCapability(C)\n      , reject     = capability.reject;\n    var abrupt = perform(function(){\n      forOf(iterable, false, function(promise){\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if(abrupt)reject(abrupt.error);\n    return capability.promise;\n  }\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar $at  = __webpack_require__(203)(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(105)(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvci5qcz9kZmQ0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciAkYXQgID0gcmVxdWlyZSgnLi8kLnN0cmluZy1hdCcpKHRydWUpO1xuXG4vLyAyMS4xLjMuMjcgU3RyaW5nLnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5yZXF1aXJlKCcuLyQuaXRlci1kZWZpbmUnKShTdHJpbmcsICdTdHJpbmcnLCBmdW5jdGlvbihpdGVyYXRlZCl7XG4gIHRoaXMuX3QgPSBTdHJpbmcoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbi8vIDIxLjEuNS4yLjEgJVN0cmluZ0l0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uKCl7XG4gIHZhciBPICAgICA9IHRoaXMuX3RcbiAgICAsIGluZGV4ID0gdGhpcy5faVxuICAgICwgcG9pbnQ7XG4gIGlmKGluZGV4ID49IE8ubGVuZ3RoKXJldHVybiB7dmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZX07XG4gIHBvaW50ID0gJGF0KE8sIGluZGV4KTtcbiAgdGhpcy5faSArPSBwb2ludC5sZW5ndGg7XG4gIHJldHVybiB7dmFsdWU6IHBvaW50LCBkb25lOiBmYWxzZX07XG59KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vd2F2ZXMtbG9hZGVycy9+L2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDIxM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(208);\nvar Iterators = __webpack_require__(30);\nIterators.NodeList = Iterators.HTMLCollection = Iterators.Array;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZS5qcz8yMGU0Il0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vZXM2LmFycmF5Lml0ZXJhdG9yJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi8kLml0ZXJhdG9ycycpO1xuSXRlcmF0b3JzLk5vZGVMaXN0ID0gSXRlcmF0b3JzLkhUTUxDb2xsZWN0aW9uID0gSXRlcmF0b3JzLkFycmF5O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL34vY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZS5qc1xuLy8gbW9kdWxlIGlkID0gMjE0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * @file Loaders: AudioBuffer loader and utilities\n * @author Samuel Goldszmidt\n * @version 0.1.1\n */\n\n// CommonJS function export\nmodule.exports = {\n  Loader: __webpack_require__(95),\n  AudioBufferLoader: __webpack_require__(94),\n  SuperLoader: __webpack_require__(175)\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlcy1sb2FkZXJzL3dhdmVzLWxvYWRlcnMuanM/YjhhOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlIExvYWRlcnM6IEF1ZGlvQnVmZmVyIGxvYWRlciBhbmQgdXRpbGl0aWVzXG4gKiBAYXV0aG9yIFNhbXVlbCBHb2xkc3ptaWR0XG4gKiBAdmVyc2lvbiAwLjEuMVxuICovXG5cbi8vIENvbW1vbkpTIGZ1bmN0aW9uIGV4cG9ydFxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIExvYWRlcjogcmVxdWlyZSgnLi9kaXN0L2xvYWRlcicpLFxuICBBdWRpb0J1ZmZlckxvYWRlcjogcmVxdWlyZSgnLi9kaXN0L2F1ZGlvLWJ1ZmZlci1sb2FkZXInKSxcbiAgU3VwZXJMb2FkZXI6IHJlcXVpcmUoJy4vZGlzdC9zdXBlci1sb2FkZXInKVxufTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlcy1sb2FkZXJzL3dhdmVzLWxvYWRlcnMuanNcbi8vIG1vZHVsZSBpZCA9IDIxNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! wavesurfer.js 1.3.7 (Sun, 19 Mar 2017 17:49:02 GMT)\n* https://github.com/katspaugh/wavesurfer.js\n* @license CC-BY-3.0 */!function(a,b){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(73)], __WEBPACK_AMD_DEFINE_RESULT__ = function(a){return b(a)}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):\"object\"==typeof exports?module.exports=b(require(\"wavesurfer.js\")):b(WaveSurfer)}(this,function(a){\"use strict\";a.Regions={init:function(a){this.wavesurfer=a,this.wrapper=this.wavesurfer.drawer.wrapper,this.list={}},add:function(b){var c=Object.create(a.Region);return c.init(b,this.wavesurfer),this.list[c.id]=c,c.on(\"remove\",function(){delete this.list[c.id]}.bind(this)),c},clear:function(){Object.keys(this.list).forEach(function(a){this.list[a].remove()},this)},enableDragSelection:function(a){var b,c,d,e,f=this,g=a.slop||2,h=0,i=function(a){a.touches&&a.touches.length>1||a.target.childElementCount>0||(e=a.targetTouches?a.targetTouches[0].identifier:null,b=!0,c=f.wavesurfer.drawer.handleEvent(a,!0),d=null)};this.wrapper.addEventListener(\"mousedown\",i),this.wrapper.addEventListener(\"touchstart\",i),this.on(\"disable-drag-selection\",function(){f.wrapper.removeEventListener(\"touchstart\",i),f.wrapper.removeEventListener(\"mousedown\",i)});var j=function(a){a.touches&&a.touches.length>1||(b=!1,h=0,d&&(d.fireEvent(\"update-end\",a),f.wavesurfer.fireEvent(\"region-update-end\",d,a)),d=null)};this.wrapper.addEventListener(\"mouseup\",j),this.wrapper.addEventListener(\"touchend\",j),this.on(\"disable-drag-selection\",function(){f.wrapper.removeEventListener(\"touchend\",j),f.wrapper.removeEventListener(\"mouseup\",j)});var k=function(i){if(b&&!(++h<=g||i.touches&&i.touches.length>1||i.targetTouches&&i.targetTouches[0].identifier!=e)){d||(d=f.add(a||{}));var j=f.wavesurfer.getDuration(),k=f.wavesurfer.drawer.handleEvent(i);d.update({start:Math.min(k*j,c*j),end:Math.max(k*j,c*j)})}};this.wrapper.addEventListener(\"mousemove\",k),this.wrapper.addEventListener(\"touchmove\",k),this.on(\"disable-drag-selection\",function(){f.wrapper.removeEventListener(\"touchmove\",k),f.wrapper.removeEventListener(\"mousemove\",k)})},disableDragSelection:function(){this.fireEvent(\"disable-drag-selection\")}},a.util.extend(a.Regions,a.Observer),a.Region={style:a.Drawer.style,init:function(b,c){this.wavesurfer=c,this.wrapper=c.drawer.wrapper,this.id=null==b.id?a.util.getId():b.id,this.start=Number(b.start)||0,this.end=null==b.end?this.start+4/this.wrapper.scrollWidth*this.wavesurfer.getDuration():Number(b.end),this.resize=void 0===b.resize||Boolean(b.resize),this.drag=void 0===b.drag||Boolean(b.drag),this.loop=Boolean(b.loop),this.color=b.color||\"rgba(0, 0, 0, 0.1)\",this.data=b.data||{},this.attributes=b.attributes||{},this.maxLength=b.maxLength,this.minLength=b.minLength,this.bindInOut(),this.render(),this.onZoom=this.updateRender.bind(this),this.wavesurfer.on(\"zoom\",this.onZoom),this.wavesurfer.fireEvent(\"region-created\",this)},update:function(a){null!=a.start&&(this.start=Number(a.start)),null!=a.end&&(this.end=Number(a.end)),null!=a.loop&&(this.loop=Boolean(a.loop)),null!=a.color&&(this.color=a.color),null!=a.data&&(this.data=a.data),null!=a.resize&&(this.resize=Boolean(a.resize)),null!=a.drag&&(this.drag=Boolean(a.drag)),null!=a.maxLength&&(this.maxLength=Number(a.maxLength)),null!=a.minLength&&(this.minLength=Number(a.minLength)),null!=a.attributes&&(this.attributes=a.attributes),this.updateRender(),this.fireEvent(\"update\"),this.wavesurfer.fireEvent(\"region-updated\",this)},remove:function(){this.element&&(this.wrapper.removeChild(this.element),this.element=null,this.wavesurfer.un(\"zoom\",this.onZoom),this.fireEvent(\"remove\"),this.wavesurfer.fireEvent(\"region-removed\",this))},play:function(){this.wavesurfer.play(this.start,this.end),this.fireEvent(\"play\"),this.wavesurfer.fireEvent(\"region-play\",this)},playLoop:function(){this.play(),this.once(\"out\",this.playLoop.bind(this))},render:function(){var a=document.createElement(\"region\");a.className=\"wavesurfer-region\",a.title=this.formatTime(this.start,this.end),a.setAttribute(\"data-id\",this.id);for(var b in this.attributes)a.setAttribute(\"data-region-\"+b,this.attributes[b]);this.wrapper.scrollWidth;if(this.style(a,{position:\"absolute\",zIndex:2,height:\"100%\",top:\"0px\"}),this.resize){var c=a.appendChild(document.createElement(\"handle\")),d=a.appendChild(document.createElement(\"handle\"));c.className=\"wavesurfer-handle wavesurfer-handle-start\",d.className=\"wavesurfer-handle wavesurfer-handle-end\";var e={cursor:\"col-resize\",position:\"absolute\",left:\"0px\",top:\"0px\",width:\"1%\",maxWidth:\"4px\",height:\"100%\"};this.style(c,e),this.style(d,e),this.style(d,{left:\"100%\"})}this.element=this.wrapper.appendChild(a),this.updateRender(),this.bindEvents(a)},formatTime:function(a,b){return(a==b?[a]:[a,b]).map(function(a){return[Math.floor(a%3600/60),(\"00\"+Math.floor(a%60)).slice(-2)].join(\":\")}).join(\"-\")},getWidth:function(){return this.wavesurfer.drawer.width/this.wavesurfer.params.pixelRatio},updateRender:function(){var a=this.wavesurfer.getDuration(),b=this.getWidth();if(this.start<0&&(this.start=0,this.end=this.end-this.start),this.end>a&&(this.end=a,this.start=a-(this.end-this.start)),null!=this.minLength&&(this.end=Math.max(this.start+this.minLength,this.end)),null!=this.maxLength&&(this.end=Math.min(this.start+this.maxLength,this.end)),null!=this.element){var c=Math.round(this.start/a*b),d=Math.round(this.end/a*b)-c;this.style(this.element,{left:c+\"px\",width:d+\"px\",backgroundColor:this.color,cursor:this.drag?\"move\":\"default\"});for(var e in this.attributes)this.element.setAttribute(\"data-region-\"+e,this.attributes[e]);this.element.title=this.formatTime(this.start,this.end)}},bindInOut:function(){var a=this;a.firedIn=!1,a.firedOut=!1;var b=function(b){!a.firedOut&&a.firedIn&&(a.start>=Math.round(100*b)/100||a.end<=Math.round(100*b)/100)&&(a.firedOut=!0,a.firedIn=!1,a.fireEvent(\"out\"),a.wavesurfer.fireEvent(\"region-out\",a)),!a.firedIn&&a.start<=b&&a.end>b&&(a.firedIn=!0,a.firedOut=!1,a.fireEvent(\"in\"),a.wavesurfer.fireEvent(\"region-in\",a))};this.wavesurfer.backend.on(\"audioprocess\",b),this.on(\"remove\",function(){a.wavesurfer.backend.un(\"audioprocess\",b)}),this.on(\"out\",function(){a.loop&&a.wavesurfer.play(a.start)})},bindEvents:function(){var a=this;this.element.addEventListener(\"mouseenter\",function(b){a.fireEvent(\"mouseenter\",b),a.wavesurfer.fireEvent(\"region-mouseenter\",a,b)}),this.element.addEventListener(\"mouseleave\",function(b){a.fireEvent(\"mouseleave\",b),a.wavesurfer.fireEvent(\"region-mouseleave\",a,b)}),this.element.addEventListener(\"click\",function(b){b.preventDefault(),a.fireEvent(\"click\",b),a.wavesurfer.fireEvent(\"region-click\",a,b)}),this.element.addEventListener(\"dblclick\",function(b){b.stopPropagation(),b.preventDefault(),a.fireEvent(\"dblclick\",b),a.wavesurfer.fireEvent(\"region-dblclick\",a,b)}),(this.drag||this.resize)&&function(){var b,c,d,e,f=a.wavesurfer.getDuration(),g=function(g){g.touches&&g.touches.length>1||(e=g.targetTouches?g.targetTouches[0].identifier:null,g.stopPropagation(),d=a.wavesurfer.drawer.handleEvent(g,!0)*f,\"handle\"==g.target.tagName.toLowerCase()?c=g.target.classList.contains(\"wavesurfer-handle-start\")?\"start\":\"end\":(b=!0,c=!1))},h=function(d){d.touches&&d.touches.length>1||(b||c)&&(b=!1,c=!1,a.fireEvent(\"update-end\",d),a.wavesurfer.fireEvent(\"region-update-end\",a,d))},i=function(g){if(!(g.touches&&g.touches.length>1)&&(!g.targetTouches||g.targetTouches[0].identifier==e)&&(b||c)){var h=a.wavesurfer.drawer.handleEvent(g)*f,i=h-d;d=h,a.drag&&b&&a.onDrag(i),a.resize&&c&&a.onResize(i,c)}};a.element.addEventListener(\"mousedown\",g),a.element.addEventListener(\"touchstart\",g),a.wrapper.addEventListener(\"mousemove\",i),a.wrapper.addEventListener(\"touchmove\",i),document.body.addEventListener(\"mouseup\",h),document.body.addEventListener(\"touchend\",h),a.on(\"remove\",function(){document.body.removeEventListener(\"mouseup\",h),document.body.removeEventListener(\"touchend\",h),a.wrapper.removeEventListener(\"mousemove\",i),a.wrapper.removeEventListener(\"touchmove\",i)}),a.wavesurfer.on(\"destroy\",function(){document.body.removeEventListener(\"mouseup\",h),document.body.removeEventListener(\"touchend\",h)})}()},onDrag:function(a){var b=this.wavesurfer.getDuration();this.end+a>b||this.start+a<0||this.update({start:this.start+a,end:this.end+a})},onResize:function(a,b){\"start\"==b?this.update({start:Math.min(this.start+a,this.end),end:Math.max(this.start+a,this.end)}):this.update({start:Math.min(this.end+a,this.start),end:Math.max(this.end+a,this.start)})}},a.util.extend(a.Region,a.Observer),a.initRegions=function(){this.regions||(this.regions=Object.create(a.Regions),this.regions.init(this))},a.addRegion=function(a){return this.initRegions(),this.regions.add(a)},a.clearRegions=function(){this.regions&&this.regions.clear()},a.enableDragSelection=function(a){this.initRegions(),this.regions.enableDragSelection(a)},a.disableDragSelection=function(){this.regions.disableDragSelection()}});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi93YXZlc3VyZmVyLmpzL2Rpc3QvcGx1Z2luL3dhdmVzdXJmZXIucmVnaW9ucy5taW4uanM/NWYzMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgd2F2ZXN1cmZlci5qcyAxLjMuNyAoU3VuLCAxOSBNYXIgMjAxNyAxNzo0OTowMiBHTVQpXG4qIGh0dHBzOi8vZ2l0aHViLmNvbS9rYXRzcGF1Z2gvd2F2ZXN1cmZlci5qc1xuKiBAbGljZW5zZSBDQy1CWS0zLjAgKi8hZnVuY3Rpb24oYSxiKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtcIndhdmVzdXJmZXJcIl0sZnVuY3Rpb24oYSl7cmV0dXJuIGIoYSl9KTpcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1iKHJlcXVpcmUoXCJ3YXZlc3VyZmVyLmpzXCIpKTpiKFdhdmVTdXJmZXIpfSh0aGlzLGZ1bmN0aW9uKGEpe1widXNlIHN0cmljdFwiO2EuUmVnaW9ucz17aW5pdDpmdW5jdGlvbihhKXt0aGlzLndhdmVzdXJmZXI9YSx0aGlzLndyYXBwZXI9dGhpcy53YXZlc3VyZmVyLmRyYXdlci53cmFwcGVyLHRoaXMubGlzdD17fX0sYWRkOmZ1bmN0aW9uKGIpe3ZhciBjPU9iamVjdC5jcmVhdGUoYS5SZWdpb24pO3JldHVybiBjLmluaXQoYix0aGlzLndhdmVzdXJmZXIpLHRoaXMubGlzdFtjLmlkXT1jLGMub24oXCJyZW1vdmVcIixmdW5jdGlvbigpe2RlbGV0ZSB0aGlzLmxpc3RbYy5pZF19LmJpbmQodGhpcykpLGN9LGNsZWFyOmZ1bmN0aW9uKCl7T2JqZWN0LmtleXModGhpcy5saXN0KS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3RoaXMubGlzdFthXS5yZW1vdmUoKX0sdGhpcyl9LGVuYWJsZURyYWdTZWxlY3Rpb246ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZj10aGlzLGc9YS5zbG9wfHwyLGg9MCxpPWZ1bmN0aW9uKGEpe2EudG91Y2hlcyYmYS50b3VjaGVzLmxlbmd0aD4xfHxhLnRhcmdldC5jaGlsZEVsZW1lbnRDb3VudD4wfHwoZT1hLnRhcmdldFRvdWNoZXM/YS50YXJnZXRUb3VjaGVzWzBdLmlkZW50aWZpZXI6bnVsbCxiPSEwLGM9Zi53YXZlc3VyZmVyLmRyYXdlci5oYW5kbGVFdmVudChhLCEwKSxkPW51bGwpfTt0aGlzLndyYXBwZXIuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLGkpLHRoaXMud3JhcHBlci5hZGRFdmVudExpc3RlbmVyKFwidG91Y2hzdGFydFwiLGkpLHRoaXMub24oXCJkaXNhYmxlLWRyYWctc2VsZWN0aW9uXCIsZnVuY3Rpb24oKXtmLndyYXBwZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIixpKSxmLndyYXBwZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLGkpfSk7dmFyIGo9ZnVuY3Rpb24oYSl7YS50b3VjaGVzJiZhLnRvdWNoZXMubGVuZ3RoPjF8fChiPSExLGg9MCxkJiYoZC5maXJlRXZlbnQoXCJ1cGRhdGUtZW5kXCIsYSksZi53YXZlc3VyZmVyLmZpcmVFdmVudChcInJlZ2lvbi11cGRhdGUtZW5kXCIsZCxhKSksZD1udWxsKX07dGhpcy53cmFwcGVyLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsaiksdGhpcy53cmFwcGVyLmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaGVuZFwiLGopLHRoaXMub24oXCJkaXNhYmxlLWRyYWctc2VsZWN0aW9uXCIsZnVuY3Rpb24oKXtmLndyYXBwZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoZW5kXCIsaiksZi53cmFwcGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsail9KTt2YXIgaz1mdW5jdGlvbihpKXtpZihiJiYhKCsraDw9Z3x8aS50b3VjaGVzJiZpLnRvdWNoZXMubGVuZ3RoPjF8fGkudGFyZ2V0VG91Y2hlcyYmaS50YXJnZXRUb3VjaGVzWzBdLmlkZW50aWZpZXIhPWUpKXtkfHwoZD1mLmFkZChhfHx7fSkpO3ZhciBqPWYud2F2ZXN1cmZlci5nZXREdXJhdGlvbigpLGs9Zi53YXZlc3VyZmVyLmRyYXdlci5oYW5kbGVFdmVudChpKTtkLnVwZGF0ZSh7c3RhcnQ6TWF0aC5taW4oaypqLGMqaiksZW5kOk1hdGgubWF4KGsqaixjKmopfSl9fTt0aGlzLndyYXBwZXIuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLGspLHRoaXMud3JhcHBlci5hZGRFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsayksdGhpcy5vbihcImRpc2FibGUtZHJhZy1zZWxlY3Rpb25cIixmdW5jdGlvbigpe2Yud3JhcHBlci5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2htb3ZlXCIsayksZi53cmFwcGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIixrKX0pfSxkaXNhYmxlRHJhZ1NlbGVjdGlvbjpmdW5jdGlvbigpe3RoaXMuZmlyZUV2ZW50KFwiZGlzYWJsZS1kcmFnLXNlbGVjdGlvblwiKX19LGEudXRpbC5leHRlbmQoYS5SZWdpb25zLGEuT2JzZXJ2ZXIpLGEuUmVnaW9uPXtzdHlsZTphLkRyYXdlci5zdHlsZSxpbml0OmZ1bmN0aW9uKGIsYyl7dGhpcy53YXZlc3VyZmVyPWMsdGhpcy53cmFwcGVyPWMuZHJhd2VyLndyYXBwZXIsdGhpcy5pZD1udWxsPT1iLmlkP2EudXRpbC5nZXRJZCgpOmIuaWQsdGhpcy5zdGFydD1OdW1iZXIoYi5zdGFydCl8fDAsdGhpcy5lbmQ9bnVsbD09Yi5lbmQ/dGhpcy5zdGFydCs0L3RoaXMud3JhcHBlci5zY3JvbGxXaWR0aCp0aGlzLndhdmVzdXJmZXIuZ2V0RHVyYXRpb24oKTpOdW1iZXIoYi5lbmQpLHRoaXMucmVzaXplPXZvaWQgMD09PWIucmVzaXplfHxCb29sZWFuKGIucmVzaXplKSx0aGlzLmRyYWc9dm9pZCAwPT09Yi5kcmFnfHxCb29sZWFuKGIuZHJhZyksdGhpcy5sb29wPUJvb2xlYW4oYi5sb29wKSx0aGlzLmNvbG9yPWIuY29sb3J8fFwicmdiYSgwLCAwLCAwLCAwLjEpXCIsdGhpcy5kYXRhPWIuZGF0YXx8e30sdGhpcy5hdHRyaWJ1dGVzPWIuYXR0cmlidXRlc3x8e30sdGhpcy5tYXhMZW5ndGg9Yi5tYXhMZW5ndGgsdGhpcy5taW5MZW5ndGg9Yi5taW5MZW5ndGgsdGhpcy5iaW5kSW5PdXQoKSx0aGlzLnJlbmRlcigpLHRoaXMub25ab29tPXRoaXMudXBkYXRlUmVuZGVyLmJpbmQodGhpcyksdGhpcy53YXZlc3VyZmVyLm9uKFwiem9vbVwiLHRoaXMub25ab29tKSx0aGlzLndhdmVzdXJmZXIuZmlyZUV2ZW50KFwicmVnaW9uLWNyZWF0ZWRcIix0aGlzKX0sdXBkYXRlOmZ1bmN0aW9uKGEpe251bGwhPWEuc3RhcnQmJih0aGlzLnN0YXJ0PU51bWJlcihhLnN0YXJ0KSksbnVsbCE9YS5lbmQmJih0aGlzLmVuZD1OdW1iZXIoYS5lbmQpKSxudWxsIT1hLmxvb3AmJih0aGlzLmxvb3A9Qm9vbGVhbihhLmxvb3ApKSxudWxsIT1hLmNvbG9yJiYodGhpcy5jb2xvcj1hLmNvbG9yKSxudWxsIT1hLmRhdGEmJih0aGlzLmRhdGE9YS5kYXRhKSxudWxsIT1hLnJlc2l6ZSYmKHRoaXMucmVzaXplPUJvb2xlYW4oYS5yZXNpemUpKSxudWxsIT1hLmRyYWcmJih0aGlzLmRyYWc9Qm9vbGVhbihhLmRyYWcpKSxudWxsIT1hLm1heExlbmd0aCYmKHRoaXMubWF4TGVuZ3RoPU51bWJlcihhLm1heExlbmd0aCkpLG51bGwhPWEubWluTGVuZ3RoJiYodGhpcy5taW5MZW5ndGg9TnVtYmVyKGEubWluTGVuZ3RoKSksbnVsbCE9YS5hdHRyaWJ1dGVzJiYodGhpcy5hdHRyaWJ1dGVzPWEuYXR0cmlidXRlcyksdGhpcy51cGRhdGVSZW5kZXIoKSx0aGlzLmZpcmVFdmVudChcInVwZGF0ZVwiKSx0aGlzLndhdmVzdXJmZXIuZmlyZUV2ZW50KFwicmVnaW9uLXVwZGF0ZWRcIix0aGlzKX0scmVtb3ZlOmZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50JiYodGhpcy53cmFwcGVyLnJlbW92ZUNoaWxkKHRoaXMuZWxlbWVudCksdGhpcy5lbGVtZW50PW51bGwsdGhpcy53YXZlc3VyZmVyLnVuKFwiem9vbVwiLHRoaXMub25ab29tKSx0aGlzLmZpcmVFdmVudChcInJlbW92ZVwiKSx0aGlzLndhdmVzdXJmZXIuZmlyZUV2ZW50KFwicmVnaW9uLXJlbW92ZWRcIix0aGlzKSl9LHBsYXk6ZnVuY3Rpb24oKXt0aGlzLndhdmVzdXJmZXIucGxheSh0aGlzLnN0YXJ0LHRoaXMuZW5kKSx0aGlzLmZpcmVFdmVudChcInBsYXlcIiksdGhpcy53YXZlc3VyZmVyLmZpcmVFdmVudChcInJlZ2lvbi1wbGF5XCIsdGhpcyl9LHBsYXlMb29wOmZ1bmN0aW9uKCl7dGhpcy5wbGF5KCksdGhpcy5vbmNlKFwib3V0XCIsdGhpcy5wbGF5TG9vcC5iaW5kKHRoaXMpKX0scmVuZGVyOmZ1bmN0aW9uKCl7dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInJlZ2lvblwiKTthLmNsYXNzTmFtZT1cIndhdmVzdXJmZXItcmVnaW9uXCIsYS50aXRsZT10aGlzLmZvcm1hdFRpbWUodGhpcy5zdGFydCx0aGlzLmVuZCksYS5zZXRBdHRyaWJ1dGUoXCJkYXRhLWlkXCIsdGhpcy5pZCk7Zm9yKHZhciBiIGluIHRoaXMuYXR0cmlidXRlcylhLnNldEF0dHJpYnV0ZShcImRhdGEtcmVnaW9uLVwiK2IsdGhpcy5hdHRyaWJ1dGVzW2JdKTt0aGlzLndyYXBwZXIuc2Nyb2xsV2lkdGg7aWYodGhpcy5zdHlsZShhLHtwb3NpdGlvbjpcImFic29sdXRlXCIsekluZGV4OjIsaGVpZ2h0OlwiMTAwJVwiLHRvcDpcIjBweFwifSksdGhpcy5yZXNpemUpe3ZhciBjPWEuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImhhbmRsZVwiKSksZD1hLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoYW5kbGVcIikpO2MuY2xhc3NOYW1lPVwid2F2ZXN1cmZlci1oYW5kbGUgd2F2ZXN1cmZlci1oYW5kbGUtc3RhcnRcIixkLmNsYXNzTmFtZT1cIndhdmVzdXJmZXItaGFuZGxlIHdhdmVzdXJmZXItaGFuZGxlLWVuZFwiO3ZhciBlPXtjdXJzb3I6XCJjb2wtcmVzaXplXCIscG9zaXRpb246XCJhYnNvbHV0ZVwiLGxlZnQ6XCIwcHhcIix0b3A6XCIwcHhcIix3aWR0aDpcIjElXCIsbWF4V2lkdGg6XCI0cHhcIixoZWlnaHQ6XCIxMDAlXCJ9O3RoaXMuc3R5bGUoYyxlKSx0aGlzLnN0eWxlKGQsZSksdGhpcy5zdHlsZShkLHtsZWZ0OlwiMTAwJVwifSl9dGhpcy5lbGVtZW50PXRoaXMud3JhcHBlci5hcHBlbmRDaGlsZChhKSx0aGlzLnVwZGF0ZVJlbmRlcigpLHRoaXMuYmluZEV2ZW50cyhhKX0sZm9ybWF0VGltZTpmdW5jdGlvbihhLGIpe3JldHVybihhPT1iP1thXTpbYSxiXSkubWFwKGZ1bmN0aW9uKGEpe3JldHVybltNYXRoLmZsb29yKGElMzYwMC82MCksKFwiMDBcIitNYXRoLmZsb29yKGElNjApKS5zbGljZSgtMildLmpvaW4oXCI6XCIpfSkuam9pbihcIi1cIil9LGdldFdpZHRoOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMud2F2ZXN1cmZlci5kcmF3ZXIud2lkdGgvdGhpcy53YXZlc3VyZmVyLnBhcmFtcy5waXhlbFJhdGlvfSx1cGRhdGVSZW5kZXI6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLndhdmVzdXJmZXIuZ2V0RHVyYXRpb24oKSxiPXRoaXMuZ2V0V2lkdGgoKTtpZih0aGlzLnN0YXJ0PDAmJih0aGlzLnN0YXJ0PTAsdGhpcy5lbmQ9dGhpcy5lbmQtdGhpcy5zdGFydCksdGhpcy5lbmQ+YSYmKHRoaXMuZW5kPWEsdGhpcy5zdGFydD1hLSh0aGlzLmVuZC10aGlzLnN0YXJ0KSksbnVsbCE9dGhpcy5taW5MZW5ndGgmJih0aGlzLmVuZD1NYXRoLm1heCh0aGlzLnN0YXJ0K3RoaXMubWluTGVuZ3RoLHRoaXMuZW5kKSksbnVsbCE9dGhpcy5tYXhMZW5ndGgmJih0aGlzLmVuZD1NYXRoLm1pbih0aGlzLnN0YXJ0K3RoaXMubWF4TGVuZ3RoLHRoaXMuZW5kKSksbnVsbCE9dGhpcy5lbGVtZW50KXt2YXIgYz1NYXRoLnJvdW5kKHRoaXMuc3RhcnQvYSpiKSxkPU1hdGgucm91bmQodGhpcy5lbmQvYSpiKS1jO3RoaXMuc3R5bGUodGhpcy5lbGVtZW50LHtsZWZ0OmMrXCJweFwiLHdpZHRoOmQrXCJweFwiLGJhY2tncm91bmRDb2xvcjp0aGlzLmNvbG9yLGN1cnNvcjp0aGlzLmRyYWc/XCJtb3ZlXCI6XCJkZWZhdWx0XCJ9KTtmb3IodmFyIGUgaW4gdGhpcy5hdHRyaWJ1dGVzKXRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXJlZ2lvbi1cIitlLHRoaXMuYXR0cmlidXRlc1tlXSk7dGhpcy5lbGVtZW50LnRpdGxlPXRoaXMuZm9ybWF0VGltZSh0aGlzLnN0YXJ0LHRoaXMuZW5kKX19LGJpbmRJbk91dDpmdW5jdGlvbigpe3ZhciBhPXRoaXM7YS5maXJlZEluPSExLGEuZmlyZWRPdXQ9ITE7dmFyIGI9ZnVuY3Rpb24oYil7IWEuZmlyZWRPdXQmJmEuZmlyZWRJbiYmKGEuc3RhcnQ+PU1hdGgucm91bmQoMTAwKmIpLzEwMHx8YS5lbmQ8PU1hdGgucm91bmQoMTAwKmIpLzEwMCkmJihhLmZpcmVkT3V0PSEwLGEuZmlyZWRJbj0hMSxhLmZpcmVFdmVudChcIm91dFwiKSxhLndhdmVzdXJmZXIuZmlyZUV2ZW50KFwicmVnaW9uLW91dFwiLGEpKSwhYS5maXJlZEluJiZhLnN0YXJ0PD1iJiZhLmVuZD5iJiYoYS5maXJlZEluPSEwLGEuZmlyZWRPdXQ9ITEsYS5maXJlRXZlbnQoXCJpblwiKSxhLndhdmVzdXJmZXIuZmlyZUV2ZW50KFwicmVnaW9uLWluXCIsYSkpfTt0aGlzLndhdmVzdXJmZXIuYmFja2VuZC5vbihcImF1ZGlvcHJvY2Vzc1wiLGIpLHRoaXMub24oXCJyZW1vdmVcIixmdW5jdGlvbigpe2Eud2F2ZXN1cmZlci5iYWNrZW5kLnVuKFwiYXVkaW9wcm9jZXNzXCIsYil9KSx0aGlzLm9uKFwib3V0XCIsZnVuY3Rpb24oKXthLmxvb3AmJmEud2F2ZXN1cmZlci5wbGF5KGEuc3RhcnQpfSl9LGJpbmRFdmVudHM6ZnVuY3Rpb24oKXt2YXIgYT10aGlzO3RoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VlbnRlclwiLGZ1bmN0aW9uKGIpe2EuZmlyZUV2ZW50KFwibW91c2VlbnRlclwiLGIpLGEud2F2ZXN1cmZlci5maXJlRXZlbnQoXCJyZWdpb24tbW91c2VlbnRlclwiLGEsYil9KSx0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbGVhdmVcIixmdW5jdGlvbihiKXthLmZpcmVFdmVudChcIm1vdXNlbGVhdmVcIixiKSxhLndhdmVzdXJmZXIuZmlyZUV2ZW50KFwicmVnaW9uLW1vdXNlbGVhdmVcIixhLGIpfSksdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKGIpe2IucHJldmVudERlZmF1bHQoKSxhLmZpcmVFdmVudChcImNsaWNrXCIsYiksYS53YXZlc3VyZmVyLmZpcmVFdmVudChcInJlZ2lvbi1jbGlja1wiLGEsYil9KSx0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImRibGNsaWNrXCIsZnVuY3Rpb24oYil7Yi5zdG9wUHJvcGFnYXRpb24oKSxiLnByZXZlbnREZWZhdWx0KCksYS5maXJlRXZlbnQoXCJkYmxjbGlja1wiLGIpLGEud2F2ZXN1cmZlci5maXJlRXZlbnQoXCJyZWdpb24tZGJsY2xpY2tcIixhLGIpfSksKHRoaXMuZHJhZ3x8dGhpcy5yZXNpemUpJiZmdW5jdGlvbigpe3ZhciBiLGMsZCxlLGY9YS53YXZlc3VyZmVyLmdldER1cmF0aW9uKCksZz1mdW5jdGlvbihnKXtnLnRvdWNoZXMmJmcudG91Y2hlcy5sZW5ndGg+MXx8KGU9Zy50YXJnZXRUb3VjaGVzP2cudGFyZ2V0VG91Y2hlc1swXS5pZGVudGlmaWVyOm51bGwsZy5zdG9wUHJvcGFnYXRpb24oKSxkPWEud2F2ZXN1cmZlci5kcmF3ZXIuaGFuZGxlRXZlbnQoZywhMCkqZixcImhhbmRsZVwiPT1nLnRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCk/Yz1nLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJ3YXZlc3VyZmVyLWhhbmRsZS1zdGFydFwiKT9cInN0YXJ0XCI6XCJlbmRcIjooYj0hMCxjPSExKSl9LGg9ZnVuY3Rpb24oZCl7ZC50b3VjaGVzJiZkLnRvdWNoZXMubGVuZ3RoPjF8fChifHxjKSYmKGI9ITEsYz0hMSxhLmZpcmVFdmVudChcInVwZGF0ZS1lbmRcIixkKSxhLndhdmVzdXJmZXIuZmlyZUV2ZW50KFwicmVnaW9uLXVwZGF0ZS1lbmRcIixhLGQpKX0saT1mdW5jdGlvbihnKXtpZighKGcudG91Y2hlcyYmZy50b3VjaGVzLmxlbmd0aD4xKSYmKCFnLnRhcmdldFRvdWNoZXN8fGcudGFyZ2V0VG91Y2hlc1swXS5pZGVudGlmaWVyPT1lKSYmKGJ8fGMpKXt2YXIgaD1hLndhdmVzdXJmZXIuZHJhd2VyLmhhbmRsZUV2ZW50KGcpKmYsaT1oLWQ7ZD1oLGEuZHJhZyYmYiYmYS5vbkRyYWcoaSksYS5yZXNpemUmJmMmJmEub25SZXNpemUoaSxjKX19O2EuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsZyksYS5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsZyksYS53cmFwcGVyLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIixpKSxhLndyYXBwZXIuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNobW92ZVwiLGkpLGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIixoKSxkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaGVuZFwiLGgpLGEub24oXCJyZW1vdmVcIixmdW5jdGlvbigpe2RvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIixoKSxkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaGVuZFwiLGgpLGEud3JhcHBlci5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsaSksYS53cmFwcGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaG1vdmVcIixpKX0pLGEud2F2ZXN1cmZlci5vbihcImRlc3Ryb3lcIixmdW5jdGlvbigpe2RvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIixoKSxkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaGVuZFwiLGgpfSl9KCl9LG9uRHJhZzpmdW5jdGlvbihhKXt2YXIgYj10aGlzLndhdmVzdXJmZXIuZ2V0RHVyYXRpb24oKTt0aGlzLmVuZCthPmJ8fHRoaXMuc3RhcnQrYTwwfHx0aGlzLnVwZGF0ZSh7c3RhcnQ6dGhpcy5zdGFydCthLGVuZDp0aGlzLmVuZCthfSl9LG9uUmVzaXplOmZ1bmN0aW9uKGEsYil7XCJzdGFydFwiPT1iP3RoaXMudXBkYXRlKHtzdGFydDpNYXRoLm1pbih0aGlzLnN0YXJ0K2EsdGhpcy5lbmQpLGVuZDpNYXRoLm1heCh0aGlzLnN0YXJ0K2EsdGhpcy5lbmQpfSk6dGhpcy51cGRhdGUoe3N0YXJ0Ok1hdGgubWluKHRoaXMuZW5kK2EsdGhpcy5zdGFydCksZW5kOk1hdGgubWF4KHRoaXMuZW5kK2EsdGhpcy5zdGFydCl9KX19LGEudXRpbC5leHRlbmQoYS5SZWdpb24sYS5PYnNlcnZlciksYS5pbml0UmVnaW9ucz1mdW5jdGlvbigpe3RoaXMucmVnaW9uc3x8KHRoaXMucmVnaW9ucz1PYmplY3QuY3JlYXRlKGEuUmVnaW9ucyksdGhpcy5yZWdpb25zLmluaXQodGhpcykpfSxhLmFkZFJlZ2lvbj1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5pbml0UmVnaW9ucygpLHRoaXMucmVnaW9ucy5hZGQoYSl9LGEuY2xlYXJSZWdpb25zPWZ1bmN0aW9uKCl7dGhpcy5yZWdpb25zJiZ0aGlzLnJlZ2lvbnMuY2xlYXIoKX0sYS5lbmFibGVEcmFnU2VsZWN0aW9uPWZ1bmN0aW9uKGEpe3RoaXMuaW5pdFJlZ2lvbnMoKSx0aGlzLnJlZ2lvbnMuZW5hYmxlRHJhZ1NlbGVjdGlvbihhKX0sYS5kaXNhYmxlRHJhZ1NlbGVjdGlvbj1mdW5jdGlvbigpe3RoaXMucmVnaW9ucy5kaXNhYmxlRHJhZ1NlbGVjdGlvbigpfX0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi93YXZlc3VyZmVyLmpzL2Rpc3QvcGx1Z2luL3dhdmVzdXJmZXIucmVnaW9ucy5taW4uanNcbi8vIG1vZHVsZSBpZCA9IDIxNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 217 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__init_js__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__defs_js__ = __webpack_require__(75);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_waves_basic_controllers__ = __webpack_require__(112);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_waves_basic_controllers___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_waves_basic_controllers__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_xml2js_min_js__ = __webpack_require__(76);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_xml2js_min_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__lib_xml2js_min_js__);\n\n\n\n\n //wavesBasicControllers is an alias in webpack.config.json\n\n // Soon to be used for XML -> JSON conversion (ELAN is XML).\n\nconst GRAIN_DEFAULT = __WEBPACK_IMPORTED_MODULE_1__defs_js__[\"a\" /* GrainDefs_Mix_Default_allround */];\nconst EQ_DEFAULT = __WEBPACK_IMPORTED_MODULE_1__defs_js__[\"b\" /* EQ_FLAT */];\n\nconst ANNO_ID = \"BAR\"; // prefix used for the ELAN annotations. Each measure will be an annotaion, ie BAR1, BAR2 ... BAR32...\n\nconst SCORE_WIDTH = 800; // Width of the score sheet. Doesn't work at the moment, so not used. (Should be used by ABC2SVG in dolayout()).\nconsole.log(\"FIXME: Make it possible to change pagewidth of score.\");\n\nvar x2js = new __WEBPACK_IMPORTED_MODULE_3__lib_xml2js_min_js___default.a();\n\n// Create elan instance\nvar elan = Object.create(__WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].ELAN);\n\n// Create Elan Wave Segment instance\nvar elanWaveSegment = Object.create(__WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].ELANWaveSegment);\nvar wavesSegmentsArray = [];\n\nvar selectedBars = []; // Numerical tuplet (ie [3, 5]) containing the first and last bar/measure when doing a selection in the score.\nvar selectedDIVs = []; // Array containing all DIV elements in the current score selection (ie [div#3 object, div#4 object, div#5 object] ).\nvar currentMeasure = undefined; // Used for hovering effect on score.\n\nvar ELAN_ACTIONS = {\n    'addselection': function () {\n        // This will spread the selected audio from the waveform over the selected bars in the score.\n        //if (currentMeasure == undefined) return;\n\n        if (Object.prototype.toString.call(selectedDIVs) === '[object Array]') {\n            if (selectedDIVs.length < 1) return;\n            var _highest = Math.max(...selectedBars);\n            var _lowest = Math.min(...selectedBars);\n\n            deleteOldSelectedDIVs();\n            //console.log(selectedRegion);\n            Waveform2Score(__WEBPACK_IMPORTED_MODULE_0__init_js__[\"b\" /* selectedRegion */].start, __WEBPACK_IMPORTED_MODULE_0__init_js__[\"b\" /* selectedRegion */].end, _lowest, _highest + 1);\n            selectedDIVs = getDIVrange(_lowest, _highest);\n        }\n    },\n    'mute': function () {\n        __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].toggleMute();\n    }\n};\n\nvar wz_xs = [],\n    wz_ymin = [],\n    wz_ymax = [],\n    tixbts = [],\n    bars = [];\nvar opt, onYouTubeIframeAPIReady, msc_credits, media_height, times_arr, offset_js, /*endtime_js,*/abc_arr, lpRec;\n//Vim Vree - ABC Web\nvar muziek,\n    curmtr,\n    curtmp,\n    msc_svgs,\n    msc_gs,\n    msc_wz,\n    offset,\n    mediaFnm,\n    abcSave,\n    elmed,\n    scoreFnm,\n    timerId = -1;\nvar ybplayer,\n    yubchk = 0,\n    pbrates = [],\n    noprogress = 0,\n    onYouTubeAPIContinue,\n    opt_url = {},\n    sok = null,\n    gFac;\nvar /*dummyPlayer = new DummyPlayer (), */TOFF = 0.01;\nopt = {}; // global options\nfunction initGlobals() {\n    abcSave = ''; // abc code:: [string]\n    muziek = ''; // svg code generated by abc2svg\n    curmtr = [0, 0, 0]; // current metre\n    curtmp = [0, 0, 0]; // current tempo\n    msc_svgs = []; // svg elements, one per line of music\n    msc_gs = []; // top graphics elements <g></g> of all music lines\n    msc_wz = null; // gobal cursor object\n    offset = 0.0; // offset: time in media file where music starts\n    gFac = 0.1; // absolute change for offset or duration\n    noprogress = 0; // stop cursor until offset synced\n}\nvar tixlb = [[0, 0, 1]];\n\n// From AbcWeb by Wim Vree\nfunction dolayout(abctxt) {\n    var muziek = '',\n        errtxt = '',\n        abc2svg,\n        bxs = {},\n        bys = {},\n        xleft,\n        times = [],\n        nxs = [],\n        mtxts = [];\n    var BAR = 0,\n        METER = 6,\n        NOTE = 8,\n        REST = 10,\n        TEMPO = 14,\n        BASE_LEN = 1536,\n        mbeats = [],\n        mreps = [],\n        mdurs = [];\n    // time index -> [line_num, bar_num, repcnt], line_num == 0.., bar_num == 1.., repcnt = 1..\n    var lbtix = []; // line_num, bar_num, repcnt -> time index\n    function errmsg(txt, line, col) {\n        errtxt += txt + '\\n';\n    }\n\n    function keySort(d) {\n        var keys = Object.keys(d).map(function f(x) {\n            return parseFloat(x);\n        });\n        keys.sort(function f(a, b) {\n            return a - b;\n        }); // numerical sort\n        return keys;\n    }\n\n    function img_out(str) {\n        if (str.indexOf('<svg') != -1) {\n            str = str.replace(/width=\"(\\d*)px\"\\s*height=\"(\\d*)px\"/, 'width=\"$1px\" height=\"$2px\" viewbox=\"0 0 $1 $2\"');\n            bxs = keySort(bxs), bys = keySort(bys);\n            if (bxs.length > 1 && // the first barline is at bxs[1] because bxs[0] == left side staff\n            bxs[1] < Math.min.apply(null, nxs)) {\n                // first barline < min x-coor of all notes in this line\n                bxs.splice(0, 1); // remove left side staff because there already is a left barline\n            }\n            bars.push({\n                'xs': bxs,\n                'ys': bys\n            });\n            bxs = {}, bys = {}, nxs = [];\n        }\n        muziek += str;\n    }\n\n    function svgInfo(type, s1, s2, x, y, w, h) {\n        if (type == 'note' || type == 'rest') nxs.push(abc2svg.sx(x)); // x-coor of notes/rests for left barline check\n        if (type == 'bar') {\n            x = abc2svg.sx(x).toFixed(2);\n            y = abc2svg.sy(y).toFixed(2);\n            bxs[x] = 1, bys[y] = 1;\n            xleft = abc2svg.sx(0).toFixed(2);\n            bxs[xleft] = 1;\n        }\n    }\n\n    function getTune(abctxt) {\n        var ts, t, abc_lines, i, ro;\n        abctxt = abctxt.replace(/\\r\\n/g, '\\n'); // \\r\\n matches /^$/ ==> each line would get an extra empty line!!!\n        ts = abctxt.split(/^\\s*X:/m); // split on X:, multi line search\n        if (ts.length == 1) return []; // no X:\n        t = ts[1].split(/^\\s*$/m); // split on empty lines\n        t = ts[0] + 'X:' + t[0]; // header + first tune\n        abc_lines = t.split(/\\r\\n|[\\n\\r\\u0085\\u2028\\u2029]/); // whoppa\n        for (i = 0; i < Math.min(100, abc_lines.length); ++i) {\n            ro = abc_lines[i].match(/%%scale\\s*([\\d.]+)/); // avoid %%scale 1.0, because different svg hierarchy\n            if (ro && ro[1] == 1.0) abc_lines[i] = '%%scale 0.99';\n        }\n        return abc_lines;\n    }\n\n    function timeLine(ts_p, voice_tb, music_types) {\n        var ts,\n            g,\n            ftempo = 384 * 120 / 60,\n            dtmp,\n            mdur = 0,\n            mt = 0,\n            nbeat,\n            lbtm = 0; // quarter duration 384, tempo 120\n        try {\n            nbeat = voice_tb[0].meter.a_meter[0].top;\n        } // first voice, first meter: {top: x, bot: y}\n        catch (e) {\n            nbeat = '4';\n        } // no meter defined in abc\n        for (ts = ts_p; ts; ts = ts.ts_next) {\n            if (ts.v != 0) continue; // skip voices > 0\n            for (g = ts.extra; g; g = g.next) {\n                if (g.type == TEMPO && g.tempo_notes) {\n                    dtmp = g.tempo_notes.reduce(function (sum, x) {\n                        return sum + x;\n                    });\n                    ftempo = dtmp * g.tempo / 60;\n                }\n            }\n            switch (ts.type) {\n                case NOTE:\n                case REST:\n                    mdur += ts.dur / ftempo;\n                    break;\n                case BAR:\n                    //~console.log('bar_type: ' + ts.bar_type + ' text: ' + ts.text);\n                    if (ts.time == lbtm) {\n                        mreps[mreps.length - 1] += ts.bar_type;\n                        break;\n                    } // concatenate left bar with previous\n                    if ('eoln' in ts) lbtm = ts.time; // to detect left bar at start of line\n                    mdurs.push(mdur);\n                    mdur = 0;\n                    nbeat = nbeat.replace('C|', '2').replace('C', '4');\n                    mbeats.push(parseInt(nbeat)); // array of beats per measure\n                    mreps.push(ts.bar_type);\n                    mtxts.push(ts.text);\n                    break;\n                case METER:\n                    nbeat = ts.a_meter[0].top;\n                    break;\n            }\n        }\n    }\n\n    function compPlayMap() {\n        var line = 0,\n            // (system) line index: 0..,\n        ibar = 1,\n            // measure index on line: 1..\n        nbars = bars[line].xs.length,\n            // number of measures on this line\n        mix = 0,\n            // total measure index: mix = 0.., total time index: tix = 1..\n        pbtime = 0,\n            // play back time\n        reptix = 1,\n            // total time index of start of repeat    (count includes repeats)\n        repmix = 0,\n            // total measure index of start of repeat (count excludes repeats)\n        repcnt = 1,\n            // 2 in second traversal\n        volta = 0; // 1..\n        // console.log(mtxts);\n        console.log(\"FIXME: Handle situaion when repeat bar is like this | : ... :| .... :|, instead of  | : ... :|: .... :|\");\n        //While go into infinite loop in the case above!\n        while (1) {\n            //console.log(\"Bars: \" + bars.length + \" line \" + line);\n            var v = mtxts[mix - 1]; // volta is on the previous measure\n            var r = v ? v.match(/[,\\d]*(\\d)/) : null; // last int is highest volta num\n            if (r) {\n                v = parseInt(r[1]);\n                if (v != volta) volta = v; // volta lasts until next volta\n            }\n            if (!volta || volta >= repcnt) // skip when repcnt > volta num\n                {\n                    pbtime += mdurs[mix];\n                    times.push(pbtime);\n                    tixbts.push(mbeats[mix]); // also unfold beats for metronome and count-in\n                    if (!lbtix[line]) lbtix[line] = [];\n                    if (!lbtix[line][ibar]) lbtix[line][ibar] = [];\n                    lbtix[line][ibar][repcnt] = tixlb.length;\n                    tixlb.push([line, ibar, repcnt]);\n                }\n            if (mreps[mix] != '|') volta = 0; // reset on any special bar line\n            var r = /^:/.test(mreps[mix]);\n            if (r && repcnt == 1 && !opt.repskip) {\n                // jump to start of repeat\n                repcnt = 2; // now second play\n                mix = repmix;\n                ibar = tixlb[reptix][1]; // bar index on this line\n                line = tixlb[reptix][0]; // line index\n                nbars = bars[line].xs.length; // number of measures on this line\n            } else {\n                if (r) repcnt = 1; // reset repcount\n                if (/:$/.test(mreps[mix])) {\n                    // define start of repeat\n                    reptix = tixlb.length;\n                    repmix = mix + 1;\n                    repcnt = 1; // first play\n                }\n                mix += 1; // go to next measure\n                ibar += 1;\n                if (ibar >= nbars) {\n                    // measure is on next line\n                    ibar = 1; // first bar index on this line\n                    line += 1; // next line\n                    if (line >= bars.length) break; // end of part\n                    nbars = bars[line].xs.length; // number of measures on this line\n                }\n            }\n        }\n    }\n    initGlobals();\n    var score = $('#notation');\n    $('body').attr('title', ''); // clear drag/drop help message\n    score.html(''); // clear notation area\n    var abc_lines = getTune(abctxt);\n    abctxt = abc_lines.join('\\n');\n\n    var user = {\n        'img_out': img_out,\n        'errmsg': errmsg,\n        'read_file': function (x) {\n            return '';\n        }, // %%abc-include, unused\n        'anno_start': svgInfo,\n        //'imagesize': 'width=\"'+SCORE_WIDTH+'\" height=\"110\"', //FIXME: Doesnt work!\n        'get_abcmodel': timeLine\n    };\n    abc2svg = new Abc(user);\n    abc2svg.tosvg('abc2svg', abctxt);\n    if (errtxt != '') $('#err').append(errtxt);\n    score.html(muziek);\n    msc_svgs = score.find('svg'); // all music lines\n    msc_svgs.css('overflow', 'visible');\n    msc_svgs.children('title').text(''); // avoid title popup's\n    var gs = msc_svgs.children('g'); // only the topmost g per svg\n    for (var i = 0; i < gs.length; ++i) {\n        msc_gs.push(gs.eq(i));\n    }\n    /*var wz_xs = [],\n        wz_ymin = [],\n        wz_ymax = [];*/\n    for (var i = 0; i < bars.length; ++i) {\n        // i = line number\n        var bs = bars[i]; // bars of line i\n        wz_xs[i] = bs.xs; // x coors of bars\n        wz_ymin[i] = bs.ys[0]; // min, max y coor of bar\n        wz_ymax[i] = bs.ys[bs.ys.length - 1];\n    }\n    compPlayMap();\n\n    //msc_svgs.each(function() {\n    //   $(this).mousedown(klik);\n    //}); // each music line gets the click handler\n\n    //setupSheet();\n    Waveform2Score(0, __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].getDuration(), 1, tixlb.length);\n}\n\n// Gets the measure from a click event on the SVG.\n// Not used right now because handled with DIV overlays instead.\nfunction klik(evt) {\n    // mousedown on svg\n    function x2time(x, line) {\n\n        function isBigEnough(element) {\n            return element >= x;\n        }\n\n        // Get the sfaff measure number from an X-value;\n        var measure = bars[line].xs.findIndex(isBigEnough) - 1;\n        var measure_width = bars[line].xs[measure + 1] - bars[line].xs[measure];\n\n        console.log(\"X: \" + x + \" , \" + \"measure: \" + measure + \" width: \" + measure_width);\n    }\n\n    evt.preventDefault();\n    evt.stopPropagation();\n    var line = msc_svgs.get().indexOf(this); // index of the clicked svg\n    var x = evt.clientX; // position click relative to page\n    x -= $(this).position().left; // minus (position left edge if svg relative to page)\n    x2time(x, line);\n}\n\n// Returns the coordinates of a box surrounding the given measure\n// FIXME: Find better solution for y-coordinates and height!\nfunction getCoordforMeasure(measure) {\n    var coord = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n    };\n\n    var positionArray = tixlb[measure];\n    var line = positionArray[0];\n    var bar = positionArray[1];\n\n    var xscale = 1; //$('svg')[0].getScreenCTM().a; // if svg is scaled, get the scale factor\n    coord.x = bars[line].xs[bar - 1] * xscale;\n    coord.width = (bars[line].xs[bar] - bars[line].xs[bar - 1]) * xscale;\n\n    // Add up heights from all previous lines above this line to get y value.  \n    for (var _l = line - 1; _l >= 0; _l--) {\n        //extract height from svg element, chop off \"px\" at the end.\n        coord.y += Number(msc_gs[_l][0].viewportElement.getAttribute('height').match(/\\d+/)[0]);\n    }\n\n    coord.height = Number(msc_gs[line][0].viewportElement.getAttribute('height').match(/\\d+/)[0]);\n\n    return coord;\n}\n\n//Draw a DIV box around given measure\nfunction createMeasureDIV(measure) {\n    var positionArray = tixlb[measure];\n    var line = positionArray[0];\n    var bar = positionArray[1];\n    //var measure_width = bars[line].xs[bar] - bars[line].xs[bar-1];\n    //var measure_height = bars[line].ys[bar] ;\n\n    var coord = getCoordforMeasure(measure);\n\n    var cursor = WijzerDIV(measure, line, coord.x, coord.y, coord.width, coord.height);\n    var score = $('#notation');\n    $(\"#\" + ANNO_ID + measure).remove(); // remove old\n    $(cursor).prependTo(score);\n    return cursor;\n}\n\n// Remove highlight styling from the DIVs in the global 'selectedDIVs' array.\nfunction clearOldSelectedDIVs() {\n    if (Object.prototype.toString.call(selectedDIVs) === '[object Array]') {\n        if (selectedDIVs.length < 1) return;\n        selectedDIVs.forEach(function (_div) {\n            $(_div).css('background-color', 'transparent');\n            $(_div).css('opacity', 0.35);\n            $(_div).css('border', 'none');\n        });\n    }\n}\n// Delete DIVs in the global 'selectedDIVs' array. For instance when \n// the user edits what section of the waveform should corresponds to selected measures in the score sheet.\n// Then we delete the old DIVs and create new ones ( in Waveform2Score() ).\nfunction deleteOldSelectedDIVs() {\n    if (Object.prototype.toString.call(selectedDIVs) === '[object Array]') {\n        if (selectedDIVs.length < 1) return;\n        selectedDIVs.forEach(function (_div) {\n            $(_div).remove();\n        });\n    }\n}\n// Looks in the global 'selectedDIVs' array and applies some styling to add highlight\n// FIXME: Use a class instead to pick styling from css file. \nfunction highlightSelectedDIVs() {\n    if (Object.prototype.toString.call(selectedDIVs) === '[object Array]') {\n        if (selectedDIVs.length < 1) return;\n        selectedDIVs.forEach(function (_div) {\n            var el = $(_div);\n            el.css('border-top', '1px dashed #000');\n            el.css('border-bottom', '1px dashed #000');\n            el.css('background-color', 'lightblue');\n            el.css('opacity', 0.35);\n        });\n        // Add left/right border to first and last DIV\n        $(selectedDIVs[0]).css('border-left', '1px dashed #000');\n        $(selectedDIVs[selectedDIVs.length - 1]).css('border-right', '1px dashed #000');\n    }\n}\n// Create measure overlay DIV's for measures between 'start' and 'end'. Return an array. \n//http://stackoverflow.com/questions/8069315/create-array-of-all-integers-between-two-numbers-inclusive-in-javascript-jquer\nfunction getDIVrange(start, end) {\n    var arr = Array(end - start + 1).fill().map((_, idx) => {\n        var el = $(\"#\" + ANNO_ID + (start + idx));\n        el.css('border-top', '1px dashed #000');\n        el.css('border-bottom', '1px dashed #000');\n        el.css('background-color', 'lightblue');\n        el.css('opacity', 0.35);\n        return el[0];\n    });\n    // Add left and right border to end elements\n    $(arr[0]).css('border-left', '1px dashed #000');\n    $(arr[arr.length - 1]).css('border-right', '1px dashed #000');\n    return arr;\n}\n\nfunction WijzerDIV(measure, line, x, y, width, height) {\n    // create the music cursor\n    var y_offset = -15;\n\n    var wijzer = document.createElement('div');\n    $(wijzer).attr('id', ANNO_ID + measure);\n    $(wijzer).css('overflow', 'visible');\n    $(wijzer).css('position', 'absolute');\n    $(wijzer).css('left', (x + 10).toFixed(2) + \"px\");\n    $(wijzer).css('top', y + y_offset + \"px\");\n    $(wijzer).css('height', height + \"px\");\n    $(wijzer).css('width', width.toFixed(2) + \"px\");\n    //$(wijzer).css ('background-color', 'lightblue');\n    $(wijzer).css('z-index', measure * -1);\n    $(wijzer).css('opacity', 0.35);\n    $(wijzer).css('margin-bottom', '3px');\n    //$(wijzer).css ('padding-top', '22px'); //center waveform on staff\n\n    $(wijzer).mousedown(function (evt) {\n        //console.log(evt);\n        selectedBars = [measure]; //Clear previous selection, and add this bar.\n        //console.log(\"Start Measure: \" + measure)\n    });\n\n    $(wijzer).mouseup(function (evt) {\n        if (currentMeasure == this) {\n            //console.log(\"End Measure: \" + measure);\n            selectedBars.push(measure);\n            //console.log(selectedBars);\n            var _highest = Math.max(...selectedBars);\n            var _lowest = Math.min(...selectedBars);\n            clearOldSelectedDIVs();\n            selectedDIVs = getDIVrange(_lowest, _highest);\n\n            var _start = elan.data.annotations[ANNO_ID + _lowest].start;\n            var _end = elan.data.annotations[ANNO_ID + _highest].end;\n            if (__WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].isPlaying()) __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].backend.play(_start, _end);\n        }\n    });\n\n    $(wijzer).mouseover(function (evt) {\n\n        var annot = elan.data.annotations[ANNO_ID + measure];\n\n        //wavesurfer.backend.play(annot.start, annot.end);\n        //console.log(evt);\n        //console.log(this);\n        if (currentMeasure == this) return;\n        //console.log(measure + \":\" + selectedBars[0]);\n\n        if (currentMeasure != null) {\n            //console.log(currentMeasure);\n            //console.log(document.getElementById(ANNO_ID + selectedBars[0]));\n            var _sel = document.getElementById(ANNO_ID + selectedBars[0]); // selectedBars[0] = first bar of an ongoing selection\n            //console.log(\"Current mesasure in selectedDIVs: \" + selectedDIVs.includes(currentMeasure));\n            if (currentMeasure != _sel && !selectedDIVs.includes(currentMeasure)) {\n                //dont deselect first bar of a selection while selecting\n                $(currentMeasure).css('background-color', 'transparent');\n                $(currentMeasure).css('opacity', 0.35);\n                $(currentMeasure).css('border', 'none');\n            } else {\n                $(currentMeasure).css('background-color', 'lightblue');\n            }\n        }\n\n        $(this).css('opacity', 0.35);\n        $(this).css('background-color', 'lightgreen');\n        $(wijzer).css('border', '1px dashed #000');\n        currentMeasure = this;\n    });\n    return wijzer;\n}\n\n// Link sheet measures with time segments in the waveform.\n// This creates DIV overlays on the score sheet for click interaction and\n// acts as placeholders for the smaller wave segments. \nfunction Waveform2Score(wave_start, wave_end, measure_start, measure_end) {\n    var wavesegment_options = {\n        container: '#waveform',\n        waveColor: '#dddddd',\n        progressColor: '#3498db',\n        loaderColor: 'purple',\n        cursorColor: '#e67e22',\n        cursorWidth: 1,\n        selectionColor: '#d0e9c6',\n        backend: 'WebAudio',\n        normalize: true,\n        loopSelection: false,\n        renderer: 'Canvas',\n        partialRender: true,\n        waveSegmentRenderer: 'Canvas',\n        waveSegmentHeight: 50,\n        height: 100,\n        barWidth: 2,\n        plotTimeEnd: __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].backend.getDuration(),\n        wavesurfer: __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */],\n        ELAN: elan,\n        wavesSegmentsArray,\n        scrollParent: false\n    };\n\n    var measure_duration = (wave_end - wave_start) / (measure_end - measure_start);\n\n    for (var i = measure_start; i < measure_end; i++) {\n        var msr = createMeasureDIV(i);\n        var rect = msr.getBoundingClientRect();\n\n        var waveSegmentPos = {\n            left: rect.left + \"px\",\n            top: rect.top + \"px\",\n            width: rect.width,\n            container: msr.getAttribute('id')\n        };\n\n        wavesSegmentsArray.push(waveSegmentPos);\n\n        var repris = tixlb[i][2];\n        var bpm = 60 / measure_duration * tixbts[i - 1];\n        console.log(\"tixbts:\" + tixbts[i - 1]);\n        elan.addAnnotation(ANNO_ID + i, wave_start + (i - measure_start) * measure_duration, wave_start + (i - measure_start + 1) * measure_duration, \"Bar \" + i + \" Rep \" + repris, \"BPM: \" + bpm);\n    }\n    elanWaveSegment.init(wavesegment_options);\n    highlightSelectedDIVs();\n}\n\nvar setupGrain = function (GrainDefs) {\n    var container = document.querySelector('#granular-engine-container');\n    container.innerHTML = \"\";\n\n    var self = __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].backend;\n\n    /* Initialize granular engine and draw slider */\n    for (var k in GrainDefs) {\n        //console.log(RangeValues[k]);\n        if (typeof __WEBPACK_IMPORTED_MODULE_1__defs_js__[\"c\" /* RangeValues */][k] !== 'undefined') {\n            //console.log(\"Key: \" + k);\n            var value = GrainDefs[k];\n            self.transportedGranularEngine[k] = value;\n            self.scheduledGranularEngine[k] = value;\n\n            // Curry function. Probably better ways to\n            // setup up the granular sliders, but can't \n            // figure it out at the moment.\n            var sliderFactory = function (k) {\n                return function (val) {\n                    new __WEBPACK_IMPORTED_MODULE_2_waves_basic_controllers___default.a.Slider(k, __WEBPACK_IMPORTED_MODULE_1__defs_js__[\"c\" /* RangeValues */][k].min, __WEBPACK_IMPORTED_MODULE_1__defs_js__[\"c\" /* RangeValues */][k].max, 0.001, value, \"\", '', container, function (val) {\n                        if (k === 'speed') {\n                            //self.playControl.speed = val;\n                            __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].setPlaybackRate(val);\n                        } else {\n                            self.transportedGranularEngine[k] = val;\n                            self.scheduledGranularEngine[k] = val;\n                        }\n                    });\n                };\n            };\n\n            var makeSlider = sliderFactory(k);\n            makeSlider(value);\n\n            //console.log(\"Key is \" + k + \", value is\" + self.transportedGranularEngine[k]);\n        }\n    }\n};\nvar setupEQ = function (EQ) {\n    // Create filters\n    var filters = EQ.map(function (band) {\n        var filter = __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].backend.ac.createBiquadFilter();\n        filter.type = band.type;\n        filter.gain.value = band.value;\n        filter.Q.value = 1;\n        filter.frequency.value = band.f;\n        return filter;\n    });\n\n    // Bind filters to vertical range sliders\n    var container = document.querySelector('#granular-engine-pitch-container');\n    container.innerHTML = \"\";\n    filters.forEach(function (filter, index) {\n        var input = document.createElement('input');\n        __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].util.extend(input, {\n            type: 'range',\n            min: -40,\n            max: 40,\n            value: filter.gain.value,\n            title: filter.frequency.value\n        });\n        input.style.display = 'inline-block';\n        input.setAttribute('orient', 'vertical');\n        __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].drawer.style(input, {\n            'webkitAppearance': 'slider-vertical',\n            width: '40px',\n            height: '150px'\n        });\n\n        var div = document.createElement('div');\n        div.style.display = 'inline-block';\n        div.innerHTML = '<p style=\"width:18px;max-width:8px;\" id=\"EQ_' + index + '_title\">' + filter.frequency.value + '</p>';\n        var div2 = document.createElement('div');\n        //div2.style.display = 'inline-block';\n        div2.innerHTML = '<p style=\"width:18px;max-width:8px;\" id=\"EQ_' + index + '\">' + filter.gain.value + '</p>';\n\n        div.appendChild(input);\n        div.appendChild(div2);\n        container.appendChild(div);\n\n        var onChange = function (e) {\n            filter.gain.value = ~~e.target.value;\n            var el = document.querySelector('#EQ_' + index);\n            el.innerHTML = filter.gain.value;\n        };\n\n        input.addEventListener('input', onChange);\n        input.addEventListener('change', onChange);\n    });\n\n    /* LIMITER */\n    var hardLimiter = __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].backend.ac.createDynamicsCompressor();\n    hardLimiter.threshold.value = -10.0; // this is the pitfall, leave some headroom\n    hardLimiter.knee.value = 0.0; // brute force\n    hardLimiter.ratio.value = 20.0; // max compression\n    hardLimiter.attack.value = 0.005; // 5ms attack\n    hardLimiter.release.value = 0.50; // 50ms release\n\n    filters.push(hardLimiter);\n    // Connect filters to wavesurfer\n    __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].backend.setFilters(filters);\n\n    // For debugging\n    __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].filters = filters;\n};\n\nvar setupDropdowns = function (e) {\n    $(\"#EQ_string_preset\").click(function (e) {\n        //do something\n        console.log(\"Loading string preset...\");\n        setupEQ(__WEBPACK_IMPORTED_MODULE_1__defs_js__[\"d\" /* EQ_CELLO */]);\n\n        e.preventDefault();\n    });\n\n    $(\"#EQ_percussion_preset\").click(function (e) {\n        //do something\n        console.log(\"Loading percussion preset...\");\n        setupEQ(__WEBPACK_IMPORTED_MODULE_1__defs_js__[\"e\" /* EQ_PERCUSSION */]);\n        e.preventDefault();\n    });\n\n    $(\"#Grain_string_preset\").click(function (e) {\n        //do something\n        console.log(\"Loading string preset...\");\n\n        setupGrain(__WEBPACK_IMPORTED_MODULE_1__defs_js__[\"f\" /* GrainDefs_Cello */]);\n        e.preventDefault();\n    });\n\n    $(\"#Grain_percussion_preset\").click(function (e) {\n        //do something\n        console.log(\"Loading percussion preset...\");\n        setupGrain(__WEBPACK_IMPORTED_MODULE_1__defs_js__[\"g\" /* GrainDefs_Perc */]);\n        e.preventDefault();\n    });\n};\n\nvar setupReverb = function () {\n    var reverbGain;\n    var audioContext = __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].backend.getAudioContext();\n    reverbjs.extend(audioContext);\n    // 2) Load the impulse response; upon load, connect it to the audio output.\n\n    var reverbUrl = \"https://rawgit.com/burnson/Reverb.js/master/Library/TyndallBruceMonument.m4a\";\n    //var reverbUrl = \"https://rawgit.com/burnson/Reverb.js/master/Library/KinoullAisle.m4a\";\n    var reverbNode = audioContext.createReverbFromUrl(reverbUrl, function () {\n        reverbGain = __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].backend.ac.createGain();\n        reverbGain.gain.value = 0.1;\n\n        reverbGain.connect(audioContext.destination);\n        reverbNode.connect(reverbGain);\n        __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].backend.gainNode.connect(reverbNode);\n    });\n};\n\n//wavesurfer.on('ready', function() {\ndocument.addEventListener('DOMContentLoaded', function () {\n\n    /* ELAN */\n    elan.on('select', function (start, end) {\n        //wavesurfer.backend.play(start, end);\n    });\n\n    //set up listener for when elan is done\n    elan.on('ready', function (data) {\n        //go load the wave form\n        //wavesurfer.load('./transcripts/001z.mp3');\n\n        //add some styling to elan table\n        var classList = elan.container.querySelector('table').classList;\n        ['table', 'table-striped', 'table-hover'].forEach(function (cl) {\n            classList.add(cl);\n        });\n    });\n\n    //Setup Elan actions\n    [].forEach.call(document.querySelectorAll('[data-action]'), function (el) {\n        el.addEventListener('click', function (e) {\n            var action = e.currentTarget.dataset.action;\n            if (action in ELAN_ACTIONS) {\n                e.preventDefault();\n                ELAN_ACTIONS[action](e);\n            }\n        });\n    });\n\n    //LOAD ELAN\n\n    function loadXMLDoc(dname) {\n        var xhttp;\n        if (window.XMLHttpRequest) {\n            xhttp = new XMLHttpRequest();\n        } else {\n            xhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\n        }\n        xhttp.open(\"GET\", dname, false);\n        xhttp.send();\n        return xhttp.responseXML;\n    }\n\n    //init elan\n    elan.init({\n        //url: './transcripts/001z.xml',\n        container: '#annotations',\n        tiers: {\n            Text: true,\n            Comments: true\n        }\n    });\n\n    var xmlDoc = loadXMLDoc(\"./transcripts/elan_template.xml\");\n    var x2js = new __WEBPACK_IMPORTED_MODULE_3__lib_xml2js_min_js___default.a();\n    var jsonObj = x2js.xml2json(xmlDoc);\n    var str = JSON.stringify(jsonObj, null, 2); // spacing level = 2\n    //console.log(str);\n\n    elan.loadJson(jsonObj);\n\n    __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].on('ready', function () {\n\n        __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].clearRegions();\n\n        // Regions\n        if (__WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].enableDragSelection) {\n            __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].enableDragSelection({\n                //color: 'rgba(41, 128, 185, 0.25)'\n                color: 'rgba(255, 60, 121, 0.64)'\n            });\n        }\n\n        //Setup some basic hooks\n        setupDropdowns();\n        setupGrain(GRAIN_DEFAULT);\n        setupEQ(EQ_DEFAULT);\n        setupReverb();\n\n        //LOAD ABC TUNE\n\n        //endtime_js = wavesurfer.getDuration();\n        //console.log(endtime_js);\n        // read text from URL location\n        var request = new XMLHttpRequest();\n        request.open('GET', './assets/tune.abc', true);\n        request.send(null);\n        request.onreadystatechange = function () {\n\n            if (request.readyState === 4 && request.status === 200) {\n                var type = request.getResponseHeader('Content-Type');\n                if (type.indexOf(\"text\") !== 1) {\n                    dolayout(request.responseText);\n                    return request.responseText;\n                }\n            }\n        };\n    });\n\n    var prevAnnotation, prevRow, region;\n    var onProgress = function (time) {\n        elanWaveSegment.onProgress(time);\n        var annotation = elan.getRenderedAnnotation(time);\n\n        if (prevAnnotation != annotation) {\n            prevAnnotation = annotation;\n\n            region && region.remove();\n            region = null;\n\n            if (annotation) {\n                //var audiotime = wavesurfer.getCurrentTime();\n                //console.log(\"time:\"+audiotime);\n\n                var bpm = 60 / (annotation.end - annotation.start) * tixbts[annotation.value - 1];\n                //console.log(bpm);\n                //wavesurfer.backend.setMetronome(bpm, 0);\n                // Highlight annotation table row\n                var row = elan.getAnnotationNode(annotation);\n                prevRow && prevRow.classList.remove('success');\n                prevRow = row;\n                row.classList.add('success');\n                //var before = row.previousSibling;\n                //if (before) {\n                //elan.container.scrollTop = before.offsetTop;\n                //}\n\n                // Region\n                region = __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].addRegion({\n                    id: \"playregion\",\n                    start: annotation.start,\n                    end: annotation.end,\n                    resize: false,\n                    drag: false,\n                    color: 'rgba(223, 240, 216, 0.7)'\n                });\n            }\n        } else if (region == null) {\n            region = __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].addRegion({\n                id: \"playregion\",\n                start: annotation.start,\n                end: annotation.end,\n                resize: false,\n                drag: false,\n                color: 'rgba(223, 240, 216, 0.7)'\n            });\n        }\n    };\n\n    __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].on('audioprocess', onProgress);\n    __WEBPACK_IMPORTED_MODULE_0__init_js__[\"a\" /* default */].on('pause', function () {\n        region && region.remove();\n        region = null;\n    });\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 218 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_wavesurfer__ = __webpack_require__(73);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_wavesurfer___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_wavesurfer__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_xml2js_min_js__ = __webpack_require__(76);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_xml2js_min_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__lib_xml2js_min_js__);\n\n\n\n\n\n\n// Create x2js instance with default config\nvar x2js = new __WEBPACK_IMPORTED_MODULE_1__lib_xml2js_min_js___default.a();\n\n__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"ELAN\"] = {\n    Types: {\n        ALIGNABLE_ANNOTATION: 'ALIGNABLE_ANNOTATION',\n        REF_ANNOTATION: 'REF_ANNOTATION'\n    },\n\n    init: function (params) {\n        this.data = null;\n        this.params = params;\n        this.container = 'string' == typeof params.container ? document.querySelector(params.container) : params.container;\n\n        if (!this.container) {\n            throw Error('No container for ELAN');\n        }\n\n        this.bindClick();\n\n        if (params.url) {\n            this.load(params.url);\n        }\n    },\n\n    load: function (url) {\n        var my = this;\n        this.loadXML(url, function (xml) {\n            my.data = my.parseElan(xml);\n            my.render();\n            my.fireEvent('ready', my.data);\n        });\n    },\n\n    loadXML: function (url, callback) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.responseType = 'document';\n        xhr.send();\n        xhr.addEventListener('load', function (e) {\n            callback && callback(e.target.responseXML);\n        });\n    },\n    loadJson: function (jsonObj) {\n        var xml = jQuery.parseXML(x2js.json2xml_str(jsonObj));\n        //console.log(xml);\n\n        this.data = this.parseElan(xml);\n        this.render();\n        this.fireEvent('ready', this.data);\n    },\n\n    parseElan: function (xml) {\n        var _forEach = Array.prototype.forEach;\n        var _map = Array.prototype.map;\n\n        var data = {\n            media: {},\n            timeOrder: {},\n            tiers: [],\n            annotations: {},\n            alignableAnnotations: []\n        };\n\n        var header = xml.querySelector('HEADER');\n        var inMilliseconds = header.getAttribute('TIME_UNITS') == 'milliseconds';\n        var media = header.querySelector('MEDIA_DESCRIPTOR');\n        data.media.url = media.getAttribute('MEDIA_URL');\n        data.media.type = media.getAttribute('MIME_TYPE');\n\n        var timeSlots = xml.querySelectorAll('TIME_ORDER TIME_SLOT');\n        var timeOrder = {};\n        _forEach.call(timeSlots, function (slot) {\n            var value = parseFloat(slot.getAttribute('TIME_VALUE'));\n            // If in milliseconds, convert to seconds with rounding\n            if (inMilliseconds) {\n                value = Math.round(value * 1e2) / 1e5;\n            }\n            timeOrder[slot.getAttribute('TIME_SLOT_ID')] = value;\n        });\n\n        data.tiers = _map.call(xml.querySelectorAll('TIER'), function (tier) {\n            return {\n                id: tier.getAttribute('TIER_ID'),\n                linguisticTypeRef: tier.getAttribute('LINGUISTIC_TYPE_REF'),\n                defaultLocale: tier.getAttribute('DEFAULT_LOCALE'),\n                annotations: _map.call(tier.querySelectorAll('REF_ANNOTATION, ALIGNABLE_ANNOTATION'), function (node) {\n                    var annot = {\n                        type: node.nodeName,\n                        id: node.getAttribute('ANNOTATION_ID'),\n                        ref: node.getAttribute('ANNOTATION_REF'),\n                        value: node.querySelector('ANNOTATION_VALUE').textContent.trim()\n                    };\n\n                    if (this.Types.ALIGNABLE_ANNOTATION == annot.type) {\n                        // Add start & end to alignable annotation\n                        annot.start = timeOrder[node.getAttribute('TIME_SLOT_REF1')];\n                        annot.end = timeOrder[node.getAttribute('TIME_SLOT_REF2')];\n\n                        // Add to the list of alignable annotations\n                        data.alignableAnnotations.push(annot);\n                    }\n\n                    // Additionally, put into the flat map of all annotations\n                    data.annotations[annot.id] = annot;\n\n                    return annot;\n                }, this)\n            };\n        }, this);\n\n        // Create JavaScript references between annotations\n        data.tiers.forEach(function (tier) {\n            tier.annotations.forEach(function (annot) {\n                if (null != annot.ref) {\n                    annot.reference = data.annotations[annot.ref];\n                }\n            }, this);\n        }, this);\n\n        // Sort alignable annotations by start & end\n        data.alignableAnnotations.sort(function (a, b) {\n            var d = a.start - b.start;\n            if (d == 0) {\n                d = b.end - a.end;\n            }\n            return d;\n        });\n\n        data.length = data.alignableAnnotations.length;\n\n        return data;\n    },\n    addAnnotation: function (aid, start, end, text, comment) {\n        var align_anno = this.data.annotations[aid];\n        if (align_anno == undefined) {\n            //Create new annotation\n            var id = this.data.length + 1;\n            //var aid = \"EDU\" + id;\n            var tid = \"TEXT\" + id;\n            var cid = \"COMMENT\" + id;\n\n            var align_anno = {\n                type: \"ALIGNABLE_ANNOTATION\",\n                id: aid,\n                ref: null,\n                value: id,\n                start: start,\n                end: end\n            };\n\n            var text_anno = {\n                type: \"REF_ANNOTATION\",\n                id: tid,\n                ref: aid,\n                reference: align_anno,\n                value: text\n            };\n\n            var comment_anno = {\n                type: \"REF_ANNOTATION\",\n                id: cid,\n                ref: aid,\n                reference: align_anno,\n                value: comment\n            };\n\n            this.data.alignableAnnotations.push(align_anno);\n            this.data.annotations[aid] = align_anno;\n            this.data.annotations[tid] = text_anno;\n            this.data.annotations[cid] = comment_anno;\n            this.data.length += 1;\n\n            this.data.tiers[0].annotations.push(align_anno);\n            this.data.tiers[1].annotations.push(text_anno);\n            this.data.tiers[2].annotations.push(comment_anno);\n            this.render();\n        } else this.updateAnnotation(aid, start, end, text, comment);\n    },\n    updateAnnotation: function (aid, start, end, text, comment) {\n        var align_anno = this.data.annotations[aid];\n        if (align_anno == undefined) return;\n\n        align_anno.start = start;\n        align_anno.end = end;\n\n        console.log(\"FIXME: add some error checking\");\n        var tid = \"TEXT\" + align_anno.value;\n        var cid = \"COMMENT\" + align_anno.value;\n\n        this.data.annotations[tid].value = text;\n        this.data.annotations[cid].value = comment;\n\n        this.render();\n    },\n    render: function () {\n        // apply tiers filter\n        var tiers = this.data.tiers;\n        if (this.params.tiers) {\n            tiers = tiers.filter(function (tier) {\n                return tier.id in this.params.tiers;\n            }, this);\n        }\n\n        // denormalize references to alignable annotations\n        var backRefs = {};\n        var indeces = {};\n        tiers.forEach(function (tier, index) {\n            tier.annotations.forEach(function (annot) {\n                if (annot.reference && annot.reference.type == this.Types.ALIGNABLE_ANNOTATION) {\n                    if (!(annot.reference.id in backRefs)) {\n                        backRefs[annot.ref] = {};\n                    }\n                    backRefs[annot.ref][index] = annot;\n                    indeces[index] = true;\n                }\n            }, this);\n        }, this);\n        indeces = Object.keys(indeces).sort();\n\n        this.renderedAlignable = this.data.alignableAnnotations.filter(function (alignable) {\n            return backRefs[alignable.id];\n        });\n\n        // table\n        var table = document.createElement('table');\n        table.className = 'wavesurfer-annotations table table-striped table-hover';\n\n        // head\n        var thead = document.createElement('thead');\n        var headRow = document.createElement('tr');\n        thead.appendChild(headRow);\n        table.appendChild(thead);\n        var th = document.createElement('th');\n        th.textContent = 'Time';\n        th.className = 'wavesurfer-time';\n        headRow.appendChild(th);\n        indeces.forEach(function (index) {\n            var tier = tiers[index];\n            var th = document.createElement('th');\n            th.className = 'wavesurfer-tier-' + tier.id;\n            th.textContent = tier.id;\n            th.style.width = this.params.tiers[tier.id];\n            headRow.appendChild(th);\n        }, this);\n\n        // body\n        var tbody = document.createElement('tbody');\n        table.appendChild(tbody);\n        this.renderedAlignable.forEach(function (alignable) {\n            var row = document.createElement('tr');\n            row.id = 'wavesurfer-alignable-' + alignable.id;\n            tbody.appendChild(row);\n\n            var td = document.createElement('td');\n            td.className = 'wavesurfer-time';\n            td.textContent = alignable.start.toFixed(1) + '–' + alignable.end.toFixed(1);\n            row.appendChild(td);\n\n            var backRef = backRefs[alignable.id];\n            indeces.forEach(function (index) {\n                var tier = tiers[index];\n                var td = document.createElement('td');\n                var annotation = backRef[index];\n                if (annotation) {\n                    td.id = 'wavesurfer-annotation-' + annotation.id;\n                    td.dataset.ref = alignable.id;\n                    td.dataset.start = alignable.start;\n                    td.dataset.end = alignable.end;\n                    td.textContent = annotation.value;\n                }\n                td.className = 'wavesurfer-tier-' + tier.id;\n                row.appendChild(td);\n            }, this);\n        }, this);\n\n        this.container.innerHTML = '';\n        this.container.appendChild(table);\n    },\n\n    bindClick: function () {\n        var my = this;\n        this.container.addEventListener('click', function (e) {\n            var ref = e.target.dataset.ref;\n            if (null != ref) {\n                var annot = my.data.annotations[ref];\n                if (annot) {\n                    my.fireEvent('select', annot.start, annot.end);\n                }\n            }\n        });\n    },\n\n    getRenderedAnnotation: function (time) {\n        var result;\n        this.renderedAlignable.some(function (annotation) {\n            if (annotation.start <= time && annotation.end >= time) {\n                result = annotation;\n                return true;\n            }\n            return false;\n        });\n        return result;\n    },\n\n    getAnnotationNode: function (annotation) {\n        return document.getElementById('wavesurfer-alignable-' + annotation.id);\n    }\n};\n\n__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"util\"].extend(__WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"ELAN\"], __WEBPACK_IMPORTED_MODULE_0_wavesurfer__[\"Observer\"]);//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 219 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__webaudio_ircam_js__ = __webpack_require__(74);\n\n//import * as WaveSurfer from 'wavesurfer'; \n// _MD_ Don't now if this is correct way to do it?!\n\n\nvar WaveSurfer = __WEBPACK_IMPORTED_MODULE_0__webaudio_ircam_js__[\"a\" /* default */].WaveSurfer;\n\n/**\n * The Elan Wave Segment Plugin for Wavesurfer is based upon the Elan Plugin\n * It uses the timings of the rendered annotations from the ELAN plugin\n * to render a separate wave for each separate line in the annotation table.\n *\n * This plugin should only be initialized once the\n *\n *\n * parameters that can be used at initialization are the following\n *\n * - ELAN:                       required - The ELAN instance used to parse the elan data\n * - wafesurver:                 required - The wavesurfer instance used to draw the original waveform\n * - waveSegmentWidth:           optional - The width of each wave segment (defaults to 200)\n * - waveSegmentPeaksPerSegment: optional - The number of peaks that should be drawn (defaults to 400)\n * - waveSegmentHeight:          optional - The height of each wave segment (defaults to 30)\n * - waveSegmentRenderer:        optional - The renderer (drawer) to be used for the wave segments\n * - waveSegmentNormalizeTo:     optional - What to normalize each wave segment to [whole, segment,none]\n * - waveSegmentBorderWidth:     optional - The width of the border of the container element\n * - waveSegmentBarHeight:       optional - the height of the peaks/bars (defaults to 1)\n */\nWaveSurfer.ELANWaveSegment = {\n\n    defaultParams: {\n        waveSegmentWidth: 200,\n        waveSegmentPeaksPerSegment: 200,\n        waveSegmentHeight: 30,\n        waveSegmentRenderer: 'Canvas',\n        waveSegmentNormalizeTo: 'whole',\n        waveSegmentBarHeight: 1,\n        waveSegmentBorderWidth: 1,\n        pixelRatio: window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI\n    },\n\n    //object attributes necessary for maintaining state\n    ELAN: null, //handle to the ELAN plugin\n    wavesurfer: null, //handle to the wavesurfer instance\n    waveSegments: [], //array of wavesurfer instances for each line\n    maxPeak: 0, //the maximum wave peak\n\n    /**\n     * Initialize the parameters and insert column and wave forms\n     * @param params\n     */\n    init: function (params) {\n        // Extract relevant parameters (or defaults)\n        this.params = WaveSurfer.util.extend(this.defaultParams, params);\n        this.ELAN = params.ELAN;\n        this.wavesurfer = params.wavesurfer;\n        this.waveSegments = [];\n        this.maxPeak = 0;\n        this.wavesSegmentsArray = params.wavesSegmentsArray;\n\n        //determine what we will be normalizing to\n        switch (this.params.waveSegmentNormalizeTo) {\n            case 'segment':\n                this.params.normalize = true;\n                break;\n            case 'whole':\n                this.calculateMaxPeak();\n                this.params.noramlize = false;\n                break;\n            default:\n                this.params.normalize = false;\n        }\n        this.addSegmentColumn();\n    },\n\n    /**\n     * Function to calculate the maximum peak in our whole audio clip\n     */\n    calculateMaxPeak: function () {\n        var totalPeaks = this.ELAN.renderedAlignable.length * this.params.waveSegmentWidth;\n\n        var peaks = this.wavesurfer.backend.getPeaks(totalPeaks, 0, totalPeaks);\n        var max = WaveSurfer.util.max(peaks);\n        var min = WaveSurfer.util.min(peaks);\n        this.maxPeak = -min > max ? -min : max;\n    },\n\n    /**\n     * uses the table created by Elan and adds a column header for the wave\n     * and then loops through each annotation row and creates a wave in each\n     */\n    addSegmentColumn: function () {\n\n        //grab all the rows in the ELAN table\n        var tableRows = this.ELAN.container.getElementsByTagName('tr');\n\n        //create the header column for the wave forms\n        var th = document.createElement('th');\n        th.textContent = 'Wave';\n        th.className = 'wavesurfer-wave';\n        th.setAttribute('style', 'width: ' + this.params.waveSegmentWidth + 'px');\n\n        //insert wave form column as the second column\n        //tableRows[0].insertBefore(th, tableRows[0].firstChild.nextSibling);\n\n        //loop through each row and add the table cell for the wave form\n        for (var i = 0; i < this.ELAN.renderedAlignable.length; i++) {\n            var annotationRow = this.ELAN.getAnnotationNode(this.ELAN.renderedAlignable[i]);\n\n            //create the td for the wave\n            var td = document.createElement('td');\n            td.className = 'wavesurfer-wave';\n\n            var container = document.querySelector('#notation');\n\n            //create the wave segment\n            this.appendWaveSegmentToElement(td, i);\n\n            //annotationRow.insertBefore(td, annotationRow.firstChild.nextSibling);\n        }\n    },\n\n    /**\n     * Gets the peaks for the specified start and end times of the segment\n     * @param startTime   the start time to begin generating peaks\n     * @param endTime     the end time to stop generating peaks\n     * @returns {Array}   array of interleaved positive and negative peaks\n     */\n    getPeaksForTimeSegment: function (startTime, endTime) {\n        var totalDuration = this.wavesurfer.backend.getDuration();\n        var segmentDuration = endTime - startTime;\n\n        //calculate the total number of peak by splitting our segment\n        var totalPeaks = totalDuration * this.params.waveSegmentPeaksPerSegment / segmentDuration;\n\n        var peakDuration = totalDuration / totalPeaks;\n\n        var startPeak = ~~(startTime / peakDuration);\n        var endPeak = ~~(endTime / peakDuration);\n\n        var peaks = this.wavesurfer.backend.getPeaks(totalPeaks, startPeak, endPeak);\n        var shiftedPeaks = [];\n        //shift the peak indexes back to 0\n        for (var i in peaks) {\n            if (this.params.waveSegmentNormalizeTo == 'whole') {\n                shiftedPeaks.push(peaks[i] / this.maxPeak);\n            } else {\n                shiftedPeaks.push(peaks[i]);\n            }\n        }\n        return shiftedPeaks;\n    },\n\n    //append the wave segment defined by the elanIndex to the element\n    appendWaveSegmentToElement: function (el, elanIndex) {\n        var line = this.ELAN.renderedAlignable[elanIndex];\n        var container = document.createElement('div');\n        var width = this.wavesSegmentsArray[elanIndex].width; //this.params.waveSegmentWidth;\n\n        container.style.position = \"absolute\";\n        container.style.width = (width + this.params.waveSegmentBorderWidth * 2).toString() + 'px';\n        container.style.height = this.params.waveSegmentHeight.toString() + 'px';\n        container.style.left = this.wavesSegmentsArray[elanIndex].left;\n        container.style.top = this.wavesSegmentsArray[elanIndex].top;\n        container.className = 'elan-wavesegment-container';\n\n        //el.appendChild(container);\n\n        var peaks = this.getPeaksForTimeSegment(line.start, line.end);\n\n        var drawerParams = this.params;\n        drawerParams.fillParent = true;\n        drawerParams.height = this.params.waveSegmentHeight;\n        drawerParams.barHeight = this.params.waveSegmentBarHeight;\n        drawerParams.plotTimeStart = line.start;\n        drawerParams.plotTimeEnd = line.end;\n        drawerParams.fillParent = true;\n        drawerParams.scrollParent = false;\n\n        var barelement = document.getElementById(this.wavesSegmentsArray[elanIndex].container);\n        //console.log(\"barelement\");\n        //console.log(barelement);\n        barelement.innerHTML = \"\";\n\n        //create the wave segmenet drawer and initialize in the container\n        this.waveSegments[elanIndex] = Object.create(WaveSurfer.Drawer[this.params.waveSegmentRenderer]);\n        this.waveSegments[elanIndex].init(barelement, drawerParams);\n        this.waveSegments[elanIndex].drawPeaks(peaks, width * this.params.pixelRatio, 0, this.params.waveSegmentPeaksPerSegment);\n\n        this.waveSegments[elanIndex].updateProgress(0);\n    },\n\n    /**\n     * Function to update the progress of the wave segments when time of the audio player is updated\n     * @param time - the current time of the audio\n     */\n    onProgress: function (time) {\n\n        for (var i = 0; i < this.waveSegments.length; i++) {\n            var start = this.ELAN.renderedAlignable[i].start;\n            var end = this.ELAN.renderedAlignable[i].end;\n            var progress;\n            var width = this.wavesSegmentsArray[i].width; //this.params.waveSegmentWidth;\n\n            //player has not reached this segment yet - set not started\n            if (start > time) {\n                progress = 0;\n            }\n            //player has already passed this segment - set complete\n            else if (end < time) {\n                    progress = width;\n                }\n                //find what percentage has been complete and set\n                else {\n                        var completion = (time - start) / (end - start);\n                        progress = completion * width;\n                    }\n\n            this.waveSegments[i].updateProgress(progress);\n        }\n    }\n\n};\n\nWaveSurfer.util.extend(WaveSurfer.ELANWaveSegment, WaveSurfer.Observer);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL3NyYy93YXZlc3VyZmVyLmVsYW4td2F2ZS1zZWdtZW50LmpzPzVmMDUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy9pbXBvcnQgKiBhcyBXYXZlU3VyZmVyIGZyb20gJ3dhdmVzdXJmZXInOyBcbi8vIF9NRF8gRG9uJ3Qgbm93IGlmIHRoaXMgaXMgY29ycmVjdCB3YXkgdG8gZG8gaXQ/IVxuaW1wb3J0IFdhdmVTdXJmZXJFUzYgZnJvbSAnLi93ZWJhdWRpb19pcmNhbS5qcyc7XG52YXIgV2F2ZVN1cmZlciA9IFdhdmVTdXJmZXJFUzYuV2F2ZVN1cmZlcjtcblxuLyoqXG4gKiBUaGUgRWxhbiBXYXZlIFNlZ21lbnQgUGx1Z2luIGZvciBXYXZlc3VyZmVyIGlzIGJhc2VkIHVwb24gdGhlIEVsYW4gUGx1Z2luXG4gKiBJdCB1c2VzIHRoZSB0aW1pbmdzIG9mIHRoZSByZW5kZXJlZCBhbm5vdGF0aW9ucyBmcm9tIHRoZSBFTEFOIHBsdWdpblxuICogdG8gcmVuZGVyIGEgc2VwYXJhdGUgd2F2ZSBmb3IgZWFjaCBzZXBhcmF0ZSBsaW5lIGluIHRoZSBhbm5vdGF0aW9uIHRhYmxlLlxuICpcbiAqIFRoaXMgcGx1Z2luIHNob3VsZCBvbmx5IGJlIGluaXRpYWxpemVkIG9uY2UgdGhlXG4gKlxuICpcbiAqIHBhcmFtZXRlcnMgdGhhdCBjYW4gYmUgdXNlZCBhdCBpbml0aWFsaXphdGlvbiBhcmUgdGhlIGZvbGxvd2luZ1xuICpcbiAqIC0gRUxBTjogICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkIC0gVGhlIEVMQU4gaW5zdGFuY2UgdXNlZCB0byBwYXJzZSB0aGUgZWxhbiBkYXRhXG4gKiAtIHdhZmVzdXJ2ZXI6ICAgICAgICAgICAgICAgICByZXF1aXJlZCAtIFRoZSB3YXZlc3VyZmVyIGluc3RhbmNlIHVzZWQgdG8gZHJhdyB0aGUgb3JpZ2luYWwgd2F2ZWZvcm1cbiAqIC0gd2F2ZVNlZ21lbnRXaWR0aDogICAgICAgICAgIG9wdGlvbmFsIC0gVGhlIHdpZHRoIG9mIGVhY2ggd2F2ZSBzZWdtZW50IChkZWZhdWx0cyB0byAyMDApXG4gKiAtIHdhdmVTZWdtZW50UGVha3NQZXJTZWdtZW50OiBvcHRpb25hbCAtIFRoZSBudW1iZXIgb2YgcGVha3MgdGhhdCBzaG91bGQgYmUgZHJhd24gKGRlZmF1bHRzIHRvIDQwMClcbiAqIC0gd2F2ZVNlZ21lbnRIZWlnaHQ6ICAgICAgICAgIG9wdGlvbmFsIC0gVGhlIGhlaWdodCBvZiBlYWNoIHdhdmUgc2VnbWVudCAoZGVmYXVsdHMgdG8gMzApXG4gKiAtIHdhdmVTZWdtZW50UmVuZGVyZXI6ICAgICAgICBvcHRpb25hbCAtIFRoZSByZW5kZXJlciAoZHJhd2VyKSB0byBiZSB1c2VkIGZvciB0aGUgd2F2ZSBzZWdtZW50c1xuICogLSB3YXZlU2VnbWVudE5vcm1hbGl6ZVRvOiAgICAgb3B0aW9uYWwgLSBXaGF0IHRvIG5vcm1hbGl6ZSBlYWNoIHdhdmUgc2VnbWVudCB0byBbd2hvbGUsIHNlZ21lbnQsbm9uZV1cbiAqIC0gd2F2ZVNlZ21lbnRCb3JkZXJXaWR0aDogICAgIG9wdGlvbmFsIC0gVGhlIHdpZHRoIG9mIHRoZSBib3JkZXIgb2YgdGhlIGNvbnRhaW5lciBlbGVtZW50XG4gKiAtIHdhdmVTZWdtZW50QmFySGVpZ2h0OiAgICAgICBvcHRpb25hbCAtIHRoZSBoZWlnaHQgb2YgdGhlIHBlYWtzL2JhcnMgKGRlZmF1bHRzIHRvIDEpXG4gKi9cbldhdmVTdXJmZXIuRUxBTldhdmVTZWdtZW50ID0ge1xuXG4gICAgZGVmYXVsdFBhcmFtczoge1xuICAgICAgICB3YXZlU2VnbWVudFdpZHRoOiAyMDAsXG4gICAgICAgIHdhdmVTZWdtZW50UGVha3NQZXJTZWdtZW50OiAyMDAsXG4gICAgICAgIHdhdmVTZWdtZW50SGVpZ2h0OiAzMCxcbiAgICAgICAgd2F2ZVNlZ21lbnRSZW5kZXJlcjogJ0NhbnZhcycsXG4gICAgICAgIHdhdmVTZWdtZW50Tm9ybWFsaXplVG86ICd3aG9sZScsXG4gICAgICAgIHdhdmVTZWdtZW50QmFySGVpZ2h0OiAxLFxuICAgICAgICB3YXZlU2VnbWVudEJvcmRlcldpZHRoOiAxLFxuICAgICAgICBwaXhlbFJhdGlvOiB3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyB8fCBzY3JlZW4uZGV2aWNlWERQSSAvIHNjcmVlbi5sb2dpY2FsWERQSVxuICAgIH0sXG5cbiAgICAvL29iamVjdCBhdHRyaWJ1dGVzIG5lY2Vzc2FyeSBmb3IgbWFpbnRhaW5pbmcgc3RhdGVcbiAgICBFTEFOOiBudWxsLCAvL2hhbmRsZSB0byB0aGUgRUxBTiBwbHVnaW5cbiAgICB3YXZlc3VyZmVyOiBudWxsLCAvL2hhbmRsZSB0byB0aGUgd2F2ZXN1cmZlciBpbnN0YW5jZVxuICAgIHdhdmVTZWdtZW50czogW10sIC8vYXJyYXkgb2Ygd2F2ZXN1cmZlciBpbnN0YW5jZXMgZm9yIGVhY2ggbGluZVxuICAgIG1heFBlYWs6IDAsIC8vdGhlIG1heGltdW0gd2F2ZSBwZWFrXG5cbiAgICAvKipcbiAgICAgKiBJbml0aWFsaXplIHRoZSBwYXJhbWV0ZXJzIGFuZCBpbnNlcnQgY29sdW1uIGFuZCB3YXZlIGZvcm1zXG4gICAgICogQHBhcmFtIHBhcmFtc1xuICAgICAqL1xuICAgIGluaXQ6IGZ1bmN0aW9uKHBhcmFtcykge1xuICAgICAgICAvLyBFeHRyYWN0IHJlbGV2YW50IHBhcmFtZXRlcnMgKG9yIGRlZmF1bHRzKVxuICAgICAgICB0aGlzLnBhcmFtcyA9IFdhdmVTdXJmZXIudXRpbC5leHRlbmQodGhpcy5kZWZhdWx0UGFyYW1zLCBwYXJhbXMpO1xuICAgICAgICB0aGlzLkVMQU4gPSBwYXJhbXMuRUxBTjtcbiAgICAgICAgdGhpcy53YXZlc3VyZmVyID0gcGFyYW1zLndhdmVzdXJmZXI7XG4gICAgICAgIHRoaXMud2F2ZVNlZ21lbnRzID0gW107XG4gICAgICAgIHRoaXMubWF4UGVhayA9IDA7XG4gICAgICAgIHRoaXMud2F2ZXNTZWdtZW50c0FycmF5ID0gcGFyYW1zLndhdmVzU2VnbWVudHNBcnJheTtcblxuICAgICAgICAvL2RldGVybWluZSB3aGF0IHdlIHdpbGwgYmUgbm9ybWFsaXppbmcgdG9cbiAgICAgICAgc3dpdGNoICh0aGlzLnBhcmFtcy53YXZlU2VnbWVudE5vcm1hbGl6ZVRvKSB7XG4gICAgICAgICAgICBjYXNlICdzZWdtZW50JzpcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmFtcy5ub3JtYWxpemUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnd2hvbGUnOlxuICAgICAgICAgICAgICAgIHRoaXMuY2FsY3VsYXRlTWF4UGVhaygpO1xuICAgICAgICAgICAgICAgIHRoaXMucGFyYW1zLm5vcmFtbGl6ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmFtcy5ub3JtYWxpemUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmFkZFNlZ21lbnRDb2x1bW4oKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gY2FsY3VsYXRlIHRoZSBtYXhpbXVtIHBlYWsgaW4gb3VyIHdob2xlIGF1ZGlvIGNsaXBcbiAgICAgKi9cbiAgICBjYWxjdWxhdGVNYXhQZWFrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHRvdGFsUGVha3MgPSB0aGlzLkVMQU4ucmVuZGVyZWRBbGlnbmFibGUubGVuZ3RoICogdGhpcy5wYXJhbXMud2F2ZVNlZ21lbnRXaWR0aDtcblxuICAgICAgICB2YXIgcGVha3MgPSB0aGlzLndhdmVzdXJmZXIuYmFja2VuZC5nZXRQZWFrcyh0b3RhbFBlYWtzLCAwLCB0b3RhbFBlYWtzKTtcbiAgICAgICAgdmFyIG1heCA9IFdhdmVTdXJmZXIudXRpbC5tYXgocGVha3MpO1xuICAgICAgICB2YXIgbWluID0gV2F2ZVN1cmZlci51dGlsLm1pbihwZWFrcyk7XG4gICAgICAgIHRoaXMubWF4UGVhayA9IC1taW4gPiBtYXggPyAtbWluIDogbWF4O1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiB1c2VzIHRoZSB0YWJsZSBjcmVhdGVkIGJ5IEVsYW4gYW5kIGFkZHMgYSBjb2x1bW4gaGVhZGVyIGZvciB0aGUgd2F2ZVxuICAgICAqIGFuZCB0aGVuIGxvb3BzIHRocm91Z2ggZWFjaCBhbm5vdGF0aW9uIHJvdyBhbmQgY3JlYXRlcyBhIHdhdmUgaW4gZWFjaFxuICAgICAqL1xuICAgIGFkZFNlZ21lbnRDb2x1bW46IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIC8vZ3JhYiBhbGwgdGhlIHJvd3MgaW4gdGhlIEVMQU4gdGFibGVcbiAgICAgICAgdmFyIHRhYmxlUm93cyA9IHRoaXMuRUxBTi5jb250YWluZXIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3RyJyk7XG5cbiAgICAgICAgLy9jcmVhdGUgdGhlIGhlYWRlciBjb2x1bW4gZm9yIHRoZSB3YXZlIGZvcm1zXG4gICAgICAgIHZhciB0aCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RoJyk7XG4gICAgICAgIHRoLnRleHRDb250ZW50ID0gJ1dhdmUnO1xuICAgICAgICB0aC5jbGFzc05hbWUgPSAnd2F2ZXN1cmZlci13YXZlJztcbiAgICAgICAgdGguc2V0QXR0cmlidXRlKCdzdHlsZScsICd3aWR0aDogJyArIHRoaXMucGFyYW1zLndhdmVTZWdtZW50V2lkdGggKyAncHgnKTtcblxuICAgICAgICAvL2luc2VydCB3YXZlIGZvcm0gY29sdW1uIGFzIHRoZSBzZWNvbmQgY29sdW1uXG4gICAgICAgIC8vdGFibGVSb3dzWzBdLmluc2VydEJlZm9yZSh0aCwgdGFibGVSb3dzWzBdLmZpcnN0Q2hpbGQubmV4dFNpYmxpbmcpO1xuXG4gICAgICAgIC8vbG9vcCB0aHJvdWdoIGVhY2ggcm93IGFuZCBhZGQgdGhlIHRhYmxlIGNlbGwgZm9yIHRoZSB3YXZlIGZvcm1cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLkVMQU4ucmVuZGVyZWRBbGlnbmFibGUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBhbm5vdGF0aW9uUm93ID0gdGhpcy5FTEFOLmdldEFubm90YXRpb25Ob2RlKHRoaXMuRUxBTi5yZW5kZXJlZEFsaWduYWJsZVtpXSk7XG5cbiAgICAgICAgICAgIC8vY3JlYXRlIHRoZSB0ZCBmb3IgdGhlIHdhdmVcbiAgICAgICAgICAgIHZhciB0ZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XG4gICAgICAgICAgICB0ZC5jbGFzc05hbWUgPSAnd2F2ZXN1cmZlci13YXZlJztcblxuXG4gICAgICAgICAgICB2YXIgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI25vdGF0aW9uJyk7XG5cbiAgICAgICAgICAgIC8vY3JlYXRlIHRoZSB3YXZlIHNlZ21lbnRcbiAgICAgICAgICAgIHRoaXMuYXBwZW5kV2F2ZVNlZ21lbnRUb0VsZW1lbnQodGQsIGkpO1xuXG4gICAgICAgICAgICAvL2Fubm90YXRpb25Sb3cuaW5zZXJ0QmVmb3JlKHRkLCBhbm5vdGF0aW9uUm93LmZpcnN0Q2hpbGQubmV4dFNpYmxpbmcpO1xuICAgICAgICB9XG4gICAgfSxcblxuXG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgcGVha3MgZm9yIHRoZSBzcGVjaWZpZWQgc3RhcnQgYW5kIGVuZCB0aW1lcyBvZiB0aGUgc2VnbWVudFxuICAgICAqIEBwYXJhbSBzdGFydFRpbWUgICB0aGUgc3RhcnQgdGltZSB0byBiZWdpbiBnZW5lcmF0aW5nIHBlYWtzXG4gICAgICogQHBhcmFtIGVuZFRpbWUgICAgIHRoZSBlbmQgdGltZSB0byBzdG9wIGdlbmVyYXRpbmcgcGVha3NcbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9ICAgYXJyYXkgb2YgaW50ZXJsZWF2ZWQgcG9zaXRpdmUgYW5kIG5lZ2F0aXZlIHBlYWtzXG4gICAgICovXG4gICAgZ2V0UGVha3NGb3JUaW1lU2VnbWVudDogZnVuY3Rpb24oc3RhcnRUaW1lLCBlbmRUaW1lKSB7XG4gICAgICAgIHZhciB0b3RhbER1cmF0aW9uID0gdGhpcy53YXZlc3VyZmVyLmJhY2tlbmQuZ2V0RHVyYXRpb24oKTtcbiAgICAgICAgdmFyIHNlZ21lbnREdXJhdGlvbiA9IGVuZFRpbWUgLSBzdGFydFRpbWU7XG5cbiAgICAgICAgLy9jYWxjdWxhdGUgdGhlIHRvdGFsIG51bWJlciBvZiBwZWFrIGJ5IHNwbGl0dGluZyBvdXIgc2VnbWVudFxuICAgICAgICB2YXIgdG90YWxQZWFrcyA9IHRvdGFsRHVyYXRpb24gKiB0aGlzLnBhcmFtcy53YXZlU2VnbWVudFBlYWtzUGVyU2VnbWVudCAvIHNlZ21lbnREdXJhdGlvbjtcblxuICAgICAgICB2YXIgcGVha0R1cmF0aW9uID0gdG90YWxEdXJhdGlvbiAvIHRvdGFsUGVha3M7XG5cbiAgICAgICAgdmFyIHN0YXJ0UGVhayA9IH5+KHN0YXJ0VGltZSAvIHBlYWtEdXJhdGlvbik7XG4gICAgICAgIHZhciBlbmRQZWFrID0gfn4oZW5kVGltZSAvIHBlYWtEdXJhdGlvbik7XG5cbiAgICAgICAgdmFyIHBlYWtzID0gdGhpcy53YXZlc3VyZmVyLmJhY2tlbmQuZ2V0UGVha3ModG90YWxQZWFrcywgc3RhcnRQZWFrLCBlbmRQZWFrKTtcbiAgICAgICAgdmFyIHNoaWZ0ZWRQZWFrcyA9IFtdO1xuICAgICAgICAvL3NoaWZ0IHRoZSBwZWFrIGluZGV4ZXMgYmFjayB0byAwXG4gICAgICAgIGZvciAodmFyIGkgaW4gcGVha3MpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnBhcmFtcy53YXZlU2VnbWVudE5vcm1hbGl6ZVRvID09ICd3aG9sZScpIHtcbiAgICAgICAgICAgICAgICBzaGlmdGVkUGVha3MucHVzaChwZWFrc1tpXSAvIHRoaXMubWF4UGVhayk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHNoaWZ0ZWRQZWFrcy5wdXNoKHBlYWtzW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2hpZnRlZFBlYWtzO1xuICAgIH0sXG5cblxuICAgIC8vYXBwZW5kIHRoZSB3YXZlIHNlZ21lbnQgZGVmaW5lZCBieSB0aGUgZWxhbkluZGV4IHRvIHRoZSBlbGVtZW50XG4gICAgYXBwZW5kV2F2ZVNlZ21lbnRUb0VsZW1lbnQ6IGZ1bmN0aW9uKGVsLCBlbGFuSW5kZXgpIHtcbiAgICAgICAgdmFyIGxpbmUgPSB0aGlzLkVMQU4ucmVuZGVyZWRBbGlnbmFibGVbZWxhbkluZGV4XTtcbiAgICAgICAgdmFyIGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICB2YXIgd2lkdGggPSB0aGlzLndhdmVzU2VnbWVudHNBcnJheVtlbGFuSW5kZXhdLndpZHRoOyAvL3RoaXMucGFyYW1zLndhdmVTZWdtZW50V2lkdGg7XG5cbiAgICAgICAgY29udGFpbmVyLnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xuICAgICAgICBjb250YWluZXIuc3R5bGUud2lkdGggPSAod2lkdGggKyAodGhpcy5wYXJhbXMud2F2ZVNlZ21lbnRCb3JkZXJXaWR0aCAqIDIpKS50b1N0cmluZygpICsgJ3B4JztcbiAgICAgICAgY29udGFpbmVyLnN0eWxlLmhlaWdodCA9IHRoaXMucGFyYW1zLndhdmVTZWdtZW50SGVpZ2h0LnRvU3RyaW5nKCkgKyAncHgnO1xuICAgICAgICBjb250YWluZXIuc3R5bGUubGVmdCA9IHRoaXMud2F2ZXNTZWdtZW50c0FycmF5W2VsYW5JbmRleF0ubGVmdDtcbiAgICAgICAgY29udGFpbmVyLnN0eWxlLnRvcCA9IHRoaXMud2F2ZXNTZWdtZW50c0FycmF5W2VsYW5JbmRleF0udG9wO1xuICAgICAgICBjb250YWluZXIuY2xhc3NOYW1lID0gJ2VsYW4td2F2ZXNlZ21lbnQtY29udGFpbmVyJztcblxuICAgICAgICAvL2VsLmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG5cbiAgICAgICAgdmFyIHBlYWtzID0gdGhpcy5nZXRQZWFrc0ZvclRpbWVTZWdtZW50KGxpbmUuc3RhcnQsIGxpbmUuZW5kKTtcblxuXG4gICAgICAgIHZhciBkcmF3ZXJQYXJhbXMgPSB0aGlzLnBhcmFtcztcbiAgICAgICAgZHJhd2VyUGFyYW1zLmZpbGxQYXJlbnQgPSB0cnVlO1xuICAgICAgICBkcmF3ZXJQYXJhbXMuaGVpZ2h0ID0gdGhpcy5wYXJhbXMud2F2ZVNlZ21lbnRIZWlnaHQ7XG4gICAgICAgIGRyYXdlclBhcmFtcy5iYXJIZWlnaHQgPSB0aGlzLnBhcmFtcy53YXZlU2VnbWVudEJhckhlaWdodDtcbiAgICAgICAgZHJhd2VyUGFyYW1zLnBsb3RUaW1lU3RhcnQgPSBsaW5lLnN0YXJ0O1xuICAgICAgICBkcmF3ZXJQYXJhbXMucGxvdFRpbWVFbmQgPSBsaW5lLmVuZDtcbiAgICAgICAgZHJhd2VyUGFyYW1zLmZpbGxQYXJlbnQgPSB0cnVlO1xuICAgICAgICBkcmF3ZXJQYXJhbXMuc2Nyb2xsUGFyZW50ID0gZmFsc2U7XG5cbiAgICAgICAgdmFyIGJhcmVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0aGlzLndhdmVzU2VnbWVudHNBcnJheVtlbGFuSW5kZXhdLmNvbnRhaW5lcik7XG4gICAgICAgIC8vY29uc29sZS5sb2coXCJiYXJlbGVtZW50XCIpO1xuICAgICAgICAvL2NvbnNvbGUubG9nKGJhcmVsZW1lbnQpO1xuICAgICAgICBiYXJlbGVtZW50LmlubmVySFRNTCA9IFwiXCI7XG5cbiAgICAgICAgLy9jcmVhdGUgdGhlIHdhdmUgc2VnbWVuZXQgZHJhd2VyIGFuZCBpbml0aWFsaXplIGluIHRoZSBjb250YWluZXJcbiAgICAgICAgdGhpcy53YXZlU2VnbWVudHNbZWxhbkluZGV4XSA9IE9iamVjdC5jcmVhdGUoV2F2ZVN1cmZlci5EcmF3ZXJbdGhpcy5wYXJhbXMud2F2ZVNlZ21lbnRSZW5kZXJlcl0pO1xuICAgICAgICB0aGlzLndhdmVTZWdtZW50c1tlbGFuSW5kZXhdLmluaXQoYmFyZWxlbWVudCwgZHJhd2VyUGFyYW1zKTtcbiAgICAgICAgdGhpcy53YXZlU2VnbWVudHNbZWxhbkluZGV4XS5kcmF3UGVha3MocGVha3MsIHdpZHRoICogdGhpcy5wYXJhbXMucGl4ZWxSYXRpbywgMCwgdGhpcy5wYXJhbXMud2F2ZVNlZ21lbnRQZWFrc1BlclNlZ21lbnQpO1xuXG4gICAgICAgIHRoaXMud2F2ZVNlZ21lbnRzW2VsYW5JbmRleF0udXBkYXRlUHJvZ3Jlc3MoMCk7XG5cbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gdXBkYXRlIHRoZSBwcm9ncmVzcyBvZiB0aGUgd2F2ZSBzZWdtZW50cyB3aGVuIHRpbWUgb2YgdGhlIGF1ZGlvIHBsYXllciBpcyB1cGRhdGVkXG4gICAgICogQHBhcmFtIHRpbWUgLSB0aGUgY3VycmVudCB0aW1lIG9mIHRoZSBhdWRpb1xuICAgICAqL1xuICAgIG9uUHJvZ3Jlc3M6IGZ1bmN0aW9uKHRpbWUpIHtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMud2F2ZVNlZ21lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgc3RhcnQgPSB0aGlzLkVMQU4ucmVuZGVyZWRBbGlnbmFibGVbaV0uc3RhcnQ7XG4gICAgICAgICAgICB2YXIgZW5kID0gdGhpcy5FTEFOLnJlbmRlcmVkQWxpZ25hYmxlW2ldLmVuZDtcbiAgICAgICAgICAgIHZhciBwcm9ncmVzcztcbiAgICAgICAgICAgIHZhciB3aWR0aCA9IHRoaXMud2F2ZXNTZWdtZW50c0FycmF5W2ldLndpZHRoOyAvL3RoaXMucGFyYW1zLndhdmVTZWdtZW50V2lkdGg7XG5cbiAgICAgICAgICAgIC8vcGxheWVyIGhhcyBub3QgcmVhY2hlZCB0aGlzIHNlZ21lbnQgeWV0IC0gc2V0IG5vdCBzdGFydGVkXG4gICAgICAgICAgICBpZiAoc3RhcnQgPiB0aW1lKSB7XG4gICAgICAgICAgICAgICAgcHJvZ3Jlc3MgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy9wbGF5ZXIgaGFzIGFscmVhZHkgcGFzc2VkIHRoaXMgc2VnbWVudCAtIHNldCBjb21wbGV0ZVxuICAgICAgICAgICAgZWxzZSBpZiAoZW5kIDwgdGltZSkge1xuICAgICAgICAgICAgICAgIHByb2dyZXNzID0gd2lkdGg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL2ZpbmQgd2hhdCBwZXJjZW50YWdlIGhhcyBiZWVuIGNvbXBsZXRlIGFuZCBzZXRcbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciBjb21wbGV0aW9uID0gKHRpbWUgLSBzdGFydCkgLyAoZW5kIC0gc3RhcnQpO1xuICAgICAgICAgICAgICAgIHByb2dyZXNzID0gY29tcGxldGlvbiAqIHdpZHRoO1xuICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgIHRoaXMud2F2ZVNlZ21lbnRzW2ldLnVwZGF0ZVByb2dyZXNzKHByb2dyZXNzKTtcblxuICAgICAgICB9XG4gICAgfVxuXG5cbn07XG5cbldhdmVTdXJmZXIudXRpbC5leHRlbmQoV2F2ZVN1cmZlci5FTEFOV2F2ZVNlZ21lbnQsIFdhdmVTdXJmZXIuT2JzZXJ2ZXIpO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvd2F2ZXN1cmZlci5lbGFuLXdhdmUtc2VnbWVudC5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUkE7QUFDQTtBQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBV0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBO0FBQ0E7QUFIQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUF4TUE7QUFDQTtBQTJNQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 220 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__webaudio_ircam_js__ = __webpack_require__(74);\n\n\n\nvar WaveSurfer = __WEBPACK_IMPORTED_MODULE_0__webaudio_ircam_js__[\"a\" /* default */].WaveSurfer;\n\nWaveSurfer.Timeline = {\n    init: function (params) {\n        this.params = params;\n        var wavesurfer = this.wavesurfer = params.wavesurfer;\n\n        if (!this.wavesurfer) {\n            throw Error('No WaveSurfer instance provided');\n        }\n\n        var drawer = this.drawer = this.wavesurfer.drawer;\n\n        this.container = 'string' == typeof params.container ? document.querySelector(params.container) : params.container;\n\n        if (!this.container) {\n            throw Error('No container for WaveSurfer timeline');\n        }\n\n        this.width = drawer.width;\n        this.pixelRatio = this.drawer.params.pixelRatio;\n        this.maxCanvasWidth = drawer.maxCanvasWidth || this.width;\n        this.maxCanvasElementWidth = drawer.maxCanvasElementWidth || Math.round(this.maxCanvasWidth / this.pixelRatio);\n        this.height = this.params.height || 20;\n        this.notchPercentHeight = this.params.notchPercentHeight || 90;\n        this.primaryColor = this.params.primaryColor || '#000';\n        this.secondaryColor = this.params.secondaryColor || '#c0c0c0';\n        this.primaryFontColor = this.params.primaryFontColor || '#000';\n        this.secondaryFontColor = this.params.secondaryFontColor || '#000';\n        this.fontFamily = this.params.fontFamily || 'Arial';\n        this.fontSize = this.params.fontSize || 10;\n        this.timeInterval = this.params.timeInterval;\n        this.primaryLabelInterval = this.params.primaryLabelInterval;\n        this.secondaryLabelInterval = this.params.secondaryLabelInterval;\n        this.formatTimeCallback = this.params.formatTimeCallback;\n        this.canvases = [];\n\n        this.createWrapper();\n        this.render();\n\n        drawer.wrapper.addEventListener('scroll', function (e) {\n            this.updateScroll(e);\n        }.bind(this));\n\n        this._onRedraw = wavesurfer.on('redraw', this.render.bind(this));\n        this._onZoom = wavesurfer.on('zoom', this.render.bind(this));\n        this._onDestroy = wavesurfer.on('destroy', this.destroy.bind(this));\n    },\n\n    destroy: function () {\n        // Unsubscribe from internal wavesurfer events\n        this._onRedraw.un();\n        this._onZoom.un();\n        this._onDestroy.un();\n\n        // Unsubscribe from external timeline events\n        this.unAll();\n\n        if (this.wrapper && this.wrapper.parentNode) {\n            this.wrapper.parentNode.removeChild(this.wrapper);\n            this.wrapper = null;\n        }\n    },\n\n    createWrapper: function () {\n        var prevTimeline = this.container.querySelector('timeline');\n        if (prevTimeline) {\n            this.container.removeChild(prevTimeline);\n        }\n\n        var wsParams = this.wavesurfer.params;\n        this.wrapper = this.container.appendChild(document.createElement('timeline'));\n        this.drawer.style(this.wrapper, {\n            display: 'block',\n            position: 'absolute',\n            bottom: '0px',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.height + 'px'\n        });\n\n        if (wsParams.fillParent || wsParams.scrollParent) {\n            this.drawer.style(this.wrapper, {\n                width: '100%',\n                overflowX: 'hidden',\n                overflowY: 'hidden'\n            });\n        }\n\n        var my = this;\n        this.wrapper.addEventListener('click', function (e) {\n            e.preventDefault();\n            var relX = 'offsetX' in e ? e.offsetX : e.layerX;\n            my.fireEvent('click', relX / my.wrapper.scrollWidth || 0);\n        });\n    },\n\n    removeOldCanvases: function () {\n        while (this.canvases.length > 0) {\n            var canvas = this.canvases.pop();\n            canvas.parentElement.removeChild(canvas);\n        }\n    },\n\n    createCanvases: function () {\n        this.removeOldCanvases();\n\n        var totalWidth = Math.round(this.drawer.wrapper.scrollWidth),\n            requiredCanvases = Math.ceil(totalWidth / this.maxCanvasElementWidth),\n            canvas;\n\n        for (var i = 0; i < requiredCanvases; i++) {\n            canvas = this.wrapper.appendChild(document.createElement('canvas'));\n            this.canvases.push(canvas);\n            this.drawer.style(canvas, {\n                position: 'absolute',\n                zIndex: 4\n            });\n        }\n    },\n\n    render: function () {\n        this.createCanvases();\n        this.updateCanvasStyle();\n        this.drawTimeCanvases();\n    },\n\n    updateCanvasStyle: function () {\n        var requiredCanvases = this.canvases.length;\n        for (var i = 0; i < requiredCanvases; i++) {\n            var canvas = this.canvases[i],\n                canvasWidth = this.maxCanvasElementWidth;\n\n            if (i === requiredCanvases - 1) {\n                canvasWidth = this.drawer.wrapper.scrollWidth - this.maxCanvasElementWidth * (requiredCanvases - 1);\n            }\n\n            canvas.width = canvasWidth * this.pixelRatio;\n            canvas.height = this.height * this.pixelRatio;\n            canvas.style.width = canvasWidth + 'px';\n            canvas.style.height = this.height + 'px';\n            canvas.style.left = i * this.maxCanvasElementWidth + 'px';\n        }\n    },\n\n    drawTimeCanvases: function () {\n        var backend = this.wavesurfer.backend,\n            wsParams = this.wavesurfer.params,\n            duration = backend.getDuration(),\n            self = this;\n\n        if (wsParams.fillParent && !wsParams.scrollParent) {\n            var width = this.drawer.getWidth();\n        } else {\n            width = this.drawer.wrapper.scrollWidth * wsParams.pixelRatio;\n        }\n        var pixelsPerSecond = width / duration;\n\n        if (duration <= 0) {\n            return;\n        }\n\n        var curPixel = 0,\n            curSeconds = 0,\n            totalSeconds = parseInt(duration, 10) + 1,\n            formatTime = function (seconds) {\n            if (typeof self.formatTimeCallback === 'function') {\n                return self.formatTimeCallback(seconds);\n            }\n\n            if (seconds / 60 > 1) {\n                var minutes = parseInt(seconds / 60),\n                    seconds = parseInt(seconds % 60);\n                seconds = seconds < 10 ? '0' + seconds : seconds;\n                return '' + minutes + ':' + seconds;\n            } else {\n                return seconds;\n            }\n        };\n\n        if (pixelsPerSecond * 1 >= 25) {\n            var timeInterval = 1;\n            var primaryLabelInterval = 10;\n            var secondaryLabelInterval = 5;\n        } else if (pixelsPerSecond * 5 >= 25) {\n            var timeInterval = 5;\n            var primaryLabelInterval = 6;\n            var secondaryLabelInterval = 2;\n        } else if (pixelsPerSecond * 15 >= 25) {\n            var timeInterval = 15;\n            var primaryLabelInterval = 4;\n            var secondaryLabelInterval = 2;\n        } else {\n            var timeInterval = Math.ceil(0.5 / pixelsPerSecond) * 60;\n            var primaryLabelInterval = 4;\n            var secondaryLabelInterval = 2;\n        }\n\n        timeInterval = this.timeInterval || timeInterval;\n        primaryLabelInterval = this.primaryLabelInterval || primaryLabelInterval;\n        secondaryLabelInterval = this.secondaryLabelInterval || secondaryLabelInterval;\n\n        var height1 = this.height - 4,\n            height2 = this.height * (this.notchPercentHeight / 100.0) - 4,\n            fontSize = this.fontSize * wsParams.pixelRatio;\n\n        for (var i = 0; i < totalSeconds / timeInterval; i++) {\n            if (i % primaryLabelInterval == 0) {\n                this.setFillStyles(this.primaryColor);\n                this.fillRect(curPixel, 0, 1, height1);\n                this.setFonts(fontSize + 'px ' + this.fontFamily);\n                this.setFillStyles(this.primaryFontColor);\n                this.fillText(formatTime(curSeconds), curPixel + 5, height1);\n            } else if (i % secondaryLabelInterval == 0) {\n                this.setFillStyles(this.secondaryColor);\n                this.fillRect(curPixel, 0, 1, height1);\n                this.setFonts(fontSize + 'px ' + this.fontFamily);\n                this.setFillStyles(this.secondaryFontColor);\n                this.fillText(formatTime(curSeconds), curPixel + 5, height1);\n            } else {\n                this.setFillStyles(this.secondaryColor);\n                this.fillRect(curPixel, 0, 1, height2);\n            }\n\n            curSeconds += timeInterval;\n            curPixel += pixelsPerSecond * timeInterval;\n        }\n    },\n\n    setFillStyles: function (fillStyle) {\n        for (var i = 0; i < this.canvases.length; i++) {\n            this.canvases[i].getContext('2d').fillStyle = fillStyle;\n        }\n    },\n\n    setFonts: function (font) {\n        for (var i = 0; i < this.canvases.length; i++) {\n            this.canvases[i].getContext('2d').font = font;\n        }\n    },\n\n    fillRect: function (x, y, width, height) {\n        for (var i = 0; i < this.canvases.length; i++) {\n            var canvas = this.canvases[i],\n                leftOffset = i * this.maxCanvasWidth;\n\n            var intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(x + width, i * this.maxCanvasWidth + canvas.width),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                canvas.getContext('2d').fillRect(intersection.x1 - leftOffset, intersection.y1, intersection.x2 - intersection.x1, intersection.y2 - intersection.y1);\n            }\n        }\n    },\n\n    fillText: function (text, x, y) {\n        var textWidth,\n            xOffset = 0;\n\n        for (var i = 0; i < this.canvases.length; i++) {\n            var context = this.canvases[i].getContext('2d'),\n                canvasWidth = context.canvas.width;\n\n            if (xOffset > x + textWidth) {\n                break;\n            }\n\n            if (xOffset + canvasWidth > x) {\n                textWidth = context.measureText(text).width;\n                context.fillText(text, x - xOffset, y);\n            }\n\n            xOffset += canvasWidth;\n        }\n    },\n\n    updateScroll: function () {\n        this.wrapper.scrollLeft = this.drawer.wrapper.scrollLeft;\n    }\n};\n\nWaveSurfer.util.extend(WaveSurfer.Timeline, WaveSurfer.Observer);//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 221 */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcz8zNjk4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBnO1xyXG5cclxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcclxuZyA9IChmdW5jdGlvbigpIHtcclxuXHRyZXR1cm4gdGhpcztcclxufSkoKTtcclxuXHJcbnRyeSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXHJcblx0ZyA9IGcgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpIHx8ICgxLGV2YWwpKFwidGhpc1wiKTtcclxufSBjYXRjaChlKSB7XHJcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcclxuXHRpZih0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKVxyXG5cdFx0ZyA9IHdpbmRvdztcclxufVxyXG5cclxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxyXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xyXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGc7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vICh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qc1xuLy8gbW9kdWxlIGlkID0gMjIxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 222 */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })
/******/ ]);